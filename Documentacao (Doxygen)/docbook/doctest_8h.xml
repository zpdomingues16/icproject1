<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_doctest_8h" xml:lang="en-US">
<title>AudioFile/tests/doctest/doctest.h File Reference</title>
<indexterm><primary>AudioFile/tests/doctest/doctest.h</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classdoctest_1_1_string">doctest::String</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_test_case_data">doctest::TestCaseData</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_assert_data">doctest::AssertData</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_message_data">doctest::MessageData</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_subcase_signature">doctest::SubcaseSignature</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_i_context_scope">doctest::IContextScope</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_context_options">doctest::ContextOptions</link></para>

<para>OCLINT too many fields. </para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1remove__reference">doctest::detail::remove_reference&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1remove__reference_3_01_t_01_6_01_4">doctest::detail::remove_reference&lt; T &amp; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1remove__reference_3_01_t_01_6_6_01_4">doctest::detail::remove_reference&lt; T &amp;&amp; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1remove__const">doctest::detail::remove_const&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1remove__const_3_01const_01_t_01_4">doctest::detail::remove_const&lt; const T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1deferred__false">doctest::detail::deferred_false&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1has__insertion__operator__impl_1_1check">doctest::detail::has_insertion_operator_impl::check&lt; class, class &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1has__insertion__operator__impl_1_1check_3_01_t_00_01decltype_07os_07_8d91d0ae55ab2b557e111ab3ba9c02da">doctest::detail::has_insertion_operator_impl::check&lt; T, decltype(os()&lt;&lt; val&lt; T &gt;(), void())&gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_string_maker_base">doctest::detail::StringMakerBase&lt; C &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_string_maker_base_3_01true_01_4">doctest::detail::StringMakerBase&lt; true &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_string_maker">doctest::StringMaker&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_string_maker_3_01_t_01_5_01_4">doctest::StringMaker&lt; T * &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_string_maker_3_01_r_01_c_1_1_5_01_4">doctest::StringMaker&lt; R C::* &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_classdoctest_1_1_approx">doctest::Approx</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_test_failure_exception">doctest::detail::TestFailureException</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_subcase">doctest::detail::Subcase</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_result">doctest::detail::Result</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_expression_decomposer">doctest::detail::ExpressionDecomposer</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_test_suite">doctest::detail::TestSuite</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_test_case">doctest::detail::TestCase</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_relational_comparator">doctest::detail::RelationalComparator&lt; int, L, R &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_result_builder">doctest::detail::ResultBuilder</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_i_exception_translator">doctest::detail::IExceptionTranslator</link></para>
</listitem>
            <listitem><para>class <link linkend="_classdoctest_1_1detail_1_1_exception_translator">doctest::detail::ExceptionTranslator&lt; T &gt;</link></para>

<para>OCLINT destructor of virtual class. </para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_string_stream_base">doctest::detail::StringStreamBase&lt; C &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_string_stream_base_3_01true_01_4">doctest::detail::StringStreamBase&lt; true &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_string_stream">doctest::detail::StringStream&lt; T &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_classdoctest_1_1detail_1_1_context_scope_base">doctest::detail::ContextScopeBase</link></para>
</listitem>
            <listitem><para>class <link linkend="_classdoctest_1_1detail_1_1_context_scope">doctest::detail::ContextScope&lt; L &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1detail_1_1_message_builder">doctest::detail::MessageBuilder</link></para>
</listitem>
            <listitem><para>class <link linkend="_classdoctest_1_1_context">doctest::Context</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_current_test_case_stats">doctest::CurrentTestCaseStats</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_test_case_exception">doctest::TestCaseException</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_test_run_stats">doctest::TestRunStats</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_query_data">doctest::QueryData</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_i_reporter">doctest::IReporter</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacedoctest">doctest</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1_color">doctest::Color</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1assert_type">doctest::assertType</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1detail">doctest::detail</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1detail_1_1has__insertion__operator__impl">doctest::detail::has_insertion_operator_impl</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1detail_1_1binary_assert_comparison">doctest::detail::binaryAssertComparison</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1detail_1_1assert_action">doctest::detail::assertAction</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest__detail__test__suite__ns">doctest_detail_test_suite_ns</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1_test_case_failure_reason">doctest::TestCaseFailureReason</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_doctest_8h_1abdf99655d65d9241c5d7c9f2d06e5e30">DOCTEST_VERSION_MAJOR</link>   2</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a70d4541211eec8116bdedd0e210b1e14">DOCTEST_VERSION_MINOR</link>   4</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a38cca3b310e7460ee3da69d6a18989e9">DOCTEST_VERSION_PATCH</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a253eba2b38340341a13e1111d66b2e83">DOCTEST_VERSION_STR</link>   &quot;2.4.0&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a6402112d77ca243a4052cac07a383d78">DOCTEST_VERSION</link>       (<link linkend="_doctest_8h_1abdf99655d65d9241c5d7c9f2d06e5e30">DOCTEST_VERSION_MAJOR</link> * 10000 + <link linkend="_doctest_8h_1a70d4541211eec8116bdedd0e210b1e14">DOCTEST_VERSION_MINOR</link> * 100 + <link linkend="_doctest_8h_1a38cca3b310e7460ee3da69d6a18989e9">DOCTEST_VERSION_PATCH</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a04223c76a58ee7c4f865afb6d57d048f">DOCTEST_COMPILER</link>(MAJOR,  MINOR,  PATCH)   ((MAJOR)*10000000 + (MINOR)*100000 + (PATCH))</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac15060779a07a8f5ffc6af7543283a6a">DOCTEST_MSVC</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa8185dcb93ad97061498679342d1e683">DOCTEST_CLANG</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a219d4642ee4e9c1bfc047a3a785db450">DOCTEST_GCC</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a628491cf2971a026350d5401986bf6d3">DOCTEST_CLANG_SUPPRESS_WARNING_PUSH</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1abfc21b2dc3aad9632b9e2689f468646c">DOCTEST_CLANG_SUPPRESS_WARNING</link>(w)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a569dfd3f8dfae352f35e8f62aadbdbc4">DOCTEST_CLANG_SUPPRESS_WARNING_POP</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aeffeb8afb2053d165c856f4ee520b62b">DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH</link>(w)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8015d10af2883db80a955ce0d523886d">DOCTEST_GCC_SUPPRESS_WARNING_PUSH</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a361747fc17fa1c6609c3cc939b4fc983">DOCTEST_GCC_SUPPRESS_WARNING</link>(w)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a656f7b58766e5e82f1799da962ebc17c">DOCTEST_GCC_SUPPRESS_WARNING_POP</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a93a351e10b8ce997502f34e89a755b6e">DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH</link>(w)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aec6d713a9dde361b8e68afe78c5bf3cf">DOCTEST_MSVC_SUPPRESS_WARNING_PUSH</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac5c55a5916aeff43fc7c2b61a41bcd88">DOCTEST_MSVC_SUPPRESS_WARNING</link>(w)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a540e6314c4b71317f3459f0117e14bc8">DOCTEST_MSVC_SUPPRESS_WARNING_POP</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2199aafb8016ab6daca23c2cc6170428">DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH</link>(w)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad3e5c37dc8bd7b0f9346c99c6aab2d1d">DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1acca96650713994a51c3deb8e4bdec43d">DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END</link>   <link linkend="_doctest_8h_1a540e6314c4b71317f3459f0117e14bc8">DOCTEST_MSVC_SUPPRESS_WARNING_POP</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a03d1f35ae32484c0778dc0130e41de35">DOCTEST_CONFIG_POSIX_SIGNALS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8d99d050db88cb183c1d02bba4e798b0">DOCTEST_CONFIG_NO_EXCEPTIONS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a631e7295c7abd3a071464fae6be07250">DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a73d94c36ae63bc0a9e3ec982e38fd7b7">DOCTEST_SYMBOL_EXPORT</link>   __attribute__((visibility(&quot;default&quot;)))</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4fd9f1ce2de2fad78a45972c2ee216d4">DOCTEST_SYMBOL_IMPORT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab46a6d1a6d00f0bda5fcf8b93966a20a">DOCTEST_EMPTY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a47e9d3609dfcc90b9a630ff33b9524d6">DOCTEST_NOINLINE</link>   __attribute__((noinline))</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a478c7f3eb127a7edbcc8577154deebba">DOCTEST_UNUSED</link>   __attribute__((unused))</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a74415dda5235fab1484227e6e6d8e7f4">DOCTEST_ALIGNMENT</link>(x)   __attribute__((aligned(x)))</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4ef00bd4c0653f31a2e60e5e5f2fcf10">DOCTEST_NORETURN</link>   [[noreturn]]</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a0a3c492342c533baad7b21af7903e6b4">DOCTEST_NOEXCEPT</link>   noexcept</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a3e1308af156afd15b2abde1ebe778421">DOCTEST_CAT_IMPL</link>(s1,  s2)   s1##s2</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa13d3659f8aef0e4de7eab8eb5a70888">DOCTEST_CAT</link>(s1,  s2)   <link linkend="_doctest_8h_1a3e1308af156afd15b2abde1ebe778421">DOCTEST_CAT_IMPL</link>(s1, s2)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(x)   <link linkend="_doctest_8h_1aa13d3659f8aef0e4de7eab8eb5a70888">DOCTEST_CAT</link>(x, __LINE__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa928e63972e4bc49fcf27641202f2f38">DOCTEST_TOSTR</link>(x)   #x</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(x)   x&amp;</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab406f77503c1d83ed403a310ccc1cd15">DOCTEST_PLATFORM_LINUX</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1abd2d1219232b25808d0210ba7aedd9dc">DOCTEST_GLOBAL_NO_WARNINGS</link>(var)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a0f4c6a7a429f8b6cc27f96939dd76fca">DOCTEST_GLOBAL_NO_WARNINGS_END</link>()   <link linkend="_doctest_8h_1a569dfd3f8dfae352f35e8f62aadbdbc4">DOCTEST_CLANG_SUPPRESS_WARNING_POP</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a156f7857b0e423d51c56ea8398d0cb94">DOCTEST_BREAK_INTO_DEBUGGER</link>()   ((void)0)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a758d9627ba7331f195ffbba94e5931a1">DOCTEST_STD_NAMESPACE_BEGIN</link>   namespace std {</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac0ed37fb9c99f6ea1ce9c3e1b73e3dec">DOCTEST_STD_NAMESPACE_END</link>   }</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a924a81d1115ba1ad170b51800e46d3cf">DOCTEST_DO_BINARY_EXPRESSION_COMPARISON</link>(op,  op_str,  op_macro)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a004774d0eca7e70aee66a4a80b3aa1c8">DOCTEST_FORBIT_EXPRESSION</link>(rt,  op)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4a746a6cb24ff5b89c7b9a86a20335e8">DOCTEST_COMPARISON_RETURN_TYPE</link>   bool</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2fb9073f4525cca30d5a8bb5d32f62c4">DOCTEST_RELATIONAL_OP</link>(name,  op)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1affded31d2dc937d95785e3d17332765b">DOCTEST_CMP_EQ</link>(l,  r)   l == r</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4848f1d467fb5ef1dae4f31d56b8760a">DOCTEST_CMP_NE</link>(l,  r)   l != r</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a6cd6ec78f910453372adbdca54d28e96">DOCTEST_CMP_GT</link>(l,  r)   l &gt; r</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad17ac1cc3242c45a461b1364c13cde55">DOCTEST_CMP_LT</link>(l,  r)   l &lt; r</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8d05cc6960a068bd84bc215d98112973">DOCTEST_CMP_GE</link>(l,  r)   l &gt;= r</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a324adcbcbb7e31481c2f619a5a0d5a56">DOCTEST_CMP_LE</link>(l,  r)   l &lt;= r</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a709ccd44cac02b9af890e6e1880e406e">DOCTEST_BINARY_RELATIONAL_OP</link>(n,  op)       template &lt;class L, class R&gt; struct RelationalComparator&lt;n, L, R&gt; { bool operator()(const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(L) lhs, const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(R) rhs) const { return op(lhs, rhs); } };</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab4f2e4a4e2bbb1ea221db5cdf117a014">DOCTEST_ASSERT_OUT_OF_TESTS</link>(decomp)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a91330bd2fb42d1fac4aa07e425a20f2e">DOCTEST_ASSERT_IN_TESTS</link>(decomp)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a70e5d466aeb2ec395124cd6366b08499">DOCTEST_DEFINE_DECORATOR</link>(name,  type,  def)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8e164a058ac26ae189718da03547f9fd">DOCTEST_ASSERT_LOG_AND_REACT</link>(b)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a1a2d400bbc1f72aa743406f7cf3c82d2">DOCTEST_WRAP_IN_TRY</link>(x)   x;</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a70f4ca15fe554a44bb0e2b8109e45822">DOCTEST_CAST_TO_VOID</link>(...)   __VA_ARGS__;</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4013e1a0072df7e0451eea33cabd543b">DOCTEST_REGISTER_FUNCTION</link>(global_prefix,  f,  decorators)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa8af5c48ea69801e9405f3c126535ced">DOCTEST_IMPLEMENT_FIXTURE</link>(der,  base,  func,  decorators)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1acc08da2add47137024ca50062129be4b">DOCTEST_CREATE_AND_REGISTER_FUNCTION</link>(f,  decorators)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4e084d2cf8ff31bcd011a8291a3d2afd">DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS</link>(f,  proxy,  decorators)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac1216c5a9ba44f5af8b7115a3badaae2">DOCTEST_TEST_CASE</link>(decorators)       <link linkend="_doctest_8h_1acc08da2add47137024ca50062129be4b">DOCTEST_CREATE_AND_REGISTER_FUNCTION</link>(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_FUNC_), decorators)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a41431265482f363020f93a13e4af4c6a">DOCTEST_TEST_CASE_CLASS</link>(...)       TEST_CASES_CAN_BE_REGISTERED_IN_CLASSES_ONLY_IN_CPP17_MODE_OR_WITH_VS_2017_OR_NEWER</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a22130c0eff96eac3ed682b7d8854e0f6">DOCTEST_TEST_CASE_FIXTURE</link>(c,  decorators)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a46b09edcbd9aa9ddb23c5ca122d89e7b">DOCTEST_TYPE_TO_STRING_IMPL</link>(...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a568e1d22f39724c8d3eb8addf4bf8e72">DOCTEST_TYPE_TO_STRING</link>(...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a1e7dceba02e92851f643bb02f1d11323">DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL</link>(dec,  T,  iter,  func)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a7c264a83f95bfae9a0e5d86c9d4c8fe3">DOCTEST_TEST_CASE_TEMPLATE_DEFINE</link>(dec,  T,  id)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1adbeb741905468853f543135077e78a91">DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL</link>(id,  anon, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac36f9261802a5321792358196104f4e6">DOCTEST_TEST_CASE_TEMPLATE_INVOKE</link>(id, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8722d97b6087d098bbd796801a347767">DOCTEST_TEST_CASE_TEMPLATE_APPLY</link>(id, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8c38d979f3976eef812acf150d1d13bd">DOCTEST_TEST_CASE_TEMPLATE_IMPL</link>(dec,  T,  anon, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab84667702ff8411d0444261796972374">DOCTEST_TEST_CASE_TEMPLATE</link>(dec,  T, ...)       <link linkend="_doctest_8h_1a8c38d979f3976eef812acf150d1d13bd">DOCTEST_TEST_CASE_TEMPLATE_IMPL</link>(dec, T, <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_TMP_), __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(name)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5440333d43133ec8d0206bfcfbbe84ca">DOCTEST_TEST_SUITE_IMPL</link>(decorators,  ns_name)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa64ce392f41c8ba1d22cfb5b83847f55">DOCTEST_TEST_SUITE</link>(decorators)       <link linkend="_doctest_8h_1a5440333d43133ec8d0206bfcfbbe84ca">DOCTEST_TEST_SUITE_IMPL</link>(decorators, <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_SUITE_))</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a64f9649162581c1c24a78e65cf01492f">DOCTEST_TEST_SUITE_BEGIN</link>(decorators)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a3ca1fc8ae12659768e3226db19a2c7ee">DOCTEST_TEST_SUITE_END</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a1462272403885d4f5749449535a7897e">DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL</link>(translatorName,  signature)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac61710def0b8698d89bce297532d0017">DOCTEST_REGISTER_EXCEPTION_TRANSLATOR</link>(signature)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a97757bf089f108cf8842727213bf3299">DOCTEST_REGISTER_REPORTER</link>(name,  priority,  reporter)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a03161a703cc44e07384c4a0981a13c86">DOCTEST_REGISTER_LISTENER</link>(name,  priority,  reporter)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(expression)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad9dcba31d109a3c817589232f3fc32de">DOCTEST_INFO_IMPL</link>(lambda_name,  mb_name,  s_name,  expression)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5a8ade28d558f5fcb66f8493d0596e6c">DOCTEST_CAPTURE</link>(x)   <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(#x &quot; := &quot; &lt;&lt; x)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a81441260ac032623cb3bd27c661d7ca9">DOCTEST_ADD_AT_IMPL</link>(type,  file,  line,  mb,  x)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a367ca236dba71ee4c0889b6911f658b1">DOCTEST_ADD_MESSAGE_AT</link>(file,  line,  x)   <link linkend="_doctest_8h_1a81441260ac032623cb3bd27c661d7ca9">DOCTEST_ADD_AT_IMPL</link>(is_warn, file, line, <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_MESSAGE_), x)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a7a719fa6c010be31ae8836fe26482ce7">DOCTEST_ADD_FAIL_CHECK_AT</link>(file,  line,  x)   <link linkend="_doctest_8h_1a81441260ac032623cb3bd27c661d7ca9">DOCTEST_ADD_AT_IMPL</link>(is_check, file, line, <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_MESSAGE_), x)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa1254f2ec6ce34a8cb67405627eff668">DOCTEST_ADD_FAIL_AT</link>(file,  line,  x)   <link linkend="_doctest_8h_1a81441260ac032623cb3bd27c661d7ca9">DOCTEST_ADD_AT_IMPL</link>(is_require, file, line, <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_MESSAGE_), x)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac7197ddb13dc82354ff2b91cbb78ee81">DOCTEST_MESSAGE</link>(x)   <link linkend="_doctest_8h_1a367ca236dba71ee4c0889b6911f658b1">DOCTEST_ADD_MESSAGE_AT</link>(__FILE__, __LINE__, x)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a311ced33941337d35007ee11d86e6523">DOCTEST_FAIL_CHECK</link>(x)   <link linkend="_doctest_8h_1a7a719fa6c010be31ae8836fe26482ce7">DOCTEST_ADD_FAIL_CHECK_AT</link>(__FILE__, __LINE__, x)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2af7c3f800a334028830a61d820484ea">DOCTEST_FAIL</link>(x)   <link linkend="_doctest_8h_1aa1254f2ec6ce34a8cb67405627eff668">DOCTEST_ADD_FAIL_AT</link>(__FILE__, __LINE__, x)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a474989d096480fd5c52ca9f346cdd23c">DOCTEST_TO_LVALUE</link>(...)   __VA_ARGS__</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(assert_type, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(assert_type, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5543bf17193d5cf77558fabbd9cfb02f">DOCTEST_WARN</link>(...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_WARN, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8f40c4072e85f02a3e58c5f67a182297">DOCTEST_CHECK</link>(...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_CHECK, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a35b7bf4bf062cc1359ab36c4119d680a">DOCTEST_REQUIRE</link>(...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_REQUIRE, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a207c474577961221a4003351186b5378">DOCTEST_WARN_FALSE</link>(...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_WARN_FALSE, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a7ecf2c25ffc2fad220a251af0ab37ff8">DOCTEST_CHECK_FALSE</link>(...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_CHECK_FALSE, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a0567e21b7ebdae9dbe84e4e46b230e12">DOCTEST_REQUIRE_FALSE</link>(...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_REQUIRE_FALSE, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8b25fbbb6ee92eaa18806a20af928c25">DOCTEST_WARN_MESSAGE</link>(cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_WARN, cond); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aaf53857feaa373e517e5dede5a7430d0">DOCTEST_CHECK_MESSAGE</link>(cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_CHECK, cond); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aeb1148cd18899a07cf48073bd93ee178">DOCTEST_REQUIRE_MESSAGE</link>(cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_REQUIRE, cond); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5fdcd4d41bfc530771f64dda474edf79">DOCTEST_WARN_FALSE_MESSAGE</link>(cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_WARN_FALSE, cond); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a6da2cbe8bddf6c0e4439bb7a311ba1a9">DOCTEST_CHECK_FALSE_MESSAGE</link>(cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_CHECK_FALSE, cond); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a21c6e12786b4645ebf4ec15d62c058b2">DOCTEST_REQUIRE_FALSE_MESSAGE</link>(cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_REQUIRE_FALSE, cond); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr,  assert_type,  message, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>(expr,  expr_str,  assert_type, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1af4883c6ce28524bfc7510a1e84c537bc">DOCTEST_ASSERT_NOTHROW</link>(assert_type, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad969cd19e5751fd38d2429ce8049065e">DOCTEST_WARN_THROWS</link>(...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>((__VA_ARGS__), #__VA_ARGS__, DT_WARN_THROWS, &quot;&quot;)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4390850609b0f465bc8a4e7355f91177">DOCTEST_CHECK_THROWS</link>(...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>((__VA_ARGS__), #__VA_ARGS__, DT_CHECK_THROWS, &quot;&quot;)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a00ac74412c24337acdb25b2f0587f6a5">DOCTEST_REQUIRE_THROWS</link>(...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>((__VA_ARGS__), #__VA_ARGS__, DT_REQUIRE_THROWS, &quot;&quot;)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a0c61debdc225c16793ce21792448bdd2">DOCTEST_WARN_THROWS_AS</link>(expr, ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_WARN_THROWS_AS, &quot;&quot;, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a84f4eb0aeb37b27b3cad5f3e44c08195">DOCTEST_CHECK_THROWS_AS</link>(expr, ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_CHECK_THROWS_AS, &quot;&quot;, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a0a5e62cddee11560955d5213caac78a4">DOCTEST_REQUIRE_THROWS_AS</link>(expr, ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_REQUIRE_THROWS_AS, &quot;&quot;, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a0d30b4e4f2a0e5b7e845efe285bf270f">DOCTEST_WARN_THROWS_WITH</link>(expr, ...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>(expr, #expr, DT_WARN_THROWS_WITH, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a141ab91ff9697fa7d978989d56ce42d5">DOCTEST_CHECK_THROWS_WITH</link>(expr, ...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>(expr, #expr, DT_CHECK_THROWS_WITH, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a50f4ffd81384eda6103b9aba1e4fca60">DOCTEST_REQUIRE_THROWS_WITH</link>(expr, ...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>(expr, #expr, DT_REQUIRE_THROWS_WITH, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab808e9a932cbd988fc3790137ed365a9">DOCTEST_WARN_THROWS_WITH_AS</link>(expr,  message, ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_WARN_THROWS_WITH_AS, message, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac53fee45159d080520c2d16416e6468f">DOCTEST_CHECK_THROWS_WITH_AS</link>(expr,  message, ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_CHECK_THROWS_WITH_AS, message, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9deaef85b8ec7fa5a63ad99a9eb5b469">DOCTEST_REQUIRE_THROWS_WITH_AS</link>(expr,  message, ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_REQUIRE_THROWS_WITH_AS, message, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2de5ec015a9fbf92197a289b11db462c">DOCTEST_WARN_NOTHROW</link>(...)   <link linkend="_doctest_8h_1af4883c6ce28524bfc7510a1e84c537bc">DOCTEST_ASSERT_NOTHROW</link>(DT_WARN_NOTHROW, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aac7b7640f3d6611423a2c5a18d905069">DOCTEST_CHECK_NOTHROW</link>(...)   <link linkend="_doctest_8h_1af4883c6ce28524bfc7510a1e84c537bc">DOCTEST_ASSERT_NOTHROW</link>(DT_CHECK_NOTHROW, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1af736ab1a8a0779fa8df23e8177a52abb">DOCTEST_REQUIRE_NOTHROW</link>(...)   <link linkend="_doctest_8h_1af4883c6ce28524bfc7510a1e84c537bc">DOCTEST_ASSERT_NOTHROW</link>(DT_REQUIRE_NOTHROW, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a231ae5902ac77e9f0129bb6b82653095">DOCTEST_WARN_THROWS_MESSAGE</link>(expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ad969cd19e5751fd38d2429ce8049065e">DOCTEST_WARN_THROWS</link>(expr); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a40e1f0abafceaf741c82813fe5a1473b">DOCTEST_CHECK_THROWS_MESSAGE</link>(expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a4390850609b0f465bc8a4e7355f91177">DOCTEST_CHECK_THROWS</link>(expr); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a0b639518dd8b20bd0a73d8cd45223503">DOCTEST_REQUIRE_THROWS_MESSAGE</link>(expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a00ac74412c24337acdb25b2f0587f6a5">DOCTEST_REQUIRE_THROWS</link>(expr); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a50e74b4aac3d73d0bcec94e2901a267a">DOCTEST_WARN_THROWS_AS_MESSAGE</link>(expr,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a0c61debdc225c16793ce21792448bdd2">DOCTEST_WARN_THROWS_AS</link>(expr, ex); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9483bd587b78ec5dd417d78c4d58c2c7">DOCTEST_CHECK_THROWS_AS_MESSAGE</link>(expr,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a84f4eb0aeb37b27b3cad5f3e44c08195">DOCTEST_CHECK_THROWS_AS</link>(expr, ex); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2721243401e6e1ffdef02c34e6f654ed">DOCTEST_REQUIRE_THROWS_AS_MESSAGE</link>(expr,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a0a5e62cddee11560955d5213caac78a4">DOCTEST_REQUIRE_THROWS_AS</link>(expr, ex); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad3928bf984886a53d79a67f746380222">DOCTEST_WARN_THROWS_WITH_MESSAGE</link>(expr,  with,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a0d30b4e4f2a0e5b7e845efe285bf270f">DOCTEST_WARN_THROWS_WITH</link>(expr, with); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a86ccca9385cdc38331bdefe72705fd80">DOCTEST_CHECK_THROWS_WITH_MESSAGE</link>(expr,  with,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a141ab91ff9697fa7d978989d56ce42d5">DOCTEST_CHECK_THROWS_WITH</link>(expr, with); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a0cb80917b31e413a75580399648ed0e9">DOCTEST_REQUIRE_THROWS_WITH_MESSAGE</link>(expr,  with,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a50f4ffd81384eda6103b9aba1e4fca60">DOCTEST_REQUIRE_THROWS_WITH</link>(expr, with); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad97451b00451d54d2239da25aac4204a">DOCTEST_WARN_THROWS_WITH_AS_MESSAGE</link>(expr,  with,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ab808e9a932cbd988fc3790137ed365a9">DOCTEST_WARN_THROWS_WITH_AS</link>(expr, with, ex); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa947e1dda1efa5c9414d04bf3878aa86">DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE</link>(expr,  with,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ac53fee45159d080520c2d16416e6468f">DOCTEST_CHECK_THROWS_WITH_AS</link>(expr, with, ex); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa65b31390b95de60f879f80389b7c032">DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE</link>(expr,  with,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a9deaef85b8ec7fa5a63ad99a9eb5b469">DOCTEST_REQUIRE_THROWS_WITH_AS</link>(expr, with, ex); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a03ee95587b199006f4d8e242af5d0bc1">DOCTEST_WARN_NOTHROW_MESSAGE</link>(expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a2de5ec015a9fbf92197a289b11db462c">DOCTEST_WARN_NOTHROW</link>(expr); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a425ef51159702670d46e53fca9221e77">DOCTEST_CHECK_NOTHROW_MESSAGE</link>(expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1aac7b7640f3d6611423a2c5a18d905069">DOCTEST_CHECK_NOTHROW</link>(expr); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1abb059c9cbdf8d90ee2ac00e01c14d067">DOCTEST_REQUIRE_NOTHROW_MESSAGE</link>(expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1af736ab1a8a0779fa8df23e8177a52abb">DOCTEST_REQUIRE_NOTHROW</link>(expr); } while(false)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(assert_type,  comp, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(assert_type, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a1db08e05a079662153c7702e10dcdbde">DOCTEST_WARN_EQ</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_EQ, eq, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2ac8b5624c3b8d9520c75a68634cb8c1">DOCTEST_CHECK_EQ</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_EQ, eq, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8820dcb94345362c2fd94aea26a3eabc">DOCTEST_REQUIRE_EQ</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_EQ, eq, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aaa8ef6ed223cba8e86d0bc0676aeb50e">DOCTEST_WARN_NE</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_NE, ne, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1afe1e20e7078d65704c6b2f4e55bbfc03">DOCTEST_CHECK_NE</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_NE, ne, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa34e39b7d59335760ffa1b9fce45cc4b">DOCTEST_REQUIRE_NE</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_NE, ne, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad814c5db21e9ac7eca4b3e87aec0ef3b">DOCTEST_WARN_GT</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_GT, gt, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8d3a9781fd7a67021ec12e0aea024ed6">DOCTEST_CHECK_GT</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_GT, gt, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a87d30bb902d1bfca7427a9eb51d130eb">DOCTEST_REQUIRE_GT</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_GT, gt, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa0e1bebf090f015583da8decb0ee3e5c">DOCTEST_WARN_LT</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_LT, lt, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4e1d83dffb779a2829552c4fefbb516a">DOCTEST_CHECK_LT</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_LT, lt, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab88925759665843f59b14f097213351c">DOCTEST_REQUIRE_LT</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_LT, lt, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aae5060834af3dd90c806b087368d010c">DOCTEST_WARN_GE</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_GE, ge, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a296f8caf3497fbc9433d2e77691b0b3e">DOCTEST_CHECK_GE</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_GE, ge, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad75b722f83eb3f81662af7fccae74732">DOCTEST_REQUIRE_GE</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_GE, ge, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aaed576a70b191ac93a4a4e4052b31f4f">DOCTEST_WARN_LE</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_LE, le, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a25823108f6fed8787303bbad7c619f35">DOCTEST_CHECK_LE</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_LE, le, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9101f25bfe135de1e306e3ed342e248a">DOCTEST_REQUIRE_LE</link>(...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_LE, le, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a41e14871f960ec76113197ad929d18c8">DOCTEST_WARN_UNARY</link>(...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_WARN_UNARY, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a660ce2901f42d4d2a82327204a6a3602">DOCTEST_CHECK_UNARY</link>(...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_CHECK_UNARY, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a77558db4dc0f1758c756da740b64413a">DOCTEST_REQUIRE_UNARY</link>(...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_REQUIRE_UNARY, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a24e0cd6aa574d457374825c7d61f2038">DOCTEST_WARN_UNARY_FALSE</link>(...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_WARN_UNARY_FALSE, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9ff04e98b0891f79528c180a4e7d6d36">DOCTEST_CHECK_UNARY_FALSE</link>(...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_CHECK_UNARY_FALSE, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a37703a3eac1f8332d970808340abf56e">DOCTEST_REQUIRE_UNARY_FALSE</link>(...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_REQUIRE_UNARY_FALSE, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a307c7c41ebfa40b60def448d2190772d">DOCTEST_FAST_WARN_EQ</link>   <link linkend="_doctest_8h_1a1db08e05a079662153c7702e10dcdbde">DOCTEST_WARN_EQ</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab4a30ae5781ec52a8651c7cb695fb266">DOCTEST_FAST_CHECK_EQ</link>   <link linkend="_doctest_8h_1a2ac8b5624c3b8d9520c75a68634cb8c1">DOCTEST_CHECK_EQ</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa25a354bc0f83e31ec1184eff29ec0d9">DOCTEST_FAST_REQUIRE_EQ</link>   <link linkend="_doctest_8h_1a8820dcb94345362c2fd94aea26a3eabc">DOCTEST_REQUIRE_EQ</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a7f6c8720c02eef2319ffb32de1f10233">DOCTEST_FAST_WARN_NE</link>   <link linkend="_doctest_8h_1aaa8ef6ed223cba8e86d0bc0676aeb50e">DOCTEST_WARN_NE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aef35956b9f6316059552577b28b63b76">DOCTEST_FAST_CHECK_NE</link>   <link linkend="_doctest_8h_1afe1e20e7078d65704c6b2f4e55bbfc03">DOCTEST_CHECK_NE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a181b3b01fecc87de85f3ce2647f05e9b">DOCTEST_FAST_REQUIRE_NE</link>   <link linkend="_doctest_8h_1aa34e39b7d59335760ffa1b9fce45cc4b">DOCTEST_REQUIRE_NE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5937efa19ce061357efe0b8a8f5be061">DOCTEST_FAST_WARN_GT</link>   <link linkend="_doctest_8h_1ad814c5db21e9ac7eca4b3e87aec0ef3b">DOCTEST_WARN_GT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aad48a1ad33a37268303363fe3285bb2c">DOCTEST_FAST_CHECK_GT</link>   <link linkend="_doctest_8h_1a8d3a9781fd7a67021ec12e0aea024ed6">DOCTEST_CHECK_GT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a74a2b5ebb76b33c7124bf3d5bc200cc6">DOCTEST_FAST_REQUIRE_GT</link>   <link linkend="_doctest_8h_1a87d30bb902d1bfca7427a9eb51d130eb">DOCTEST_REQUIRE_GT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a1c5270c3e5ed27308bcdcb2e439f5049">DOCTEST_FAST_WARN_LT</link>   <link linkend="_doctest_8h_1aa0e1bebf090f015583da8decb0ee3e5c">DOCTEST_WARN_LT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2b5cbb281f86f22f30ca08e453ecb7f3">DOCTEST_FAST_CHECK_LT</link>   <link linkend="_doctest_8h_1a4e1d83dffb779a2829552c4fefbb516a">DOCTEST_CHECK_LT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a17c6c39d376b0b97b0d883e7ec3fa728">DOCTEST_FAST_REQUIRE_LT</link>   <link linkend="_doctest_8h_1ab88925759665843f59b14f097213351c">DOCTEST_REQUIRE_LT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a7851a92cfdd7ec5b60ae070ee21b1ff4">DOCTEST_FAST_WARN_GE</link>   <link linkend="_doctest_8h_1aae5060834af3dd90c806b087368d010c">DOCTEST_WARN_GE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a1ae0024144fb0081522e3778e2f3fe77">DOCTEST_FAST_CHECK_GE</link>   <link linkend="_doctest_8h_1a296f8caf3497fbc9433d2e77691b0b3e">DOCTEST_CHECK_GE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2b6364c039a90a1b8519af193027c3a4">DOCTEST_FAST_REQUIRE_GE</link>   <link linkend="_doctest_8h_1ad75b722f83eb3f81662af7fccae74732">DOCTEST_REQUIRE_GE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac9a00a428fc5d856edac7d642f9d218a">DOCTEST_FAST_WARN_LE</link>   <link linkend="_doctest_8h_1aaed576a70b191ac93a4a4e4052b31f4f">DOCTEST_WARN_LE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4eaef3b35d06f2cd9a1b38ef4b8aa137">DOCTEST_FAST_CHECK_LE</link>   <link linkend="_doctest_8h_1a25823108f6fed8787303bbad7c619f35">DOCTEST_CHECK_LE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab9fe58a6ab535c836df028567aa68693">DOCTEST_FAST_REQUIRE_LE</link>   <link linkend="_doctest_8h_1a9101f25bfe135de1e306e3ed342e248a">DOCTEST_REQUIRE_LE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aad3a987ea3505b2ade023959bec1dbff">DOCTEST_FAST_WARN_UNARY</link>   <link linkend="_doctest_8h_1a41e14871f960ec76113197ad929d18c8">DOCTEST_WARN_UNARY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aef39710e57f05a74423ef552b9756a29">DOCTEST_FAST_CHECK_UNARY</link>   <link linkend="_doctest_8h_1a660ce2901f42d4d2a82327204a6a3602">DOCTEST_CHECK_UNARY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a028cfc971ad12bc510b303622b9bc35f">DOCTEST_FAST_REQUIRE_UNARY</link>   <link linkend="_doctest_8h_1a77558db4dc0f1758c756da740b64413a">DOCTEST_REQUIRE_UNARY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a85bdb241d41e64ec124f96d2efba9443">DOCTEST_FAST_WARN_UNARY_FALSE</link>   <link linkend="_doctest_8h_1a24e0cd6aa574d457374825c7d61f2038">DOCTEST_WARN_UNARY_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4d91d1f535ad191f829bc3cf81b967eb">DOCTEST_FAST_CHECK_UNARY_FALSE</link>   <link linkend="_doctest_8h_1a9ff04e98b0891f79528c180a4e7d6d36">DOCTEST_CHECK_UNARY_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a3c0e9e0c03a62a810aae8e282b807938">DOCTEST_FAST_REQUIRE_UNARY_FALSE</link>   <link linkend="_doctest_8h_1a37703a3eac1f8332d970808340abf56e">DOCTEST_REQUIRE_UNARY_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5a2dcfd67d0f0aa96600b46678135514">DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE</link>   <link linkend="_doctest_8h_1ac36f9261802a5321792358196104f4e6">DOCTEST_TEST_CASE_TEMPLATE_INVOKE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab990e5952d346329356aeb62a261386a">DOCTEST_SCENARIO</link>(name)   <link linkend="_doctest_8h_1ac1216c5a9ba44f5af8b7115a3badaae2">DOCTEST_TEST_CASE</link>(&quot;  Scenario: &quot; name)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a397e2591ec795895eb61e15309fa0634">DOCTEST_SCENARIO_CLASS</link>(name)   <link linkend="_doctest_8h_1a41431265482f363020f93a13e4af4c6a">DOCTEST_TEST_CASE_CLASS</link>(&quot;  Scenario: &quot; name)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1abbf51631942e053be12a31bf2299fe28">DOCTEST_SCENARIO_TEMPLATE</link>(name,  T, ...)   <link linkend="_doctest_8h_1ab84667702ff8411d0444261796972374">DOCTEST_TEST_CASE_TEMPLATE</link>(&quot;  Scenario: &quot; name, T, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aadcf3b288d0506988896ff62d6b5ec5a">DOCTEST_SCENARIO_TEMPLATE_DEFINE</link>(name,  T,  id)   <link linkend="_doctest_8h_1a7c264a83f95bfae9a0e5d86c9d4c8fe3">DOCTEST_TEST_CASE_TEMPLATE_DEFINE</link>(&quot;  Scenario: &quot; name, T, id)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a391063a35ec9bea4c600c15b0a27cb54">DOCTEST_GIVEN</link>(name)   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(&quot;   Given: &quot; name)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a570ec2864c36b1b5c8ccfd94c6b8b629">DOCTEST_WHEN</link>(name)   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(&quot;    When: &quot; name)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9e696b9f04c18580c871e07653affcbf">DOCTEST_AND_WHEN</link>(name)   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(&quot;And when: &quot; name)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aab2f195b2c866cd010123c1d5b70217f">DOCTEST_THEN</link>(name)   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(&quot;    Then: &quot; name)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a98336975a3b162f382cad2ae2c058276">DOCTEST_AND_THEN</link>(name)   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(&quot;     And: &quot; name)</para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5ab5b9aaf3850b085ca39abf901b2751">TEST_CASE</link>   <link linkend="_doctest_8h_1ac1216c5a9ba44f5af8b7115a3badaae2">DOCTEST_TEST_CASE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5556f51cbbc5bd82a9f742706dde3bf4">TEST_CASE_CLASS</link>   <link linkend="_doctest_8h_1a41431265482f363020f93a13e4af4c6a">DOCTEST_TEST_CASE_CLASS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac3d85fde55dfc51eb09b45341ae1e83d">TEST_CASE_FIXTURE</link>   <link linkend="_doctest_8h_1a22130c0eff96eac3ed682b7d8854e0f6">DOCTEST_TEST_CASE_FIXTURE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab83b54e5e7983ac5367d69b4bd19bd38">TYPE_TO_STRING</link>   <link linkend="_doctest_8h_1a568e1d22f39724c8d3eb8addf4bf8e72">DOCTEST_TYPE_TO_STRING</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a337b21bec6b92e16fe4fe5a7a6aadf37">TEST_CASE_TEMPLATE</link>   <link linkend="_doctest_8h_1ab84667702ff8411d0444261796972374">DOCTEST_TEST_CASE_TEMPLATE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a156f558a00d1e92dea93362d0dc43b55">TEST_CASE_TEMPLATE_DEFINE</link>   <link linkend="_doctest_8h_1a7c264a83f95bfae9a0e5d86c9d4c8fe3">DOCTEST_TEST_CASE_TEMPLATE_DEFINE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a1abc60557fe20210f2d7118eca6aa41a">TEST_CASE_TEMPLATE_INVOKE</link>   <link linkend="_doctest_8h_1ac36f9261802a5321792358196104f4e6">DOCTEST_TEST_CASE_TEMPLATE_INVOKE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5061c5002a33d4f1f10a38f3e7c7f2df">TEST_CASE_TEMPLATE_APPLY</link>   <link linkend="_doctest_8h_1a8722d97b6087d098bbd796801a347767">DOCTEST_TEST_CASE_TEMPLATE_APPLY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad50e066bb7463b0dc3ae1bc06e4d690b">SUBCASE</link>   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aad5d8423b9b1a6b3699394a1ff8cc1e5">TEST_SUITE</link>   <link linkend="_doctest_8h_1aa64ce392f41c8ba1d22cfb5b83847f55">DOCTEST_TEST_SUITE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a81d757f5c488610385f573cbff5301d7">TEST_SUITE_BEGIN</link>   <link linkend="_doctest_8h_1a64f9649162581c1c24a78e65cf01492f">DOCTEST_TEST_SUITE_BEGIN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a3b41014a9f6a32210a8eecbe8fea3c76">TEST_SUITE_END</link>   <link linkend="_doctest_8h_1a3ca1fc8ae12659768e3226db19a2c7ee">DOCTEST_TEST_SUITE_END</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aac0f523c848194e94f7fb3425bd92350">REGISTER_EXCEPTION_TRANSLATOR</link>   <link linkend="_doctest_8h_1ac61710def0b8698d89bce297532d0017">DOCTEST_REGISTER_EXCEPTION_TRANSLATOR</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a97b96038b34c9ce8478515b773d9effb">REGISTER_REPORTER</link>   <link linkend="_doctest_8h_1a97757bf089f108cf8842727213bf3299">DOCTEST_REGISTER_REPORTER</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a73d9b6c21c3dc11f592c0f1496efa4e0">REGISTER_LISTENER</link>   <link linkend="_doctest_8h_1a03161a703cc44e07384c4a0981a13c86">DOCTEST_REGISTER_LISTENER</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae1103fea1e1b3c41ca3322d5389f7162">INFO</link>   <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1abb69d780b56e8a35bfbbb27b21beb0fd">CAPTURE</link>   <link linkend="_doctest_8h_1a5a8ade28d558f5fcb66f8493d0596e6c">DOCTEST_CAPTURE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a285505606bef4b4d31c77a1996f98aee">ADD_MESSAGE_AT</link>   <link linkend="_doctest_8h_1a367ca236dba71ee4c0889b6911f658b1">DOCTEST_ADD_MESSAGE_AT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2787e9f3c538079e2b7652af637cbbfb">ADD_FAIL_CHECK_AT</link>   <link linkend="_doctest_8h_1a7a719fa6c010be31ae8836fe26482ce7">DOCTEST_ADD_FAIL_CHECK_AT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae9198d684b0ca06b0efef9dd773707e5">ADD_FAIL_AT</link>   <link linkend="_doctest_8h_1aa1254f2ec6ce34a8cb67405627eff668">DOCTEST_ADD_FAIL_AT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1af8a3e30cb4858ca8a098acae107286c0">MESSAGE</link>   <link linkend="_doctest_8h_1ac7197ddb13dc82354ff2b91cbb78ee81">DOCTEST_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab7fcb424412c317c44e574005384c125">FAIL_CHECK</link>   <link linkend="_doctest_8h_1a311ced33941337d35007ee11d86e6523">DOCTEST_FAIL_CHECK</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1abb508ea8227673f419e9fe3a86c30d8e">FAIL</link>   <link linkend="_doctest_8h_1a2af7c3f800a334028830a61d820484ea">DOCTEST_FAIL</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1abf09d1236a38b96799737eab5f533b61">TO_LVALUE</link>   <link linkend="_doctest_8h_1a474989d096480fd5c52ca9f346cdd23c">DOCTEST_TO_LVALUE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a271d8f7f52be750e5c744a394ec71344">WARN</link>   <link linkend="_doctest_8h_1a5543bf17193d5cf77558fabbd9cfb02f">DOCTEST_WARN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a24a7f23f4fc3f33bd46c63dfbe6abbe1">WARN_FALSE</link>   <link linkend="_doctest_8h_1a207c474577961221a4003351186b5378">DOCTEST_WARN_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a3132533466c8fa0b431b2d3d7b8e5185">WARN_THROWS</link>   <link linkend="_doctest_8h_1ad969cd19e5751fd38d2429ce8049065e">DOCTEST_WARN_THROWS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a85d15b963856678eab8233032fe80fb1">WARN_THROWS_AS</link>   <link linkend="_doctest_8h_1a0c61debdc225c16793ce21792448bdd2">DOCTEST_WARN_THROWS_AS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4b96c8b6c6d10da9fa141b9f3e1de0ae">WARN_THROWS_WITH</link>   <link linkend="_doctest_8h_1a0d30b4e4f2a0e5b7e845efe285bf270f">DOCTEST_WARN_THROWS_WITH</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2cf54d012366635ce4330cccc9a2d1bd">WARN_THROWS_WITH_AS</link>   <link linkend="_doctest_8h_1ab808e9a932cbd988fc3790137ed365a9">DOCTEST_WARN_THROWS_WITH_AS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a83c5f5662d0ab991e05cca9ecb309fa7">WARN_NOTHROW</link>   <link linkend="_doctest_8h_1a2de5ec015a9fbf92197a289b11db462c">DOCTEST_WARN_NOTHROW</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4ccc9878008def89d325d0bb7efdbd6b">CHECK</link>   <link linkend="_doctest_8h_1a8f40c4072e85f02a3e58c5f67a182297">DOCTEST_CHECK</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a3c3d71eabfadc1c6f3e80acbbea07f29">CHECK_FALSE</link>   <link linkend="_doctest_8h_1a7ecf2c25ffc2fad220a251af0ab37ff8">DOCTEST_CHECK_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a49f4af5c52262c35fdcac1f364983ca4">CHECK_THROWS</link>   <link linkend="_doctest_8h_1a4390850609b0f465bc8a4e7355f91177">DOCTEST_CHECK_THROWS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a936031842e040b6f7ee57f058e54d719">CHECK_THROWS_AS</link>   <link linkend="_doctest_8h_1a84f4eb0aeb37b27b3cad5f3e44c08195">DOCTEST_CHECK_THROWS_AS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a534872011db5807f81d8f3e4ab93ab2d">CHECK_THROWS_WITH</link>   <link linkend="_doctest_8h_1a141ab91ff9697fa7d978989d56ce42d5">DOCTEST_CHECK_THROWS_WITH</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa902acb3ee1701a5c82f0573943af77f">CHECK_THROWS_WITH_AS</link>   <link linkend="_doctest_8h_1ac53fee45159d080520c2d16416e6468f">DOCTEST_CHECK_THROWS_WITH_AS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ace8e47a5266e54297f0072cbaf594aa9">CHECK_NOTHROW</link>   <link linkend="_doctest_8h_1aac7b7640f3d6611423a2c5a18d905069">DOCTEST_CHECK_NOTHROW</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a99047749d13f9a8207b67d44ae2c0b1f">REQUIRE</link>   <link linkend="_doctest_8h_1a35b7bf4bf062cc1359ab36c4119d680a">DOCTEST_REQUIRE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab2ef1921c896e1c36706e223eb75596c">REQUIRE_FALSE</link>   <link linkend="_doctest_8h_1a0567e21b7ebdae9dbe84e4e46b230e12">DOCTEST_REQUIRE_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae9942ba9adadb02cac56f7ffa9771dbe">REQUIRE_THROWS</link>   <link linkend="_doctest_8h_1a00ac74412c24337acdb25b2f0587f6a5">DOCTEST_REQUIRE_THROWS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a914202635637132a4c849fffb0e2c3e1">REQUIRE_THROWS_AS</link>   <link linkend="_doctest_8h_1a0a5e62cddee11560955d5213caac78a4">DOCTEST_REQUIRE_THROWS_AS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a04812d5473de006d1a78560bd8c76522">REQUIRE_THROWS_WITH</link>   <link linkend="_doctest_8h_1a50f4ffd81384eda6103b9aba1e4fca60">DOCTEST_REQUIRE_THROWS_WITH</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae384ae4b7a60f455fc2a46f3aa1fdf6e">REQUIRE_THROWS_WITH_AS</link>   <link linkend="_doctest_8h_1a9deaef85b8ec7fa5a63ad99a9eb5b469">DOCTEST_REQUIRE_THROWS_WITH_AS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad3aceb73768336fc3032faee38934dda">REQUIRE_NOTHROW</link>   <link linkend="_doctest_8h_1af736ab1a8a0779fa8df23e8177a52abb">DOCTEST_REQUIRE_NOTHROW</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9c70dfa568a220097a975682e4b6fb6d">WARN_MESSAGE</link>   <link linkend="_doctest_8h_1a8b25fbbb6ee92eaa18806a20af928c25">DOCTEST_WARN_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4d57b82dd6ed3966c41424a4fc05b101">WARN_FALSE_MESSAGE</link>   <link linkend="_doctest_8h_1a5fdcd4d41bfc530771f64dda474edf79">DOCTEST_WARN_FALSE_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a13a31bf90de20fdde478b0c82b4d5663">WARN_THROWS_MESSAGE</link>   <link linkend="_doctest_8h_1a231ae5902ac77e9f0129bb6b82653095">DOCTEST_WARN_THROWS_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aad8f81766aaee5a1daea88b6a36724a8">WARN_THROWS_AS_MESSAGE</link>   <link linkend="_doctest_8h_1a50e74b4aac3d73d0bcec94e2901a267a">DOCTEST_WARN_THROWS_AS_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a637a953b78fecd97989b0970892374c4">WARN_THROWS_WITH_MESSAGE</link>   <link linkend="_doctest_8h_1ad3928bf984886a53d79a67f746380222">DOCTEST_WARN_THROWS_WITH_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aec8c64d9533c4f81f40d89b04dd09860">WARN_THROWS_WITH_AS_MESSAGE</link>   <link linkend="_doctest_8h_1ad97451b00451d54d2239da25aac4204a">DOCTEST_WARN_THROWS_WITH_AS_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a45717cc141c996b065903eb69d190dd4">WARN_NOTHROW_MESSAGE</link>   <link linkend="_doctest_8h_1a03ee95587b199006f4d8e242af5d0bc1">DOCTEST_WARN_NOTHROW_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a85265ef7f38b93816874a8fa8d1f948b">CHECK_MESSAGE</link>   <link linkend="_doctest_8h_1aaf53857feaa373e517e5dede5a7430d0">DOCTEST_CHECK_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4644c4aff40338599bdf925aa64b5363">CHECK_FALSE_MESSAGE</link>   <link linkend="_doctest_8h_1a6da2cbe8bddf6c0e4439bb7a311ba1a9">DOCTEST_CHECK_FALSE_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1abfc9366c617327e12a2cdd8f799bc739">CHECK_THROWS_MESSAGE</link>   <link linkend="_doctest_8h_1a40e1f0abafceaf741c82813fe5a1473b">DOCTEST_CHECK_THROWS_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1af760aa58c8ceb6e17effad18dae55326">CHECK_THROWS_AS_MESSAGE</link>   <link linkend="_doctest_8h_1a9483bd587b78ec5dd417d78c4d58c2c7">DOCTEST_CHECK_THROWS_AS_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a777c69196055d341f2a08b5baa58a04e">CHECK_THROWS_WITH_MESSAGE</link>   <link linkend="_doctest_8h_1a86ccca9385cdc38331bdefe72705fd80">DOCTEST_CHECK_THROWS_WITH_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae6c07d23f916761f41a2b0b59a77bd72">CHECK_THROWS_WITH_AS_MESSAGE</link>   <link linkend="_doctest_8h_1aa947e1dda1efa5c9414d04bf3878aa86">DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a571418c4b97ab003b8e078247c5f0495">CHECK_NOTHROW_MESSAGE</link>   <link linkend="_doctest_8h_1a425ef51159702670d46e53fca9221e77">DOCTEST_CHECK_NOTHROW_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a0039be65d2fce63e84c47b7588600315">REQUIRE_MESSAGE</link>   <link linkend="_doctest_8h_1aeb1148cd18899a07cf48073bd93ee178">DOCTEST_REQUIRE_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a256099df0da90df3daf317b710c52c01">REQUIRE_FALSE_MESSAGE</link>   <link linkend="_doctest_8h_1a21c6e12786b4645ebf4ec15d62c058b2">DOCTEST_REQUIRE_FALSE_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab19ac5055a738916db66f3170b3df9c9">REQUIRE_THROWS_MESSAGE</link>   <link linkend="_doctest_8h_1a0b639518dd8b20bd0a73d8cd45223503">DOCTEST_REQUIRE_THROWS_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae2fae35ab871f211872134bce5090fa1">REQUIRE_THROWS_AS_MESSAGE</link>   <link linkend="_doctest_8h_1a2721243401e6e1ffdef02c34e6f654ed">DOCTEST_REQUIRE_THROWS_AS_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a5125b6a70a26d54c52659644152b51f0">REQUIRE_THROWS_WITH_MESSAGE</link>   <link linkend="_doctest_8h_1a0cb80917b31e413a75580399648ed0e9">DOCTEST_REQUIRE_THROWS_WITH_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a7b206deef28f88e4c5e1c404668066c0">REQUIRE_THROWS_WITH_AS_MESSAGE</link>   <link linkend="_doctest_8h_1aa65b31390b95de60f879f80389b7c032">DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a97f5f232912bb57ae4d29e306830e790">REQUIRE_NOTHROW_MESSAGE</link>   <link linkend="_doctest_8h_1abb059c9cbdf8d90ee2ac00e01c14d067">DOCTEST_REQUIRE_NOTHROW_MESSAGE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a30e72ad52b042b3b951261583356a14b">SCENARIO</link>   <link linkend="_doctest_8h_1ab990e5952d346329356aeb62a261386a">DOCTEST_SCENARIO</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a1e5f9b2c5d633c7660ef788e910fbe38">SCENARIO_CLASS</link>   <link linkend="_doctest_8h_1a397e2591ec795895eb61e15309fa0634">DOCTEST_SCENARIO_CLASS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a715044eee828e31da9871d0ec3a48e2e">SCENARIO_TEMPLATE</link>   <link linkend="_doctest_8h_1abbf51631942e053be12a31bf2299fe28">DOCTEST_SCENARIO_TEMPLATE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a3f381792c774552a3aa01745d51286f2">SCENARIO_TEMPLATE_DEFINE</link>   <link linkend="_doctest_8h_1aadcf3b288d0506988896ff62d6b5ec5a">DOCTEST_SCENARIO_TEMPLATE_DEFINE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a6e079cc73cfaebf22e5a7914b3834cf9">GIVEN</link>   <link linkend="_doctest_8h_1a391063a35ec9bea4c600c15b0a27cb54">DOCTEST_GIVEN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aec3ea373906cedb8f1c3baddcc8be548">WHEN</link>   <link linkend="_doctest_8h_1a570ec2864c36b1b5c8ccfd94c6b8b629">DOCTEST_WHEN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a6894cdaa24f62067bbe1a80d8a48f8cb">AND_WHEN</link>   <link linkend="_doctest_8h_1a9e696b9f04c18580c871e07653affcbf">DOCTEST_AND_WHEN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad9884c43f4f50a5852711a614f2343ac">THEN</link>   <link linkend="_doctest_8h_1aab2f195b2c866cd010123c1d5b70217f">DOCTEST_THEN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a6272f72e74c723b318c2439075d888ab">AND_THEN</link>   <link linkend="_doctest_8h_1a98336975a3b162f382cad2ae2c058276">DOCTEST_AND_THEN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad1646c366e40c8caa9ce4ec53927258c">WARN_EQ</link>   <link linkend="_doctest_8h_1a1db08e05a079662153c7702e10dcdbde">DOCTEST_WARN_EQ</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aa7c97e362afd06550fd226758b1021fd">CHECK_EQ</link>   <link linkend="_doctest_8h_1a2ac8b5624c3b8d9520c75a68634cb8c1">DOCTEST_CHECK_EQ</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae2a7214cb29baae900a71b465c58d9a9">REQUIRE_EQ</link>   <link linkend="_doctest_8h_1a8820dcb94345362c2fd94aea26a3eabc">DOCTEST_REQUIRE_EQ</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9443765f25c723846b1c73ff943f1982">WARN_NE</link>   <link linkend="_doctest_8h_1aaa8ef6ed223cba8e86d0bc0676aeb50e">DOCTEST_WARN_NE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac1b35a9ec0532f1586c32e945e8f0484">CHECK_NE</link>   <link linkend="_doctest_8h_1afe1e20e7078d65704c6b2f4e55bbfc03">DOCTEST_CHECK_NE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a972dc8946c6130312c8a08fb77fa7e7f">REQUIRE_NE</link>   <link linkend="_doctest_8h_1aa34e39b7d59335760ffa1b9fce45cc4b">DOCTEST_REQUIRE_NE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2d85853bffffa94e08d7188716b2a635">WARN_GT</link>   <link linkend="_doctest_8h_1ad814c5db21e9ac7eca4b3e87aec0ef3b">DOCTEST_WARN_GT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1adc36ecc0e3b272468e11e482769b40e1">CHECK_GT</link>   <link linkend="_doctest_8h_1a8d3a9781fd7a67021ec12e0aea024ed6">DOCTEST_CHECK_GT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ac4a4c0439506d42e24e92b323358b7b6">REQUIRE_GT</link>   <link linkend="_doctest_8h_1a87d30bb902d1bfca7427a9eb51d130eb">DOCTEST_REQUIRE_GT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae1d9ec9a28837ad5c7bac11b0cf47658">WARN_LT</link>   <link linkend="_doctest_8h_1aa0e1bebf090f015583da8decb0ee3e5c">DOCTEST_WARN_LT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a693d588a1de917cd2704f25cde1395b7">CHECK_LT</link>   <link linkend="_doctest_8h_1a4e1d83dffb779a2829552c4fefbb516a">DOCTEST_CHECK_LT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a3bdbdba1cbc958e1e226f26f7d5ede89">REQUIRE_LT</link>   <link linkend="_doctest_8h_1ab88925759665843f59b14f097213351c">DOCTEST_REQUIRE_LT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a05c7122d2085607066dbacc76d5cce60">WARN_GE</link>   <link linkend="_doctest_8h_1aae5060834af3dd90c806b087368d010c">DOCTEST_WARN_GE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1adce4701730a063ff753aeaa94ab9082a">CHECK_GE</link>   <link linkend="_doctest_8h_1a296f8caf3497fbc9433d2e77691b0b3e">DOCTEST_CHECK_GE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae79f6cea88e5391b1c4432cba5a72a82">REQUIRE_GE</link>   <link linkend="_doctest_8h_1ad75b722f83eb3f81662af7fccae74732">DOCTEST_REQUIRE_GE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9cddea9676d00331b5d3f74a9b896b88">WARN_LE</link>   <link linkend="_doctest_8h_1aaed576a70b191ac93a4a4e4052b31f4f">DOCTEST_WARN_LE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a04cc334c1e87259093ce0572b7c2537b">CHECK_LE</link>   <link linkend="_doctest_8h_1a25823108f6fed8787303bbad7c619f35">DOCTEST_CHECK_LE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1abc1807f4e72ad4103f8241561e689b10">REQUIRE_LE</link>   <link linkend="_doctest_8h_1a9101f25bfe135de1e306e3ed342e248a">DOCTEST_REQUIRE_LE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae6b80cf907d8897831914248444dce1a">WARN_UNARY</link>   <link linkend="_doctest_8h_1a41e14871f960ec76113197ad929d18c8">DOCTEST_WARN_UNARY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ad3063ffa66751881825c57fad540e9ec">CHECK_UNARY</link>   <link linkend="_doctest_8h_1a660ce2901f42d4d2a82327204a6a3602">DOCTEST_CHECK_UNARY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae6b232d8d18567dab628407d16e9c7a7">REQUIRE_UNARY</link>   <link linkend="_doctest_8h_1a77558db4dc0f1758c756da740b64413a">DOCTEST_REQUIRE_UNARY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a6bcb1f9586c8a1b770fe750437ec8cfa">WARN_UNARY_FALSE</link>   <link linkend="_doctest_8h_1a24e0cd6aa574d457374825c7d61f2038">DOCTEST_WARN_UNARY_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a36a40aef3a44953f0c1f8271ab3b70f8">CHECK_UNARY_FALSE</link>   <link linkend="_doctest_8h_1a9ff04e98b0891f79528c180a4e7d6d36">DOCTEST_CHECK_UNARY_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a99df855c65a2face7a3498a4fe1cd09a">REQUIRE_UNARY_FALSE</link>   <link linkend="_doctest_8h_1a37703a3eac1f8332d970808340abf56e">DOCTEST_REQUIRE_UNARY_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9043f391eea4bb0934c036518dc21531">FAST_WARN_EQ</link>   <link linkend="_doctest_8h_1a307c7c41ebfa40b60def448d2190772d">DOCTEST_FAST_WARN_EQ</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a09a3290305a70939ba8f6ea5bbda01cf">FAST_CHECK_EQ</link>   <link linkend="_doctest_8h_1ab4a30ae5781ec52a8651c7cb695fb266">DOCTEST_FAST_CHECK_EQ</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ae9278be43244c903532a71cf6a5f8cb5">FAST_REQUIRE_EQ</link>   <link linkend="_doctest_8h_1aa25a354bc0f83e31ec1184eff29ec0d9">DOCTEST_FAST_REQUIRE_EQ</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a65a812a1ff2b5b311dfd2551522b5bfc">FAST_WARN_NE</link>   <link linkend="_doctest_8h_1a7f6c8720c02eef2319ffb32de1f10233">DOCTEST_FAST_WARN_NE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4a37ec67c14f39fee4b4d73b248c8bd0">FAST_CHECK_NE</link>   <link linkend="_doctest_8h_1aef35956b9f6316059552577b28b63b76">DOCTEST_FAST_CHECK_NE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a212e512331b6da86d30a9f1915df55a4">FAST_REQUIRE_NE</link>   <link linkend="_doctest_8h_1a181b3b01fecc87de85f3ce2647f05e9b">DOCTEST_FAST_REQUIRE_NE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab7e247ab9da0d5ced4c3698acec76b1d">FAST_WARN_GT</link>   <link linkend="_doctest_8h_1a5937efa19ce061357efe0b8a8f5be061">DOCTEST_FAST_WARN_GT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a35f390c6dab6f1e961a98d76e3b10629">FAST_CHECK_GT</link>   <link linkend="_doctest_8h_1aad48a1ad33a37268303363fe3285bb2c">DOCTEST_FAST_CHECK_GT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a8856b1236ba78ba2fe9e11e315fe6268">FAST_REQUIRE_GT</link>   <link linkend="_doctest_8h_1a74a2b5ebb76b33c7124bf3d5bc200cc6">DOCTEST_FAST_REQUIRE_GT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1af884b2b037f8a07a8a50f2ce7cef23f5">FAST_WARN_LT</link>   <link linkend="_doctest_8h_1a1c5270c3e5ed27308bcdcb2e439f5049">DOCTEST_FAST_WARN_LT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a345f95a4866068f1b7675d1d792a73ec">FAST_CHECK_LT</link>   <link linkend="_doctest_8h_1a2b5cbb281f86f22f30ca08e453ecb7f3">DOCTEST_FAST_CHECK_LT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1ab61a38f120650101238c44bca959f367">FAST_REQUIRE_LT</link>   <link linkend="_doctest_8h_1a17c6c39d376b0b97b0d883e7ec3fa728">DOCTEST_FAST_REQUIRE_LT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aea205cce196a21c6097083339e9f1b8e">FAST_WARN_GE</link>   <link linkend="_doctest_8h_1a7851a92cfdd7ec5b60ae070ee21b1ff4">DOCTEST_FAST_WARN_GE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a99058d7a7ceacd364badd0298f7081ed">FAST_CHECK_GE</link>   <link linkend="_doctest_8h_1a1ae0024144fb0081522e3778e2f3fe77">DOCTEST_FAST_CHECK_GE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1adc377b45d8e47d8eb3868b989a3b9b90">FAST_REQUIRE_GE</link>   <link linkend="_doctest_8h_1a2b6364c039a90a1b8519af193027c3a4">DOCTEST_FAST_REQUIRE_GE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a88604528e5995edf299b5d834649270a">FAST_WARN_LE</link>   <link linkend="_doctest_8h_1ac9a00a428fc5d856edac7d642f9d218a">DOCTEST_FAST_WARN_LE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a2b233dc32704dd5f7a1fcddec2852685">FAST_CHECK_LE</link>   <link linkend="_doctest_8h_1a4eaef3b35d06f2cd9a1b38ef4b8aa137">DOCTEST_FAST_CHECK_LE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a32a333f60363349c67869f6495a517b9">FAST_REQUIRE_LE</link>   <link linkend="_doctest_8h_1ab9fe58a6ab535c836df028567aa68693">DOCTEST_FAST_REQUIRE_LE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1abf255e9b12308f6f9300f621846cfdd3">FAST_WARN_UNARY</link>   <link linkend="_doctest_8h_1aad3a987ea3505b2ade023959bec1dbff">DOCTEST_FAST_WARN_UNARY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a613ebc5447bd957f6dd843ef57c12aa0">FAST_CHECK_UNARY</link>   <link linkend="_doctest_8h_1aef39710e57f05a74423ef552b9756a29">DOCTEST_FAST_CHECK_UNARY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a9234e43f15631ec6842615c6dc816856">FAST_REQUIRE_UNARY</link>   <link linkend="_doctest_8h_1a028cfc971ad12bc510b303622b9bc35f">DOCTEST_FAST_REQUIRE_UNARY</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1aed83cedd4a056a10fa0fa3a245bdc0a2">FAST_WARN_UNARY_FALSE</link>   <link linkend="_doctest_8h_1a85bdb241d41e64ec124f96d2efba9443">DOCTEST_FAST_WARN_UNARY_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a4c9e0dd1a602a5afcca2437ec5a106e1">FAST_CHECK_UNARY_FALSE</link>   <link linkend="_doctest_8h_1a4d91d1f535ad191f829bc3cf81b967eb">DOCTEST_FAST_CHECK_UNARY_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1af0f7170e4c1cf63072e6c02ccee6ab09">FAST_REQUIRE_UNARY_FALSE</link>   <link linkend="_doctest_8h_1a3c0e9e0c03a62a810aae8e282b807938">DOCTEST_FAST_REQUIRE_UNARY_FALSE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a32d192ac759d8a1c13c4e2d5d4cc6d04">TEST_CASE_TEMPLATE_INSTANTIATE</link>   <link linkend="_doctest_8h_1a5a2dcfd67d0f0aa96600b46678135514">DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_doctest_8h_1a3a7ef56c20fd24da92633816765eae59">DOCTEST_SINGLE_HEADER</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_classbasic__ostream">basic_ostream</link>&lt; char, <link linkend="_structchar__traits">char_traits</link>&lt; char &gt; &gt; <link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">ostream</link></para>
</listitem>
            <listitem><para>template&lt;class T &gt; </para><para>using <link linkend="_namespacedoctest_1_1detail_1a59ed49556ad14ee06e28c87f273535d3">doctest::detail::has_insertion_operator</link> = has_insertion_operator_impl::check&lt; T &gt;</para>
</listitem>
            <listitem><para>typedef void(* <link linkend="_namespacedoctest_1_1detail_1a7b2c60631c5f4906b26acf2e6b0e6e45">doctest::detail::funcType</link>) ()</para>
</listitem>
            <listitem><para>typedef void(* <link linkend="_namespacedoctest_1_1detail_1a5b5db6997f20389de5735e3ee3439b95">doctest::detail::assert_handler</link>) (const AssertData &amp;)</para>
</listitem>
            <listitem><para>typedef IReporter *(* <link linkend="_namespacedoctest_1_1detail_1a431bc1f18ee82461ef2cf98aad891526">doctest::detail::reporterCreatorFunc</link>) (const ContextOptions &amp;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92">doctest::Color::Enum</link> { 
<link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92a82bb3f0edc1798267a82ac34c1c098f2">doctest::Color::None</link> = 0
, <link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92a0bf060b447441fbf2e4beeb25370a808">doctest::Color::White</link>
, <link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92a67beb0a8d937993ad8b8cf6a238271f9">doctest::Color::Red</link>
, <link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92a11e251a01549ffbc0993c769e787c6ae">doctest::Color::Green</link>
, 
<link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92aada3ad8958b1319450cc20f3f8e5e2d6">doctest::Color::Blue</link>
, <link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92aee19aacebbc04b150add359e94684c83">doctest::Color::Cyan</link>
, <link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92a5da6111e5be1d7b01de0ee571cc1bc76">doctest::Color::Yellow</link>
, <link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92aa2a431a059ed0e85160db8967c8ace58">doctest::Color::Grey</link>
, 
<link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92a7659647d16a78c607f9bafaa207b9e07">doctest::Color::Bright</link> = 0x10
, <link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92a236dfdbcd49d10dbf1a31f9e2947a671">doctest::Color::BrightRed</link> = Bright | Red
, <link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92a016090b96620a42a63dadf0265977664">doctest::Color::BrightGreen</link> = Bright | Green
, <link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92a44f079a43a4709abd7d6f22b317838a2">doctest::Color::LightGrey</link> = Bright | Grey
, 
<link linkend="_namespacedoctest_1_1_color_1a32e9eaf6013139846e848af6e6cf2b92a4f80853796b4875d61ff5e4ad138492e">doctest::Color::BrightWhite</link> = Bright | White
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3">doctest::assertType::Enum</link> { 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a2dd798b430ccf956bc48c3b48bb4e570">doctest::assertType::is_warn</link> = 1
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a9ca6ff629647f2a90d4c01ce68800590">doctest::assertType::is_check</link> = 2 * is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3aff8fa549e941fb7ca7adcd49d9ffdf6d">doctest::assertType::is_require</link> = 2 * is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a34258afd98e569142dfb5b0a2c468436">doctest::assertType::is_normal</link> = 2 * is_require
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a922a5fb427724cad963fb3dd789a8114">doctest::assertType::is_throws</link> = 2 * is_normal
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a278ed7bf7e411c11e25ad8a60933ef34">doctest::assertType::is_throws_as</link> = 2 * is_throws
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ab79f3f076e62c260e77febd914bb82c3">doctest::assertType::is_throws_with</link> = 2 * is_throws_as
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a0ad6f07c0273891b1c3f2fd84fe666dc">doctest::assertType::is_nothrow</link> = 2 * is_throws_with
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a6539bad84e35008dc4a4a2c2d0793318">doctest::assertType::is_false</link> = 2 * is_nothrow
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3adfaee7d6a907d7681e53e0e91734e058">doctest::assertType::is_unary</link> = 2 * is_false
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a7010ae6142f085a3bfd85caa251c7499">doctest::assertType::is_eq</link> = 2 * is_unary
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a3d624cd25af4d9bb1c29bd84f356e58d">doctest::assertType::is_ne</link> = 2 * is_eq
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3abcad551db5972ed3918d2dae14c556f1">doctest::assertType::is_lt</link> = 2 * is_ne
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a21d83a0fcc556d3c90614579e5cd2599">doctest::assertType::is_gt</link> = 2 * is_lt
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a79ca2d90e99907eb5fe2971865bfcb30">doctest::assertType::is_ge</link> = 2 * is_gt
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a3e1b485ee74c36fc1d0ba5902032af87">doctest::assertType::is_le</link> = 2 * is_ge
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3af972d8a41e3090304ef38ad43483314d">doctest::assertType::DT_WARN</link> = is_normal | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a4431fd22794b06d854c7f9fbf43b10b8">doctest::assertType::DT_CHECK</link> = is_normal | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a807ade2ef3e65b909e1551d8c8406d54">doctest::assertType::DT_REQUIRE</link> = is_normal | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a710e0f57342dff74ba39e74419443435">doctest::assertType::DT_WARN_FALSE</link> = is_normal | is_false | is_warn
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3aa518f2714c2f58bb1ed3b2d2f8c1b075">doctest::assertType::DT_CHECK_FALSE</link> = is_normal | is_false | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ae81f0c9c945715690c794c4e7cbb7bbf">doctest::assertType::DT_REQUIRE_FALSE</link> = is_normal | is_false | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a9575f9ac61737539cde0fc3353e3d424">doctest::assertType::DT_WARN_THROWS</link> = is_throws | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3abf34f9af14d1c3d9b23dc80fc553e607">doctest::assertType::DT_CHECK_THROWS</link> = is_throws | is_check
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a961340742b11d7e37f3874fef305d609">doctest::assertType::DT_REQUIRE_THROWS</link> = is_throws | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ad915d4c9681ce4f6ad8a5e0967cb0f04">doctest::assertType::DT_WARN_THROWS_AS</link> = is_throws_as | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a389b826746dde155cb46687c7e565cce">doctest::assertType::DT_CHECK_THROWS_AS</link> = is_throws_as | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a180912d780568b6d9f1f0ef4a96a7be6">doctest::assertType::DT_REQUIRE_THROWS_AS</link> = is_throws_as | is_require
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ae6357eecb1d854cd7ad71e72c52c2f6d">doctest::assertType::DT_WARN_THROWS_WITH</link> = is_throws_with | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a5b0d08bf133f70f746ebd2f8b8e514d5">doctest::assertType::DT_CHECK_THROWS_WITH</link> = is_throws_with | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a7b37f7677433a6da93a9e15c3ab62d24">doctest::assertType::DT_REQUIRE_THROWS_WITH</link> = is_throws_with | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ac76f8fa71f1b776034cd7db2687c99c8">doctest::assertType::DT_WARN_THROWS_WITH_AS</link> = is_throws_with | is_throws_as | is_warn
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a13d5a33071d51aaaebcd08c4fd012035">doctest::assertType::DT_CHECK_THROWS_WITH_AS</link> = is_throws_with | is_throws_as | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a81ed09bf509081b6c5887f196a593438">doctest::assertType::DT_REQUIRE_THROWS_WITH_AS</link> = is_throws_with | is_throws_as | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ab2aade9d6de83d7d0548e784a502d67f">doctest::assertType::DT_WARN_NOTHROW</link> = is_nothrow | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a5c330f1952cb85a8416902e237ec6f1f">doctest::assertType::DT_CHECK_NOTHROW</link> = is_nothrow | is_check
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a2ab93f3a9dfd9c597e4810cd22fe6d16">doctest::assertType::DT_REQUIRE_NOTHROW</link> = is_nothrow | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a856e0bc4639d22946b02ca5aae7f6c2c">doctest::assertType::DT_WARN_EQ</link> = is_normal | is_eq | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a25ea7bcb831f008cfbcfd5da41e9008e">doctest::assertType::DT_CHECK_EQ</link> = is_normal | is_eq | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ab2880914ce3960d556aa8681e9e47ad4">doctest::assertType::DT_REQUIRE_EQ</link> = is_normal | is_eq | is_require
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a64e5a52a68ac1280d1a0910578d342cd">doctest::assertType::DT_WARN_NE</link> = is_normal | is_ne | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ad2d533f5a46b17df1170d4b29ccd572a">doctest::assertType::DT_CHECK_NE</link> = is_normal | is_ne | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a3c0d1c2454abd45b63391ee3970b133c">doctest::assertType::DT_REQUIRE_NE</link> = is_normal | is_ne | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3af5a8a1175f296c626efaaf728a8a5b96">doctest::assertType::DT_WARN_GT</link> = is_normal | is_gt | is_warn
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a4dbd73b6541c25b5c6fe059e970d937a">doctest::assertType::DT_CHECK_GT</link> = is_normal | is_gt | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a65b68e53d865150051f880273a6c8462">doctest::assertType::DT_REQUIRE_GT</link> = is_normal | is_gt | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3af78432b9b33a8765b326441c42a0c1b8">doctest::assertType::DT_WARN_LT</link> = is_normal | is_lt | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a18449655ab3feda0b66aa7306a85aeb5">doctest::assertType::DT_CHECK_LT</link> = is_normal | is_lt | is_check
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a6dabfc7a1ec170e2ec6e31de8e703085">doctest::assertType::DT_REQUIRE_LT</link> = is_normal | is_lt | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a493f8d19aa6056a3e8f475772548349b">doctest::assertType::DT_WARN_GE</link> = is_normal | is_ge | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3afc68d23bf246717c10e7bc0231dc062c">doctest::assertType::DT_CHECK_GE</link> = is_normal | is_ge | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a54599a5076fe992159f2e88cad185682">doctest::assertType::DT_REQUIRE_GE</link> = is_normal | is_ge | is_require
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a1d40a679871797392c64dd8b4324f4e8">doctest::assertType::DT_WARN_LE</link> = is_normal | is_le | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ad711b30f529eb092f9bcf90600a07eb1">doctest::assertType::DT_CHECK_LE</link> = is_normal | is_le | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a49c183d4be8babc83bbb3754303f7d45">doctest::assertType::DT_REQUIRE_LE</link> = is_normal | is_le | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a9bc05989c4bd086562f3a0e05ab07ceb">doctest::assertType::DT_WARN_UNARY</link> = is_normal | is_unary | is_warn
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ae649bc4be44cb5e296ee851a7637c018">doctest::assertType::DT_CHECK_UNARY</link> = is_normal | is_unary | is_check
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a0e430d8916b3d685b5df30d602d06b6d">doctest::assertType::DT_REQUIRE_UNARY</link> = is_normal | is_unary | is_require
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ad0c3e97290a20b0942a2988c2c413f45">doctest::assertType::DT_WARN_UNARY_FALSE</link> = is_normal | is_false | is_unary | is_warn
, <link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3ae8c9c5080e302b840ab4e053d5160191">doctest::assertType::DT_CHECK_UNARY_FALSE</link> = is_normal | is_false | is_unary | is_check
, 
<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a23caa06098e51bbb331da066e98ebd4e">doctest::assertType::DT_REQUIRE_UNARY_FALSE</link> = is_normal | is_false | is_unary | is_require
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_namespacedoctest_1_1detail_1_1binary_assert_comparison_1a2117cafa5b007d26f2e0988f3a081569">doctest::detail::binaryAssertComparison::Enum</link> { 
<link linkend="_namespacedoctest_1_1detail_1_1binary_assert_comparison_1a2117cafa5b007d26f2e0988f3a081569af644d2e3091c342ab78b12da1fcb06dc">doctest::detail::binaryAssertComparison::eq</link> = 0
, <link linkend="_namespacedoctest_1_1detail_1_1binary_assert_comparison_1a2117cafa5b007d26f2e0988f3a081569a851b5dd9ab390a406621216da112ac9c">doctest::detail::binaryAssertComparison::ne</link>
, <link linkend="_namespacedoctest_1_1detail_1_1binary_assert_comparison_1a2117cafa5b007d26f2e0988f3a081569a3efb665f41cd9490d9739e1ad228918e">doctest::detail::binaryAssertComparison::gt</link>
, <link linkend="_namespacedoctest_1_1detail_1_1binary_assert_comparison_1a2117cafa5b007d26f2e0988f3a081569aea0e8621512e05d78d88ff2d2c164a6b">doctest::detail::binaryAssertComparison::lt</link>
, 
<link linkend="_namespacedoctest_1_1detail_1_1binary_assert_comparison_1a2117cafa5b007d26f2e0988f3a081569a1de9460fcfb6a1681f13d54083f88313">doctest::detail::binaryAssertComparison::ge</link>
, <link linkend="_namespacedoctest_1_1detail_1_1binary_assert_comparison_1a2117cafa5b007d26f2e0988f3a081569a58efccb94f787a00914adc6db077347b">doctest::detail::binaryAssertComparison::le</link>
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_namespacedoctest_1_1detail_1_1assert_action_1a38ba820518d42da988fab24b2f3d0548">doctest::detail::assertAction::Enum</link> { <link linkend="_namespacedoctest_1_1detail_1_1assert_action_1a38ba820518d42da988fab24b2f3d0548aad8b44f340e17ab74bf8386e63b25191">doctest::detail::assertAction::nothing</link> = 0
, <link linkend="_namespacedoctest_1_1detail_1_1assert_action_1a38ba820518d42da988fab24b2f3d0548a22a154d8ba87f66a1e02fe72fe8530cb">doctest::detail::assertAction::dbgbreak</link> = 1
, <link linkend="_namespacedoctest_1_1detail_1_1assert_action_1a38ba820518d42da988fab24b2f3d0548a3f8411bdb0657d9c725828004fed1009">doctest::detail::assertAction::shouldthrow</link> = 2
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3c">doctest::TestCaseFailureReason::Enum</link> { 
<link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3ca768cf3716f713edcf20c442607c403b2">doctest::TestCaseFailureReason::None</link> = 0
, <link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3ca06ab32ff93cacaa65c6a2667ddde64e9">doctest::TestCaseFailureReason::AssertFailure</link> = 1
, <link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3ca0474331a35ec33aefa287574dbe9a142">doctest::TestCaseFailureReason::Exception</link> = 2
, <link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3ca362a350971c370e7bf89f1993aeb2eeb">doctest::TestCaseFailureReason::Crash</link> = 4
, 
<link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3cab87a56a01139c003c5f90678c37a0cb3">doctest::TestCaseFailureReason::TooManyFailedAsserts</link> = 8
, <link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3ca90b6713d67ca5273d0b7aa2d2ac60ab1">doctest::TestCaseFailureReason::Timeout</link> = 16
, <link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3ca214290d44846106400115f44d2d21cb9">doctest::TestCaseFailureReason::ShouldHaveFailedButDidnt</link> = 32
, <link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3ca0ea1283c0437f975df930c28820a3920">doctest::TestCaseFailureReason::ShouldHaveFailedAndDid</link> = 64
, 
<link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3caaab68fabc66bf5c3a606985f59a11afe">doctest::TestCaseFailureReason::DidntFailExactlyNumTimes</link> = 128
, <link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3cab0e5ba77e37e755a83a01fdb2ad57b4d">doctest::TestCaseFailureReason::FailedExactlyNumTimes</link> = 256
, <link linkend="_namespacedoctest_1_1_test_case_failure_reason_1aecb2ca1f80416d60f0d6b96f65859d3caa038bc08a903185cf809dd05056d6a75">doctest::TestCaseFailureReason::CouldHaveFailedAndDid</link> = 512
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_doctest_8h_1a628491cf2971a026350d5401986bf6d3">DOCTEST_CLANG_SUPPRESS_WARNING_PUSH</link> <link linkend="_doctest_8h_1a8015d10af2883db80a955ce0d523886d">DOCTEST_GCC_SUPPRESS_WARNING_PUSH</link> <link linkend="_doctest_8h_1aec6d713a9dde361b8e68afe78c5bf3cf">DOCTEST_MSVC_SUPPRESS_WARNING_PUSH</link> <link linkend="_doctest_8h_1a03d36bae0d7ed8dcce87834d61051290">DOCTEST_MSVC_SUPPRESS_WARNING</link> (4616) DOCTEST_MSVC_SUPPRESS_WARNING(4619) DOCTEST_MSVC_SUPPRESS_WARNING(4996) DOCTEST_MSVC_SUPPRESS_WARNING(4706) DOCTEST_MSVC_SUPPRESS_WARNING(4512) DOCTEST_MSVC_SUPPRESS_WARNING(4127) DOCTEST_MSVC_SUPPRESS_WARNING(4820) DOCTEST_MSVC_SUPPRESS_WARNING(4625) DOCTEST_MSVC_SUPPRESS_WARNING(4626) DOCTEST_MSVC_SUPPRESS_WARNING(5027) DOCTEST_MSVC_SUPPRESS_WARNING(5026) DOCTEST_MSVC_SUPPRESS_WARNING(4623) DOCTEST_MSVC_SUPPRESS_WARNING(4640) DOCTEST_MSVC_SUPPRESS_WARNING(26439) DOCTEST_MSVC_SUPPRESS_WARNING(26495) DOCTEST_MSVC_SUPPRESS_WARNING(26451) DOCTEST_MSVC_SUPPRESS_WARNING(26444) DOCTEST_MSVC_SUPPRESS_WARNING(26812) <link linkend="_doctest_8h_1a758d9627ba7331f195ffbba94e5931a1">DOCTEST_STD_NAMESPACE_BEGIN</link> typedef decltype(nullptr) nullptr_t</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1ae332e5e775f83a532884303780f79f9f">doctest::operator==</link> (const String &amp;lhs, const String &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1ab9a88e4c19857cd86a0f037d27bcad72">doctest::operator!=</link> (const String &amp;lhs, const String &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1afa15b277b9a277793b7adf129e0128d9">doctest::operator&lt;</link> (const String &amp;lhs, const String &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1acef5990b03a973c74ff2dd6cfc112913">doctest::operator&gt;</link> (const String &amp;lhs, const String &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1a27c6c308e814ad9384499bafc03f9e39">doctest::operator&lt;=</link> (const String &amp;lhs, const String &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1ac32accb42e937cf870de2f6865ea236a">doctest::operator&gt;=</link> (const String &amp;lhs, const String &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> &amp; <link linkend="_namespacedoctest_1a7817aba561f42fc42fdccb1b312c7678">doctest::operator&lt;&lt;</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> &amp;s, const String &amp;in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> &amp; <link linkend="_namespacedoctest_1_1_color_1a2cc3f4bdda7bfd2e0e3faf7e678d3b98">doctest::Color::operator&lt;&lt;</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> &amp;s, Color::Enum code)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const char * <link linkend="_namespacedoctest_1a44bf1260a82383247d446170810493cf">doctest::assertString</link> (assertType::Enum at)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const char * <link linkend="_namespacedoctest_1a3fcfa9f7f479ad1b46d142e210c8ca75">doctest::failureString</link> (assertType::Enum at)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const char * <link linkend="_namespacedoctest_1a31b19b71f2b30f77f84b6a8bb4943925">doctest::skipPathFromFilename</link> (const char *file)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> &amp; <link linkend="_namespacedoctest_1_1detail_1_1has__insertion__operator__impl_1a50dfa929b76e3581c300a3a8b87d21e2">doctest::detail::has_insertion_operator_impl::os</link> ()</para>
</listitem>
            <listitem><para>template&lt;class T &gt; </para><para><link linkend="_namespacedoctest_1_1detail_1_1has__insertion__operator__impl_1aca675e788cb45921358501d70f0a2529">doctest::detail::has_insertion_operator_impl::DOCTEST_REF_WRAP</link> (T) val()</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a4027cb5407ce2ff132645e89bba97010">doctest::detail::my_memcpy</link> (void *dest, const void *src, unsigned num)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> * <link linkend="_namespacedoctest_1_1detail_1ab4df12a4ff9fad5f16edcc1c54f6c4fc">doctest::detail::getTlsOss</link> ()</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1_1detail_1a7b0b3df5fe79d7ffa8fa138201476df1">doctest::detail::getTlsOssResult</link> ()</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1_1detail_1adb894f73b88fb3b39d6c48d80451f5ff">doctest::detail::rawMemoryToString</link> (const void *object, unsigned size)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>String <link linkend="_namespacedoctest_1_1detail_1a28da75fd01ab3d943436aa69876b7151">doctest::detail::rawMemoryToString</link> (const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(T) object)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>const char * <link linkend="_namespacedoctest_1_1detail_1ad64c6c2fd8d7302e8a5e3452cdfb3f75">doctest::detail::type_to_string</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>String <link linkend="_namespacedoctest_1a8907bf35788959391343a2304f004e17">doctest::toString</link> (const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(T) value)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1a70fd23e88074d38b9d61476005305df5">doctest::toString</link> (bool in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1a68660ce630bd88a551ab3108709e6592">doctest::toString</link> (float in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1a43b51978c9505f682cbff9462a02f8af">doctest::toString</link> (double in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1ae4e12dd9865bb31f417f9df0c41813cf">doctest::toString</link> (double long in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1af106dff2a0c068d301349b754c466378">doctest::toString</link> (char in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1a1f910fdc13d84a538090b959a97a6fa5">doctest::toString</link> (char signed in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1ae2c3e60e3ee32da5d8fc4f778b7a225a">doctest::toString</link> (char unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1aaff61384b81d700818094342c6110d2c">doctest::toString</link> (int short in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1a04b10595f3fac969e7682a48fd3ad0c6">doctest::toString</link> (int short unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1a0318ba5a1fbeb9e2fe84227a2f007dac">doctest::toString</link> (int in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1a6de63ae787cb530ee050b3632106907d">doctest::toString</link> (int unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1aac941ce13f416e31d72d9fb114681bb2">doctest::toString</link> (int long in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1ac1c9dfb0453eb7d222bed9d2a4cf62fd">doctest::toString</link> (int long unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1ada057336406349bd947f26b1ddb97bd0">doctest::toString</link> (int long long in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1a0996f0f29ee1288fc2363c958fd4fd05">doctest::toString</link> (int long long unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1a88b03675f9b7b8afe5e6d4fa15117181">doctest::toString</link> (std::nullptr_t in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> String <link linkend="_namespacedoctest_1a63aa06a8555c5aa34a7a6e76e87a3bca">doctest::toString</link> (const Approx &amp;in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const ContextOptions * <link linkend="_namespacedoctest_1a13c02a469cfc2264d547fc0fc3a55569">doctest::getContextOptions</link> ()</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1_1detail_1acec9ff072dd86af95225a8beb9c57298">doctest::detail::checkIfShouldThrow</link> (assertType::Enum at)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a60ffd50b9ee7adfcafc078f333aac8b6">doctest::detail::throwException</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename L , typename R &gt; </para><para>String <link linkend="_namespacedoctest_1_1detail_1a6879a79aea397a22e296e4afd0a90e3b">doctest::detail::stringifyBinaryExpr</link> (const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(L) lhs, const char *op, const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(R) rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a628491cf2971a026350d5401986bf6d3">DOCTEST_CLANG_SUPPRESS_WARNING_PUSH</link> <link linkend="_doctest_8h_1a8015d10af2883db80a955ce0d523886d">DOCTEST_GCC_SUPPRESS_WARNING_PUSH</link> <link linkend="_doctest_8h_1aec6d713a9dde361b8e68afe78c5bf3cf">DOCTEST_MSVC_SUPPRESS_WARNING_PUSH</link> <link linkend="_namespacedoctest_1_1detail_1a3b966d87ac1e25498fae773355c43d90">doctest::detail::DOCTEST_MSVC_SUPPRESS_WARNING</link> (4388) DOCTEST_MSVC_SUPPRESS_WARNING(4389) DOCTEST_MSVC_SUPPRESS_WARNING(4018) template&lt; typename L &gt; struct Expression_lhs</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> int <link linkend="_namespacedoctest_1_1detail_1a00f99edefb8490a8e2602d58c96431f4">doctest::detail::regTest</link> (const TestCase &amp;tc)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> int <link linkend="_namespacedoctest_1_1detail_1ae79cb8df06d35468dd0ba9f04c85802c">doctest::detail::setTestSuite</link> (const TestSuite &amp;ts)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1_1detail_1a013828c4e677241cc26aeea33f762710">doctest::detail::isDebuggerActive</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>int <link linkend="_namespacedoctest_1_1detail_1aad401b097a9af4df1d4a9d0911957c0f">doctest::detail::instantiationHelper</link> (const T &amp;)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a0ff832be68bf666d856aefd539e1ce81">doctest::detail::failed_out_of_a_testing_context</link> (const AssertData &amp;ad)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a6d4efb043e9e5a6fa0db64f0e230a7a7">doctest::detail::decomp_assert</link> (assertType::Enum at, const char *file, int line, const char *expr, Result result)</para>
</listitem>
            <listitem><para>template&lt;int comparison, typename L , typename R &gt; </para><para><link linkend="_doctest_8h_1a47e9d3609dfcc90b9a630ff33b9524d6">DOCTEST_NOINLINE</link> void <link linkend="_namespacedoctest_1_1detail_1a570279a22ca888528e87a426853a0288">doctest::detail::binary_assert</link> (assertType::Enum at, const char *file, int line, const char *expr, const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(L) lhs, const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(R) rhs)</para>
</listitem>
            <listitem><para>template&lt;typename L &gt; </para><para><link linkend="_doctest_8h_1a47e9d3609dfcc90b9a630ff33b9524d6">DOCTEST_NOINLINE</link> void <link linkend="_namespacedoctest_1_1detail_1a5343d1b26df7f86767d5e7026c03bf0f">doctest::detail::unary_assert</link> (assertType::Enum at, const char *file, int line, const char *expr, const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(L) val)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a3887426da16e0d12e6f0e270a767a6a5">doctest::detail::registerExceptionTranslatorImpl</link> (const IExceptionTranslator *et)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>void <link linkend="_namespacedoctest_1_1detail_1a71b40611173c82709726b36715229179">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, const T &amp;value)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a54f817dd0c3e33a4f96de3e638d4c559">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, bool in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1ac0ab7be576543b52b480df7f44ee13c5">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, float in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1aa0aa6b2f4cd2ab8cc0b5c4c6a1745e05">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, double in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1aa7f9d8383116a268a72993244a43d74d">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, double long in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1aee32c9e6a9e1b419c6feb44e8c1b6205">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, char in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1aba277e0f00b9cf14b7161bbe033b126f">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, char signed in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a23f8f4324507a40de4fb636f20f36fb7">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, char unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1aaa111edaaf87cd57961d2c1923d762cb">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, int short in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a72d0259a5b3c0f0f3a88ea8d732223f8">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, int short unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1af6f60470d3f0f2b858a03dad822ca9c6">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, int in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a7001b8028c2c21968f2a0deb3417e9a4">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, int unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a830b2dd9dae3bc74ae0c9002b7a2dbed">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, int long in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a82d6e6a85cac7cfb399d8215308369fc">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, int long unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a359e9b95a3fbe0322056d9d9c7385cde">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, int long long in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a22df719818a3df2b975ba0f7045cc8fd">doctest::detail::toStream</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> *s, int long long unsigned in)</para>
</listitem>
            <listitem><para>template&lt;typename L &gt; </para><para>ContextScope&lt; L &gt; <link linkend="_namespacedoctest_1_1detail_1af15c2ff0484248d0966fc38a4b0d3a66">doctest::detail::MakeContextScope</link> (const L &amp;lambda)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a104a0e533475e45acbddd9266c4d687e">doctest::DOCTEST_DEFINE_DECORATOR</link> (test_suite, const char *, &quot;&quot;)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a07f4a26e2b7cce41abb7d71124951792">doctest::DOCTEST_DEFINE_DECORATOR</link> (description, const char *, &quot;&quot;)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a0ce903d8e37a8fdc185f6e8c73f9b1dd">doctest::DOCTEST_DEFINE_DECORATOR</link> (skip, bool, true)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a09d01a6e97677b7bb508bf925e421963">doctest::DOCTEST_DEFINE_DECORATOR</link> (timeout, double, 0)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a44ea7d81a1561f2222b8ffa69eecc599">doctest::DOCTEST_DEFINE_DECORATOR</link> (may_fail, bool, true)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a0da07f59e77fcb14943788b2c85e2355">doctest::DOCTEST_DEFINE_DECORATOR</link> (should_fail, bool, true)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1ab1678966da9d93629130f083220403da">doctest::DOCTEST_DEFINE_DECORATOR</link> (expected_failures, int, 0)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>int <link linkend="_namespacedoctest_1a8e23e6bb4c6982688652060dbe41385d">doctest::registerExceptionTranslator</link> (String(*translateFunction)(T))</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_structdoctest_1_1detail_1_1_test_suite">doctest::detail::TestSuite</link> &amp; <link linkend="_namespacedoctest__detail__test__suite__ns_1a63d04c2e0ba35dff1e33cf0a24ec66c8">doctest_detail_test_suite_ns::getCurrentTestSuite</link> ()</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> void <link linkend="_namespacedoctest_1_1detail_1a828e011bb6028ab94eb14a3c7d8bd2c4">doctest::detail::registerReporterImpl</link> (const char *name, int prio, reporterCreatorFunc c, bool isReporter)</para>
</listitem>
            <listitem><para>template&lt;typename Reporter &gt; </para><para>IReporter * <link linkend="_namespacedoctest_1_1detail_1ac78a52271e895d8485356c4516a18685">doctest::detail::reporterCreator</link> (const ContextOptions &amp;o)</para>
</listitem>
            <listitem><para>template&lt;typename Reporter &gt; </para><para>int <link linkend="_namespacedoctest_1a9e878a811f7bf0a615b3a39de3004673">doctest::registerReporter</link> (const char *name, int priority, bool isReporter)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1a0b03060093b3894c976b6ae84e55f3f2">doctest::is_running_in_test</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_doctest_8h_1ae9198d684b0ca06b0efef9dd773707e5"/><section>
    <title>ADD_FAIL_AT</title>
<indexterm><primary>ADD_FAIL_AT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>ADD_FAIL_AT</secondary></indexterm>
<para><computeroutput>#define ADD_FAIL_AT   <link linkend="_doctest_8h_1aa1254f2ec6ce34a8cb67405627eff668">DOCTEST_ADD_FAIL_AT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2787e9f3c538079e2b7652af637cbbfb"/><section>
    <title>ADD_FAIL_CHECK_AT</title>
<indexterm><primary>ADD_FAIL_CHECK_AT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>ADD_FAIL_CHECK_AT</secondary></indexterm>
<para><computeroutput>#define ADD_FAIL_CHECK_AT   <link linkend="_doctest_8h_1a7a719fa6c010be31ae8836fe26482ce7">DOCTEST_ADD_FAIL_CHECK_AT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a285505606bef4b4d31c77a1996f98aee"/><section>
    <title>ADD_MESSAGE_AT</title>
<indexterm><primary>ADD_MESSAGE_AT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>ADD_MESSAGE_AT</secondary></indexterm>
<para><computeroutput>#define ADD_MESSAGE_AT   <link linkend="_doctest_8h_1a367ca236dba71ee4c0889b6911f658b1">DOCTEST_ADD_MESSAGE_AT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a6272f72e74c723b318c2439075d888ab"/><section>
    <title>AND_THEN</title>
<indexterm><primary>AND_THEN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>AND_THEN</secondary></indexterm>
<para><computeroutput>#define AND_THEN   <link linkend="_doctest_8h_1a98336975a3b162f382cad2ae2c058276">DOCTEST_AND_THEN</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a6894cdaa24f62067bbe1a80d8a48f8cb"/><section>
    <title>AND_WHEN</title>
<indexterm><primary>AND_WHEN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>AND_WHEN</secondary></indexterm>
<para><computeroutput>#define AND_WHEN   <link linkend="_doctest_8h_1a9e696b9f04c18580c871e07653affcbf">DOCTEST_AND_WHEN</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abb69d780b56e8a35bfbbb27b21beb0fd"/><section>
    <title>CAPTURE</title>
<indexterm><primary>CAPTURE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CAPTURE</secondary></indexterm>
<para><computeroutput>#define CAPTURE   <link linkend="_doctest_8h_1a5a8ade28d558f5fcb66f8493d0596e6c">DOCTEST_CAPTURE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4ccc9878008def89d325d0bb7efdbd6b"/><section>
    <title>CHECK</title>
<indexterm><primary>CHECK</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK</secondary></indexterm>
<para><computeroutput>#define CHECK   <link linkend="_doctest_8h_1a8f40c4072e85f02a3e58c5f67a182297">DOCTEST_CHECK</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa7c97e362afd06550fd226758b1021fd"/><section>
    <title>CHECK_EQ</title>
<indexterm><primary>CHECK_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_EQ</secondary></indexterm>
<para><computeroutput>#define CHECK_EQ   <link linkend="_doctest_8h_1a2ac8b5624c3b8d9520c75a68634cb8c1">DOCTEST_CHECK_EQ</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a3c3d71eabfadc1c6f3e80acbbea07f29"/><section>
    <title>CHECK_FALSE</title>
<indexterm><primary>CHECK_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_FALSE</secondary></indexterm>
<para><computeroutput>#define CHECK_FALSE   <link linkend="_doctest_8h_1a7ecf2c25ffc2fad220a251af0ab37ff8">DOCTEST_CHECK_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4644c4aff40338599bdf925aa64b5363"/><section>
    <title>CHECK_FALSE_MESSAGE</title>
<indexterm><primary>CHECK_FALSE_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_FALSE_MESSAGE</secondary></indexterm>
<para><computeroutput>#define CHECK_FALSE_MESSAGE   <link linkend="_doctest_8h_1a6da2cbe8bddf6c0e4439bb7a311ba1a9">DOCTEST_CHECK_FALSE_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1adce4701730a063ff753aeaa94ab9082a"/><section>
    <title>CHECK_GE</title>
<indexterm><primary>CHECK_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_GE</secondary></indexterm>
<para><computeroutput>#define CHECK_GE   <link linkend="_doctest_8h_1a296f8caf3497fbc9433d2e77691b0b3e">DOCTEST_CHECK_GE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1adc36ecc0e3b272468e11e482769b40e1"/><section>
    <title>CHECK_GT</title>
<indexterm><primary>CHECK_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_GT</secondary></indexterm>
<para><computeroutput>#define CHECK_GT   <link linkend="_doctest_8h_1a8d3a9781fd7a67021ec12e0aea024ed6">DOCTEST_CHECK_GT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a04cc334c1e87259093ce0572b7c2537b"/><section>
    <title>CHECK_LE</title>
<indexterm><primary>CHECK_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_LE</secondary></indexterm>
<para><computeroutput>#define CHECK_LE   <link linkend="_doctest_8h_1a25823108f6fed8787303bbad7c619f35">DOCTEST_CHECK_LE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a693d588a1de917cd2704f25cde1395b7"/><section>
    <title>CHECK_LT</title>
<indexterm><primary>CHECK_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_LT</secondary></indexterm>
<para><computeroutput>#define CHECK_LT   <link linkend="_doctest_8h_1a4e1d83dffb779a2829552c4fefbb516a">DOCTEST_CHECK_LT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a85265ef7f38b93816874a8fa8d1f948b"/><section>
    <title>CHECK_MESSAGE</title>
<indexterm><primary>CHECK_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_MESSAGE</secondary></indexterm>
<para><computeroutput>#define CHECK_MESSAGE   <link linkend="_doctest_8h_1aaf53857feaa373e517e5dede5a7430d0">DOCTEST_CHECK_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac1b35a9ec0532f1586c32e945e8f0484"/><section>
    <title>CHECK_NE</title>
<indexterm><primary>CHECK_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_NE</secondary></indexterm>
<para><computeroutput>#define CHECK_NE   <link linkend="_doctest_8h_1afe1e20e7078d65704c6b2f4e55bbfc03">DOCTEST_CHECK_NE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ace8e47a5266e54297f0072cbaf594aa9"/><section>
    <title>CHECK_NOTHROW</title>
<indexterm><primary>CHECK_NOTHROW</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_NOTHROW</secondary></indexterm>
<para><computeroutput>#define CHECK_NOTHROW   <link linkend="_doctest_8h_1aac7b7640f3d6611423a2c5a18d905069">DOCTEST_CHECK_NOTHROW</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a571418c4b97ab003b8e078247c5f0495"/><section>
    <title>CHECK_NOTHROW_MESSAGE</title>
<indexterm><primary>CHECK_NOTHROW_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_NOTHROW_MESSAGE</secondary></indexterm>
<para><computeroutput>#define CHECK_NOTHROW_MESSAGE   <link linkend="_doctest_8h_1a425ef51159702670d46e53fca9221e77">DOCTEST_CHECK_NOTHROW_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a49f4af5c52262c35fdcac1f364983ca4"/><section>
    <title>CHECK_THROWS</title>
<indexterm><primary>CHECK_THROWS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_THROWS</secondary></indexterm>
<para><computeroutput>#define CHECK_THROWS   <link linkend="_doctest_8h_1a4390850609b0f465bc8a4e7355f91177">DOCTEST_CHECK_THROWS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a936031842e040b6f7ee57f058e54d719"/><section>
    <title>CHECK_THROWS_AS</title>
<indexterm><primary>CHECK_THROWS_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_THROWS_AS</secondary></indexterm>
<para><computeroutput>#define CHECK_THROWS_AS   <link linkend="_doctest_8h_1a84f4eb0aeb37b27b3cad5f3e44c08195">DOCTEST_CHECK_THROWS_AS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1af760aa58c8ceb6e17effad18dae55326"/><section>
    <title>CHECK_THROWS_AS_MESSAGE</title>
<indexterm><primary>CHECK_THROWS_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_THROWS_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define CHECK_THROWS_AS_MESSAGE   <link linkend="_doctest_8h_1a9483bd587b78ec5dd417d78c4d58c2c7">DOCTEST_CHECK_THROWS_AS_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abfc9366c617327e12a2cdd8f799bc739"/><section>
    <title>CHECK_THROWS_MESSAGE</title>
<indexterm><primary>CHECK_THROWS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_THROWS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define CHECK_THROWS_MESSAGE   <link linkend="_doctest_8h_1a40e1f0abafceaf741c82813fe5a1473b">DOCTEST_CHECK_THROWS_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a534872011db5807f81d8f3e4ab93ab2d"/><section>
    <title>CHECK_THROWS_WITH</title>
<indexterm><primary>CHECK_THROWS_WITH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_THROWS_WITH</secondary></indexterm>
<para><computeroutput>#define CHECK_THROWS_WITH   <link linkend="_doctest_8h_1a141ab91ff9697fa7d978989d56ce42d5">DOCTEST_CHECK_THROWS_WITH</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa902acb3ee1701a5c82f0573943af77f"/><section>
    <title>CHECK_THROWS_WITH_AS</title>
<indexterm><primary>CHECK_THROWS_WITH_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_THROWS_WITH_AS</secondary></indexterm>
<para><computeroutput>#define CHECK_THROWS_WITH_AS   <link linkend="_doctest_8h_1ac53fee45159d080520c2d16416e6468f">DOCTEST_CHECK_THROWS_WITH_AS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae6c07d23f916761f41a2b0b59a77bd72"/><section>
    <title>CHECK_THROWS_WITH_AS_MESSAGE</title>
<indexterm><primary>CHECK_THROWS_WITH_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_THROWS_WITH_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define CHECK_THROWS_WITH_AS_MESSAGE   <link linkend="_doctest_8h_1aa947e1dda1efa5c9414d04bf3878aa86">DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a777c69196055d341f2a08b5baa58a04e"/><section>
    <title>CHECK_THROWS_WITH_MESSAGE</title>
<indexterm><primary>CHECK_THROWS_WITH_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_THROWS_WITH_MESSAGE</secondary></indexterm>
<para><computeroutput>#define CHECK_THROWS_WITH_MESSAGE   <link linkend="_doctest_8h_1a86ccca9385cdc38331bdefe72705fd80">DOCTEST_CHECK_THROWS_WITH_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad3063ffa66751881825c57fad540e9ec"/><section>
    <title>CHECK_UNARY</title>
<indexterm><primary>CHECK_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_UNARY</secondary></indexterm>
<para><computeroutput>#define CHECK_UNARY   <link linkend="_doctest_8h_1a660ce2901f42d4d2a82327204a6a3602">DOCTEST_CHECK_UNARY</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a36a40aef3a44953f0c1f8271ab3b70f8"/><section>
    <title>CHECK_UNARY_FALSE</title>
<indexterm><primary>CHECK_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>CHECK_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define CHECK_UNARY_FALSE   <link linkend="_doctest_8h_1a9ff04e98b0891f79528c180a4e7d6d36">DOCTEST_CHECK_UNARY_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a81441260ac032623cb3bd27c661d7ca9"/><section>
    <title>DOCTEST_ADD_AT_IMPL</title>
<indexterm><primary>DOCTEST_ADD_AT_IMPL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ADD_AT_IMPL</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ADD_AT_IMPL( type,  file,  line,  mb,  x)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doctest::detail::MessageBuilder&#32;mb(file,&#32;line,&#32;doctest::assertType::type);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mb&#32;&lt;&lt;&#32;x;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_ASSERT_LOG_AND_REACT(mb);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_doctest_8h_1aa1254f2ec6ce34a8cb67405627eff668"/><section>
    <title>DOCTEST_ADD_FAIL_AT</title>
<indexterm><primary>DOCTEST_ADD_FAIL_AT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ADD_FAIL_AT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ADD_FAIL_AT( file,  line,  x)   <link linkend="_doctest_8h_1a81441260ac032623cb3bd27c661d7ca9">DOCTEST_ADD_AT_IMPL</link>(is_require, file, line, <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_MESSAGE_), x)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a7a719fa6c010be31ae8836fe26482ce7"/><section>
    <title>DOCTEST_ADD_FAIL_CHECK_AT</title>
<indexterm><primary>DOCTEST_ADD_FAIL_CHECK_AT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ADD_FAIL_CHECK_AT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ADD_FAIL_CHECK_AT( file,  line,  x)   <link linkend="_doctest_8h_1a81441260ac032623cb3bd27c661d7ca9">DOCTEST_ADD_AT_IMPL</link>(is_check, file, line, <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_MESSAGE_), x)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a367ca236dba71ee4c0889b6911f658b1"/><section>
    <title>DOCTEST_ADD_MESSAGE_AT</title>
<indexterm><primary>DOCTEST_ADD_MESSAGE_AT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ADD_MESSAGE_AT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ADD_MESSAGE_AT( file,  line,  x)   <link linkend="_doctest_8h_1a81441260ac032623cb3bd27c661d7ca9">DOCTEST_ADD_AT_IMPL</link>(is_warn, file, line, <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_MESSAGE_), x)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a74415dda5235fab1484227e6e6d8e7f4"/><section>
    <title>DOCTEST_ALIGNMENT</title>
<indexterm><primary>DOCTEST_ALIGNMENT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ALIGNMENT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ALIGNMENT( x)   __attribute__((aligned(x)))</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a98336975a3b162f382cad2ae2c058276"/><section>
    <title>DOCTEST_AND_THEN</title>
<indexterm><primary>DOCTEST_AND_THEN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_AND_THEN</secondary></indexterm>
<para><computeroutput>#define DOCTEST_AND_THEN( name)   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(&quot;     And: &quot; name)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a9e696b9f04c18580c871e07653affcbf"/><section>
    <title>DOCTEST_AND_WHEN</title>
<indexterm><primary>DOCTEST_AND_WHEN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_AND_WHEN</secondary></indexterm>
<para><computeroutput>#define DOCTEST_AND_WHEN( name)   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(&quot;And when: &quot; name)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac2799231daab4b10ca221f997ef94981"/><section>
    <title>DOCTEST_ANONYMOUS</title>
<indexterm><primary>DOCTEST_ANONYMOUS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ANONYMOUS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ANONYMOUS( x)   <link linkend="_doctest_8h_1aa13d3659f8aef0e4de7eab8eb5a70888">DOCTEST_CAT</link>(x, __LINE__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc"/><section>
    <title>DOCTEST_ASSERT_IMPLEMENT_1</title>
<indexterm><primary>DOCTEST_ASSERT_IMPLEMENT_1</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ASSERT_IMPLEMENT_1</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ASSERT_IMPLEMENT_1( assert_type,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_ASSERT_IMPLEMENT_2(assert_type,&#32;__VA_ARGS__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981"/><section>
    <title>DOCTEST_ASSERT_IMPLEMENT_2</title>
<indexterm><primary>DOCTEST_ASSERT_IMPLEMENT_2</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ASSERT_IMPLEMENT_2</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ASSERT_IMPLEMENT_2( assert_type,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1aeffeb8afb2053d165c856f4ee520b62b">DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH</link>(<emphasis role="stringliteral">&quot;-Woverloaded-shift-op-parentheses&quot;</emphasis>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;doctest::detail::ResultBuilder&#32;_DOCTEST_RB(doctest::assertType::assert_type,&#32;__FILE__,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__LINE__,&#32;#__VA_ARGS__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_WRAP_IN_TRY(_DOCTEST_RB.setResult(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structdoctest_1_1detail_1_1_expression_decomposer">doctest::detail::ExpressionDecomposer</link>(doctest::assertType::assert_type)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;__VA_ARGS__))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_ASSERT_LOG_AND_REACT(_DOCTEST_RB)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_CLANG_SUPPRESS_WARNING_POP
</programlisting></section>
<anchor xml:id="_doctest_8h_1a91330bd2fb42d1fac4aa07e425a20f2e"/><section>
    <title>DOCTEST_ASSERT_IN_TESTS</title>
<indexterm><primary>DOCTEST_ASSERT_IN_TESTS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ASSERT_IN_TESTS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ASSERT_IN_TESTS( decomp)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;ResultBuilder&#32;rb(at,&#32;file,&#32;line,&#32;expr);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;rb.m_failed&#32;=&#32;failed;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;if(rb.m_failed&#32;||&#32;<link linkend="_namespacedoctest_1a13c02a469cfc2264d547fc0fc3a55569">getContextOptions</link>()-&gt;success)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.m_decomp&#32;=&#32;decomp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;if(rb.log())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_BREAK_INTO_DEBUGGER();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;if(rb.m_failed&#32;&amp;&amp;&#32;<link linkend="_namespacedoctest_1_1detail_1acec9ff072dd86af95225a8beb9c57298">checkIfShouldThrow</link>(at))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;throwException()
</programlisting></section>
<anchor xml:id="_doctest_8h_1a8e164a058ac26ae189718da03547f9fd"/><section>
    <title>DOCTEST_ASSERT_LOG_AND_REACT</title>
<indexterm><primary>DOCTEST_ASSERT_LOG_AND_REACT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ASSERT_LOG_AND_REACT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ASSERT_LOG_AND_REACT( b)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(b.log())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_BREAK_INTO_DEBUGGER();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;b.react()
</programlisting></section>
<anchor xml:id="_doctest_8h_1af4883c6ce28524bfc7510a1e84c537bc"/><section>
    <title>DOCTEST_ASSERT_NOTHROW</title>
<indexterm><primary>DOCTEST_ASSERT_NOTHROW</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ASSERT_NOTHROW</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ASSERT_NOTHROW( assert_type,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doctest::detail::ResultBuilder&#32;_DOCTEST_RB(doctest::assertType::assert_type,&#32;__FILE__,&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__LINE__,&#32;#__VA_ARGS__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;try&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_CAST_TO_VOID(__VA_ARGS__)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>(...)&#32;{&#32;_DOCTEST_RB.translateException();&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_ASSERT_LOG_AND_REACT(_DOCTEST_RB);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_doctest_8h_1ab4f2e4a4e2bbb1ea221db5cdf117a014"/><section>
    <title>DOCTEST_ASSERT_OUT_OF_TESTS</title>
<indexterm><primary>DOCTEST_ASSERT_OUT_OF_TESTS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ASSERT_OUT_OF_TESTS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ASSERT_OUT_OF_TESTS( decomp)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(!<link linkend="_namespacedoctest_1a0b03060093b3894c976b6ae84e55f3f2">is_running_in_test</link>)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(failed)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultBuilder&#32;rb(at,&#32;file,&#32;line,&#32;expr);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.m_failed&#32;=&#32;failed;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.m_decomp&#32;=&#32;decomp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;failed_out_of_a_testing_context(rb);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(<link linkend="_namespacedoctest_1_1detail_1a013828c4e677241cc26aeea33f762710">isDebuggerActive</link>()&#32;&amp;&amp;&#32;!<link linkend="_namespacedoctest_1a13c02a469cfc2264d547fc0fc3a55569">getContextOptions</link>()-&gt;no_breaks)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_BREAK_INTO_DEBUGGER();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(<link linkend="_namespacedoctest_1_1detail_1acec9ff072dd86af95225a8beb9c57298">checkIfShouldThrow</link>(at))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;throwException();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887"/><section>
    <title>DOCTEST_ASSERT_THROWS_AS</title>
<indexterm><primary>DOCTEST_ASSERT_THROWS_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ASSERT_THROWS_AS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ASSERT_THROWS_AS( expr,  assert_type,  message,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(!<link linkend="_namespacedoctest_1a13c02a469cfc2264d547fc0fc3a55569">doctest::getContextOptions</link>()-&gt;no_throw)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doctest::detail::ResultBuilder&#32;_DOCTEST_RB(doctest::assertType::assert_type,&#32;__FILE__,&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__LINE__,&#32;#expr,&#32;#__VA_ARGS__,&#32;message);&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;try&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_CAST_TO_VOID(expr)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdoctest_1_1detail_1_1remove__const">doctest::detail::remove_const</link>&lt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structdoctest_1_1detail_1_1remove__reference_1ab3cba0e8bc4c71b7f4ecdf85476ec4cc">doctest::detail::remove_reference&lt;__VA_ARGS__&gt;::type</link>&gt;::type&amp;)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DOCTEST_RB.translateException();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DOCTEST_RB.m_threw_as&#32;=&#32;<emphasis role="keyword">true</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>(...)&#32;{&#32;_DOCTEST_RB.translateException();&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_ASSERT_LOG_AND_REACT(_DOCTEST_RB);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61"/><section>
    <title>DOCTEST_ASSERT_THROWS_WITH</title>
<indexterm><primary>DOCTEST_ASSERT_THROWS_WITH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_ASSERT_THROWS_WITH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_ASSERT_THROWS_WITH( expr,  expr_str,  assert_type,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(!<link linkend="_namespacedoctest_1a13c02a469cfc2264d547fc0fc3a55569">doctest::getContextOptions</link>()-&gt;no_throw)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doctest::detail::ResultBuilder&#32;_DOCTEST_RB(doctest::assertType::assert_type,&#32;__FILE__,&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__LINE__,&#32;expr_str,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;__VA_ARGS__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;try&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_CAST_TO_VOID(expr)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>(...)&#32;{&#32;_DOCTEST_RB.translateException();&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_ASSERT_LOG_AND_REACT(_DOCTEST_RB);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8"/><section>
    <title>DOCTEST_BINARY_ASSERT</title>
<indexterm><primary>DOCTEST_BINARY_ASSERT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_BINARY_ASSERT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_BINARY_ASSERT( assert_type,  comp,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doctest::detail::ResultBuilder&#32;_DOCTEST_RB(doctest::assertType::assert_type,&#32;__FILE__,&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__LINE__,&#32;#__VA_ARGS__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_WRAP_IN_TRY(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DOCTEST_RB.binary_assert&lt;doctest::detail::binaryAssertComparison::comp&gt;(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__VA_ARGS__))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_ASSERT_LOG_AND_REACT(_DOCTEST_RB);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a709ccd44cac02b9af890e6e1880e406e"/><section>
    <title>DOCTEST_BINARY_RELATIONAL_OP</title>
<indexterm><primary>DOCTEST_BINARY_RELATIONAL_OP</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_BINARY_RELATIONAL_OP</secondary></indexterm>
<para><computeroutput>#define DOCTEST_BINARY_RELATIONAL_OP( n,  op)       template &lt;class L, class R&gt; struct RelationalComparator&lt;n, L, R&gt; { bool operator()(const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(L) lhs, const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(R) rhs) const { return op(lhs, rhs); } };</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a156f7857b0e423d51c56ea8398d0cb94"/><section>
    <title>DOCTEST_BREAK_INTO_DEBUGGER</title>
<indexterm><primary>DOCTEST_BREAK_INTO_DEBUGGER</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_BREAK_INTO_DEBUGGER</secondary></indexterm>
<para><computeroutput>#define DOCTEST_BREAK_INTO_DEBUGGER( )   ((void)0)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a5a8ade28d558f5fcb66f8493d0596e6c"/><section>
    <title>DOCTEST_CAPTURE</title>
<indexterm><primary>DOCTEST_CAPTURE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CAPTURE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CAPTURE( x)   <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(#x &quot; := &quot; &lt;&lt; x)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a70f4ca15fe554a44bb0e2b8109e45822"/><section>
    <title>DOCTEST_CAST_TO_VOID</title>
<indexterm><primary>DOCTEST_CAST_TO_VOID</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CAST_TO_VOID</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CAST_TO_VOID( ...)   __VA_ARGS__;</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa13d3659f8aef0e4de7eab8eb5a70888"/><section>
    <title>DOCTEST_CAT</title>
<indexterm><primary>DOCTEST_CAT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CAT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CAT( s1,  s2)   <link linkend="_doctest_8h_1a3e1308af156afd15b2abde1ebe778421">DOCTEST_CAT_IMPL</link>(s1, s2)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a3e1308af156afd15b2abde1ebe778421"/><section>
    <title>DOCTEST_CAT_IMPL</title>
<indexterm><primary>DOCTEST_CAT_IMPL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CAT_IMPL</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CAT_IMPL( s1,  s2)   s1##s2</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a8f40c4072e85f02a3e58c5f67a182297"/><section>
    <title>DOCTEST_CHECK</title>
<indexterm><primary>DOCTEST_CHECK</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK( ...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_CHECK, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2ac8b5624c3b8d9520c75a68634cb8c1"/><section>
    <title>DOCTEST_CHECK_EQ</title>
<indexterm><primary>DOCTEST_CHECK_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_EQ</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_EQ( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_EQ, eq, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a7ecf2c25ffc2fad220a251af0ab37ff8"/><section>
    <title>DOCTEST_CHECK_FALSE</title>
<indexterm><primary>DOCTEST_CHECK_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_FALSE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_FALSE( ...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_CHECK_FALSE, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a6da2cbe8bddf6c0e4439bb7a311ba1a9"/><section>
    <title>DOCTEST_CHECK_FALSE_MESSAGE</title>
<indexterm><primary>DOCTEST_CHECK_FALSE_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_FALSE_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_FALSE_MESSAGE( cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_CHECK_FALSE, cond); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a296f8caf3497fbc9433d2e77691b0b3e"/><section>
    <title>DOCTEST_CHECK_GE</title>
<indexterm><primary>DOCTEST_CHECK_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_GE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_GE( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_GE, ge, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a8d3a9781fd7a67021ec12e0aea024ed6"/><section>
    <title>DOCTEST_CHECK_GT</title>
<indexterm><primary>DOCTEST_CHECK_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_GT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_GT( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_GT, gt, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a25823108f6fed8787303bbad7c619f35"/><section>
    <title>DOCTEST_CHECK_LE</title>
<indexterm><primary>DOCTEST_CHECK_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_LE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_LE( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_LE, le, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4e1d83dffb779a2829552c4fefbb516a"/><section>
    <title>DOCTEST_CHECK_LT</title>
<indexterm><primary>DOCTEST_CHECK_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_LT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_LT( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_LT, lt, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aaf53857feaa373e517e5dede5a7430d0"/><section>
    <title>DOCTEST_CHECK_MESSAGE</title>
<indexterm><primary>DOCTEST_CHECK_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_MESSAGE( cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_CHECK, cond); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1afe1e20e7078d65704c6b2f4e55bbfc03"/><section>
    <title>DOCTEST_CHECK_NE</title>
<indexterm><primary>DOCTEST_CHECK_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_NE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_NE( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_CHECK_NE, ne, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aac7b7640f3d6611423a2c5a18d905069"/><section>
    <title>DOCTEST_CHECK_NOTHROW</title>
<indexterm><primary>DOCTEST_CHECK_NOTHROW</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_NOTHROW</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_NOTHROW( ...)   <link linkend="_doctest_8h_1af4883c6ce28524bfc7510a1e84c537bc">DOCTEST_ASSERT_NOTHROW</link>(DT_CHECK_NOTHROW, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a425ef51159702670d46e53fca9221e77"/><section>
    <title>DOCTEST_CHECK_NOTHROW_MESSAGE</title>
<indexterm><primary>DOCTEST_CHECK_NOTHROW_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_NOTHROW_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_NOTHROW_MESSAGE( expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1aac7b7640f3d6611423a2c5a18d905069">DOCTEST_CHECK_NOTHROW</link>(expr); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4390850609b0f465bc8a4e7355f91177"/><section>
    <title>DOCTEST_CHECK_THROWS</title>
<indexterm><primary>DOCTEST_CHECK_THROWS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_THROWS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_THROWS( ...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>((__VA_ARGS__), #__VA_ARGS__, DT_CHECK_THROWS, &quot;&quot;)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a84f4eb0aeb37b27b3cad5f3e44c08195"/><section>
    <title>DOCTEST_CHECK_THROWS_AS</title>
<indexterm><primary>DOCTEST_CHECK_THROWS_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_THROWS_AS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_THROWS_AS( expr,  ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_CHECK_THROWS_AS, &quot;&quot;, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a9483bd587b78ec5dd417d78c4d58c2c7"/><section>
    <title>DOCTEST_CHECK_THROWS_AS_MESSAGE</title>
<indexterm><primary>DOCTEST_CHECK_THROWS_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_THROWS_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_THROWS_AS_MESSAGE( expr,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a84f4eb0aeb37b27b3cad5f3e44c08195">DOCTEST_CHECK_THROWS_AS</link>(expr, ex); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a40e1f0abafceaf741c82813fe5a1473b"/><section>
    <title>DOCTEST_CHECK_THROWS_MESSAGE</title>
<indexterm><primary>DOCTEST_CHECK_THROWS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_THROWS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_THROWS_MESSAGE( expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a4390850609b0f465bc8a4e7355f91177">DOCTEST_CHECK_THROWS</link>(expr); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a141ab91ff9697fa7d978989d56ce42d5"/><section>
    <title>DOCTEST_CHECK_THROWS_WITH</title>
<indexterm><primary>DOCTEST_CHECK_THROWS_WITH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_THROWS_WITH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_THROWS_WITH( expr,  ...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>(expr, #expr, DT_CHECK_THROWS_WITH, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac53fee45159d080520c2d16416e6468f"/><section>
    <title>DOCTEST_CHECK_THROWS_WITH_AS</title>
<indexterm><primary>DOCTEST_CHECK_THROWS_WITH_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_THROWS_WITH_AS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_THROWS_WITH_AS( expr,  message,  ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_CHECK_THROWS_WITH_AS, message, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa947e1dda1efa5c9414d04bf3878aa86"/><section>
    <title>DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE</title>
<indexterm><primary>DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE( expr,  with,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ac53fee45159d080520c2d16416e6468f">DOCTEST_CHECK_THROWS_WITH_AS</link>(expr, with, ex); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a86ccca9385cdc38331bdefe72705fd80"/><section>
    <title>DOCTEST_CHECK_THROWS_WITH_MESSAGE</title>
<indexterm><primary>DOCTEST_CHECK_THROWS_WITH_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_THROWS_WITH_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_THROWS_WITH_MESSAGE( expr,  with,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a141ab91ff9697fa7d978989d56ce42d5">DOCTEST_CHECK_THROWS_WITH</link>(expr, with); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a660ce2901f42d4d2a82327204a6a3602"/><section>
    <title>DOCTEST_CHECK_UNARY</title>
<indexterm><primary>DOCTEST_CHECK_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_UNARY</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_UNARY( ...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_CHECK_UNARY, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a9ff04e98b0891f79528c180a4e7d6d36"/><section>
    <title>DOCTEST_CHECK_UNARY_FALSE</title>
<indexterm><primary>DOCTEST_CHECK_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CHECK_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CHECK_UNARY_FALSE( ...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_CHECK_UNARY_FALSE, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa8185dcb93ad97061498679342d1e683"/><section>
    <title>DOCTEST_CLANG</title>
<indexterm><primary>DOCTEST_CLANG</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CLANG</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CLANG   0</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abfc21b2dc3aad9632b9e2689f468646c"/><section>
    <title>DOCTEST_CLANG_SUPPRESS_WARNING</title>
<indexterm><primary>DOCTEST_CLANG_SUPPRESS_WARNING</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CLANG_SUPPRESS_WARNING</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CLANG_SUPPRESS_WARNING( w)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a569dfd3f8dfae352f35e8f62aadbdbc4"/><section>
    <title>DOCTEST_CLANG_SUPPRESS_WARNING_POP</title>
<indexterm><primary>DOCTEST_CLANG_SUPPRESS_WARNING_POP</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CLANG_SUPPRESS_WARNING_POP</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CLANG_SUPPRESS_WARNING_POP</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a628491cf2971a026350d5401986bf6d3"/><section>
    <title>DOCTEST_CLANG_SUPPRESS_WARNING_PUSH</title>
<indexterm><primary>DOCTEST_CLANG_SUPPRESS_WARNING_PUSH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CLANG_SUPPRESS_WARNING_PUSH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CLANG_SUPPRESS_WARNING_PUSH</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aeffeb8afb2053d165c856f4ee520b62b"/><section>
    <title>DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH</title>
<indexterm><primary>DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH( w)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1affded31d2dc937d95785e3d17332765b"/><section>
    <title>DOCTEST_CMP_EQ</title>
<indexterm><primary>DOCTEST_CMP_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CMP_EQ</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CMP_EQ( l,  r)   l == r</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a8d05cc6960a068bd84bc215d98112973"/><section>
    <title>DOCTEST_CMP_GE</title>
<indexterm><primary>DOCTEST_CMP_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CMP_GE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CMP_GE( l,  r)   l &gt;= r</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a6cd6ec78f910453372adbdca54d28e96"/><section>
    <title>DOCTEST_CMP_GT</title>
<indexterm><primary>DOCTEST_CMP_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CMP_GT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CMP_GT( l,  r)   l &gt; r</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a324adcbcbb7e31481c2f619a5a0d5a56"/><section>
    <title>DOCTEST_CMP_LE</title>
<indexterm><primary>DOCTEST_CMP_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CMP_LE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CMP_LE( l,  r)   l &lt;= r</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad17ac1cc3242c45a461b1364c13cde55"/><section>
    <title>DOCTEST_CMP_LT</title>
<indexterm><primary>DOCTEST_CMP_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CMP_LT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CMP_LT( l,  r)   l &lt; r</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4848f1d467fb5ef1dae4f31d56b8760a"/><section>
    <title>DOCTEST_CMP_NE</title>
<indexterm><primary>DOCTEST_CMP_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CMP_NE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CMP_NE( l,  r)   l != r</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4a746a6cb24ff5b89c7b9a86a20335e8"/><section>
    <title>DOCTEST_COMPARISON_RETURN_TYPE</title>
<indexterm><primary>DOCTEST_COMPARISON_RETURN_TYPE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_COMPARISON_RETURN_TYPE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_COMPARISON_RETURN_TYPE   bool</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a04223c76a58ee7c4f865afb6d57d048f"/><section>
    <title>DOCTEST_COMPILER</title>
<indexterm><primary>DOCTEST_COMPILER</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_COMPILER</secondary></indexterm>
<para><computeroutput>#define DOCTEST_COMPILER( MAJOR,  MINOR,  PATCH)   ((MAJOR)*10000000 + (MINOR)*100000 + (PATCH))</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a8d99d050db88cb183c1d02bba4e798b0"/><section>
    <title>DOCTEST_CONFIG_NO_EXCEPTIONS</title>
<indexterm><primary>DOCTEST_CONFIG_NO_EXCEPTIONS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CONFIG_NO_EXCEPTIONS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CONFIG_NO_EXCEPTIONS</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a631e7295c7abd3a071464fae6be07250"/><section>
    <title>DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS</title>
<indexterm><primary>DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a03d1f35ae32484c0778dc0130e41de35"/><section>
    <title>DOCTEST_CONFIG_POSIX_SIGNALS</title>
<indexterm><primary>DOCTEST_CONFIG_POSIX_SIGNALS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CONFIG_POSIX_SIGNALS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CONFIG_POSIX_SIGNALS</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1acc08da2add47137024ca50062129be4b"/><section>
    <title>DOCTEST_CREATE_AND_REGISTER_FUNCTION</title>
<indexterm><primary>DOCTEST_CREATE_AND_REGISTER_FUNCTION</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CREATE_AND_REGISTER_FUNCTION</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CREATE_AND_REGISTER_FUNCTION( f,  decorators)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;f();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_REGISTER_FUNCTION(<link linkend="_doctest_8h_1ab46a6d1a6d00f0bda5fcf8b93966a20a">DOCTEST_EMPTY</link>,&#32;f,&#32;decorators)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">void</emphasis>&#32;f()
</programlisting></section>
<anchor xml:id="_doctest_8h_1a4e084d2cf8ff31bcd011a8291a3d2afd"/><section>
    <title>DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS</title>
<indexterm><primary>DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS( f,  proxy,  decorators)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespacedoctest_1_1detail_1a7b2c60631c5f4906b26acf2e6b0e6e45">doctest::detail::funcType</link>&#32;proxy()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;f;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_REGISTER_FUNCTION(<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>,&#32;proxy(),&#32;decorators)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">void</emphasis>&#32;f()
</programlisting></section>
<anchor xml:id="_doctest_8h_1a70e5d466aeb2ec395124cd6366b08499"/><section>
    <title>DOCTEST_DEFINE_DECORATOR</title>
<indexterm><primary>DOCTEST_DEFINE_DECORATOR</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_DEFINE_DECORATOR</secondary></indexterm>
<para><computeroutput>#define DOCTEST_DEFINE_DECORATOR( name,  type,  def)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>name&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type&#32;data;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name(type&#32;in&#32;=&#32;def)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;data(in)&#32;{}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;void&#32;fill(detail::TestCase&amp;&#32;state)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;state.DOCTEST_CAT(m_,&#32;name)&#32;=&#32;data;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;void&#32;fill(detail::TestSuite&amp;&#32;state)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;state.DOCTEST_CAT(m_,&#32;name)&#32;=&#32;data;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_doctest_8h_1a924a81d1115ba1ad170b51800e46d3cf"/><section>
    <title>DOCTEST_DO_BINARY_EXPRESSION_COMPARISON</title>
<indexterm><primary>DOCTEST_DO_BINARY_EXPRESSION_COMPARISON</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_DO_BINARY_EXPRESSION_COMPARISON</secondary></indexterm>
<para><computeroutput>#define DOCTEST_DO_BINARY_EXPRESSION_COMPARISON( op,  op_str,  op_macro)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;R&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_NOINLINE&#32;Result&#32;<emphasis role="keyword">operator</emphasis>&#32;op(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(R)&#32;rhs)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool&#32;res&#32;=&#32;op_macro(lhs,&#32;rhs);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(m_at&#32;&amp;&#32;<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a6539bad84e35008dc4a4a2c2d0793318">assertType::is_false</link>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;!res;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(!res&#32;||&#32;<link linkend="_namespacedoctest_1a13c02a469cfc2264d547fc0fc3a55569">doctest::getContextOptions</link>()-&gt;success)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Result(res,&#32;<link linkend="_namespacedoctest_1_1detail_1a6879a79aea397a22e296e4afd0a90e3b">stringifyBinaryExpr</link>(lhs,&#32;op_str,&#32;rhs));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Result(res);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_doctest_8h_1ab46a6d1a6d00f0bda5fcf8b93966a20a"/><section>
    <title>DOCTEST_EMPTY</title>
<indexterm><primary>DOCTEST_EMPTY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_EMPTY</secondary></indexterm>
<para><computeroutput>#define DOCTEST_EMPTY</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2af7c3f800a334028830a61d820484ea"/><section>
    <title>DOCTEST_FAIL</title>
<indexterm><primary>DOCTEST_FAIL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAIL</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAIL( x)   <link linkend="_doctest_8h_1aa1254f2ec6ce34a8cb67405627eff668">DOCTEST_ADD_FAIL_AT</link>(__FILE__, __LINE__, x)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a311ced33941337d35007ee11d86e6523"/><section>
    <title>DOCTEST_FAIL_CHECK</title>
<indexterm><primary>DOCTEST_FAIL_CHECK</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAIL_CHECK</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAIL_CHECK( x)   <link linkend="_doctest_8h_1a7a719fa6c010be31ae8836fe26482ce7">DOCTEST_ADD_FAIL_CHECK_AT</link>(__FILE__, __LINE__, x)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab4a30ae5781ec52a8651c7cb695fb266"/><section>
    <title>DOCTEST_FAST_CHECK_EQ</title>
<indexterm><primary>DOCTEST_FAST_CHECK_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_CHECK_EQ</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_CHECK_EQ   <link linkend="_doctest_8h_1a2ac8b5624c3b8d9520c75a68634cb8c1">DOCTEST_CHECK_EQ</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a1ae0024144fb0081522e3778e2f3fe77"/><section>
    <title>DOCTEST_FAST_CHECK_GE</title>
<indexterm><primary>DOCTEST_FAST_CHECK_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_CHECK_GE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_CHECK_GE   <link linkend="_doctest_8h_1a296f8caf3497fbc9433d2e77691b0b3e">DOCTEST_CHECK_GE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aad48a1ad33a37268303363fe3285bb2c"/><section>
    <title>DOCTEST_FAST_CHECK_GT</title>
<indexterm><primary>DOCTEST_FAST_CHECK_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_CHECK_GT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_CHECK_GT   <link linkend="_doctest_8h_1a8d3a9781fd7a67021ec12e0aea024ed6">DOCTEST_CHECK_GT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4eaef3b35d06f2cd9a1b38ef4b8aa137"/><section>
    <title>DOCTEST_FAST_CHECK_LE</title>
<indexterm><primary>DOCTEST_FAST_CHECK_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_CHECK_LE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_CHECK_LE   <link linkend="_doctest_8h_1a25823108f6fed8787303bbad7c619f35">DOCTEST_CHECK_LE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2b5cbb281f86f22f30ca08e453ecb7f3"/><section>
    <title>DOCTEST_FAST_CHECK_LT</title>
<indexterm><primary>DOCTEST_FAST_CHECK_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_CHECK_LT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_CHECK_LT   <link linkend="_doctest_8h_1a4e1d83dffb779a2829552c4fefbb516a">DOCTEST_CHECK_LT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aef35956b9f6316059552577b28b63b76"/><section>
    <title>DOCTEST_FAST_CHECK_NE</title>
<indexterm><primary>DOCTEST_FAST_CHECK_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_CHECK_NE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_CHECK_NE   <link linkend="_doctest_8h_1afe1e20e7078d65704c6b2f4e55bbfc03">DOCTEST_CHECK_NE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aef39710e57f05a74423ef552b9756a29"/><section>
    <title>DOCTEST_FAST_CHECK_UNARY</title>
<indexterm><primary>DOCTEST_FAST_CHECK_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_CHECK_UNARY</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_CHECK_UNARY   <link linkend="_doctest_8h_1a660ce2901f42d4d2a82327204a6a3602">DOCTEST_CHECK_UNARY</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4d91d1f535ad191f829bc3cf81b967eb"/><section>
    <title>DOCTEST_FAST_CHECK_UNARY_FALSE</title>
<indexterm><primary>DOCTEST_FAST_CHECK_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_CHECK_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_CHECK_UNARY_FALSE   <link linkend="_doctest_8h_1a9ff04e98b0891f79528c180a4e7d6d36">DOCTEST_CHECK_UNARY_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa25a354bc0f83e31ec1184eff29ec0d9"/><section>
    <title>DOCTEST_FAST_REQUIRE_EQ</title>
<indexterm><primary>DOCTEST_FAST_REQUIRE_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_REQUIRE_EQ</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_REQUIRE_EQ   <link linkend="_doctest_8h_1a8820dcb94345362c2fd94aea26a3eabc">DOCTEST_REQUIRE_EQ</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2b6364c039a90a1b8519af193027c3a4"/><section>
    <title>DOCTEST_FAST_REQUIRE_GE</title>
<indexterm><primary>DOCTEST_FAST_REQUIRE_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_REQUIRE_GE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_REQUIRE_GE   <link linkend="_doctest_8h_1ad75b722f83eb3f81662af7fccae74732">DOCTEST_REQUIRE_GE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a74a2b5ebb76b33c7124bf3d5bc200cc6"/><section>
    <title>DOCTEST_FAST_REQUIRE_GT</title>
<indexterm><primary>DOCTEST_FAST_REQUIRE_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_REQUIRE_GT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_REQUIRE_GT   <link linkend="_doctest_8h_1a87d30bb902d1bfca7427a9eb51d130eb">DOCTEST_REQUIRE_GT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab9fe58a6ab535c836df028567aa68693"/><section>
    <title>DOCTEST_FAST_REQUIRE_LE</title>
<indexterm><primary>DOCTEST_FAST_REQUIRE_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_REQUIRE_LE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_REQUIRE_LE   <link linkend="_doctest_8h_1a9101f25bfe135de1e306e3ed342e248a">DOCTEST_REQUIRE_LE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a17c6c39d376b0b97b0d883e7ec3fa728"/><section>
    <title>DOCTEST_FAST_REQUIRE_LT</title>
<indexterm><primary>DOCTEST_FAST_REQUIRE_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_REQUIRE_LT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_REQUIRE_LT   <link linkend="_doctest_8h_1ab88925759665843f59b14f097213351c">DOCTEST_REQUIRE_LT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a181b3b01fecc87de85f3ce2647f05e9b"/><section>
    <title>DOCTEST_FAST_REQUIRE_NE</title>
<indexterm><primary>DOCTEST_FAST_REQUIRE_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_REQUIRE_NE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_REQUIRE_NE   <link linkend="_doctest_8h_1aa34e39b7d59335760ffa1b9fce45cc4b">DOCTEST_REQUIRE_NE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a028cfc971ad12bc510b303622b9bc35f"/><section>
    <title>DOCTEST_FAST_REQUIRE_UNARY</title>
<indexterm><primary>DOCTEST_FAST_REQUIRE_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_REQUIRE_UNARY</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_REQUIRE_UNARY   <link linkend="_doctest_8h_1a77558db4dc0f1758c756da740b64413a">DOCTEST_REQUIRE_UNARY</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a3c0e9e0c03a62a810aae8e282b807938"/><section>
    <title>DOCTEST_FAST_REQUIRE_UNARY_FALSE</title>
<indexterm><primary>DOCTEST_FAST_REQUIRE_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_REQUIRE_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_REQUIRE_UNARY_FALSE   <link linkend="_doctest_8h_1a37703a3eac1f8332d970808340abf56e">DOCTEST_REQUIRE_UNARY_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a307c7c41ebfa40b60def448d2190772d"/><section>
    <title>DOCTEST_FAST_WARN_EQ</title>
<indexterm><primary>DOCTEST_FAST_WARN_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_WARN_EQ</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_WARN_EQ   <link linkend="_doctest_8h_1a1db08e05a079662153c7702e10dcdbde">DOCTEST_WARN_EQ</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a7851a92cfdd7ec5b60ae070ee21b1ff4"/><section>
    <title>DOCTEST_FAST_WARN_GE</title>
<indexterm><primary>DOCTEST_FAST_WARN_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_WARN_GE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_WARN_GE   <link linkend="_doctest_8h_1aae5060834af3dd90c806b087368d010c">DOCTEST_WARN_GE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a5937efa19ce061357efe0b8a8f5be061"/><section>
    <title>DOCTEST_FAST_WARN_GT</title>
<indexterm><primary>DOCTEST_FAST_WARN_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_WARN_GT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_WARN_GT   <link linkend="_doctest_8h_1ad814c5db21e9ac7eca4b3e87aec0ef3b">DOCTEST_WARN_GT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac9a00a428fc5d856edac7d642f9d218a"/><section>
    <title>DOCTEST_FAST_WARN_LE</title>
<indexterm><primary>DOCTEST_FAST_WARN_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_WARN_LE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_WARN_LE   <link linkend="_doctest_8h_1aaed576a70b191ac93a4a4e4052b31f4f">DOCTEST_WARN_LE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a1c5270c3e5ed27308bcdcb2e439f5049"/><section>
    <title>DOCTEST_FAST_WARN_LT</title>
<indexterm><primary>DOCTEST_FAST_WARN_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_WARN_LT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_WARN_LT   <link linkend="_doctest_8h_1aa0e1bebf090f015583da8decb0ee3e5c">DOCTEST_WARN_LT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a7f6c8720c02eef2319ffb32de1f10233"/><section>
    <title>DOCTEST_FAST_WARN_NE</title>
<indexterm><primary>DOCTEST_FAST_WARN_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_WARN_NE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_WARN_NE   <link linkend="_doctest_8h_1aaa8ef6ed223cba8e86d0bc0676aeb50e">DOCTEST_WARN_NE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aad3a987ea3505b2ade023959bec1dbff"/><section>
    <title>DOCTEST_FAST_WARN_UNARY</title>
<indexterm><primary>DOCTEST_FAST_WARN_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_WARN_UNARY</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_WARN_UNARY   <link linkend="_doctest_8h_1a41e14871f960ec76113197ad929d18c8">DOCTEST_WARN_UNARY</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a85bdb241d41e64ec124f96d2efba9443"/><section>
    <title>DOCTEST_FAST_WARN_UNARY_FALSE</title>
<indexterm><primary>DOCTEST_FAST_WARN_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FAST_WARN_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FAST_WARN_UNARY_FALSE   <link linkend="_doctest_8h_1a24e0cd6aa574d457374825c7d61f2038">DOCTEST_WARN_UNARY_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a004774d0eca7e70aee66a4a80b3aa1c8"/><section>
    <title>DOCTEST_FORBIT_EXPRESSION</title>
<indexterm><primary>DOCTEST_FORBIT_EXPRESSION</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_FORBIT_EXPRESSION</secondary></indexterm>
<para><computeroutput>#define DOCTEST_FORBIT_EXPRESSION( rt,  op)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;R&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;rt&amp;&#32;<emphasis role="keyword">operator</emphasis>&#32;op(<emphasis role="keyword">const</emphasis>&#32;R&amp;)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static_assert(deferred_false&lt;R&gt;::value,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Expression&#32;Too&#32;Complex&#32;Please&#32;Rewrite&#32;As&#32;Binary&#32;Comparison!&quot;</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;*<emphasis role="keyword">this</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_doctest_8h_1a219d4642ee4e9c1bfc047a3a785db450"/><section>
    <title>DOCTEST_GCC</title>
<indexterm><primary>DOCTEST_GCC</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_GCC</secondary></indexterm>
<para><computeroutput>#define DOCTEST_GCC   0</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a361747fc17fa1c6609c3cc939b4fc983"/><section>
    <title>DOCTEST_GCC_SUPPRESS_WARNING</title>
<indexterm><primary>DOCTEST_GCC_SUPPRESS_WARNING</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_GCC_SUPPRESS_WARNING</secondary></indexterm>
<para><computeroutput>#define DOCTEST_GCC_SUPPRESS_WARNING( w)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a656f7b58766e5e82f1799da962ebc17c"/><section>
    <title>DOCTEST_GCC_SUPPRESS_WARNING_POP</title>
<indexterm><primary>DOCTEST_GCC_SUPPRESS_WARNING_POP</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_GCC_SUPPRESS_WARNING_POP</secondary></indexterm>
<para><computeroutput>#define DOCTEST_GCC_SUPPRESS_WARNING_POP</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a8015d10af2883db80a955ce0d523886d"/><section>
    <title>DOCTEST_GCC_SUPPRESS_WARNING_PUSH</title>
<indexterm><primary>DOCTEST_GCC_SUPPRESS_WARNING_PUSH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_GCC_SUPPRESS_WARNING_PUSH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_GCC_SUPPRESS_WARNING_PUSH</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a93a351e10b8ce997502f34e89a755b6e"/><section>
    <title>DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH</title>
<indexterm><primary>DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH( w)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a391063a35ec9bea4c600c15b0a27cb54"/><section>
    <title>DOCTEST_GIVEN</title>
<indexterm><primary>DOCTEST_GIVEN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_GIVEN</secondary></indexterm>
<para><computeroutput>#define DOCTEST_GIVEN( name)   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(&quot;   Given: &quot; name)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abd2d1219232b25808d0210ba7aedd9dc"/><section>
    <title>DOCTEST_GLOBAL_NO_WARNINGS</title>
<indexterm><primary>DOCTEST_GLOBAL_NO_WARNINGS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_GLOBAL_NO_WARNINGS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_GLOBAL_NO_WARNINGS( var)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1aeffeb8afb2053d165c856f4ee520b62b">DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH</link>(<emphasis role="stringliteral">&quot;-Wglobal-constructors&quot;</emphasis>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_CLANG_SUPPRESS_WARNING(<emphasis role="stringliteral">&quot;-Wunused-variable&quot;</emphasis>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">int</emphasis>&#32;var&#32;<link linkend="_doctest_8h_1a478c7f3eb127a7edbcc8577154deebba">DOCTEST_UNUSED</link>
</programlisting></section>
<anchor xml:id="_doctest_8h_1a0f4c6a7a429f8b6cc27f96939dd76fca"/><section>
    <title>DOCTEST_GLOBAL_NO_WARNINGS_END</title>
<indexterm><primary>DOCTEST_GLOBAL_NO_WARNINGS_END</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_GLOBAL_NO_WARNINGS_END</secondary></indexterm>
<para><computeroutput>#define DOCTEST_GLOBAL_NO_WARNINGS_END( )   <link linkend="_doctest_8h_1a569dfd3f8dfae352f35e8f62aadbdbc4">DOCTEST_CLANG_SUPPRESS_WARNING_POP</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa8af5c48ea69801e9405f3c126535ced"/><section>
    <title>DOCTEST_IMPLEMENT_FIXTURE</title>
<indexterm><primary>DOCTEST_IMPLEMENT_FIXTURE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_IMPLEMENT_FIXTURE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_IMPLEMENT_FIXTURE( der,  base,  func,  decorators)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;struct&#32;der&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;base&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;void&#32;f();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">void</emphasis>&#32;func()&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;der&#32;v;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v.f();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_REGISTER_FUNCTION(<link linkend="_doctest_8h_1ab46a6d1a6d00f0bda5fcf8b93966a20a">DOCTEST_EMPTY</link>,&#32;func,&#32;decorators)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;inline&#32;<link linkend="_doctest_8h_1a47e9d3609dfcc90b9a630ff33b9524d6">DOCTEST_NOINLINE</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;der::f()
</programlisting></section>
<anchor xml:id="_doctest_8h_1ad832d703b848c2af8010492db391b5c0"/><section>
    <title>DOCTEST_INFO</title>
<indexterm><primary>DOCTEST_INFO</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_INFO</secondary></indexterm>
<para><computeroutput>#define DOCTEST_INFO( expression)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1ad9dcba31d109a3c817589232f3fc32de">DOCTEST_INFO_IMPL</link>(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_CAPTURE_),&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_CAPTURE_),&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_CAPTURE_),&#32;expression)
</programlisting></section>
<anchor xml:id="_doctest_8h_1ad9dcba31d109a3c817589232f3fc32de"/><section>
    <title>DOCTEST_INFO_IMPL</title>
<indexterm><primary>DOCTEST_INFO_IMPL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_INFO_IMPL</secondary></indexterm>
<para><computeroutput>#define DOCTEST_INFO_IMPL( lambda_name,  mb_name,  s_name,  expression)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1a2199aafb8016ab6daca23c2cc6170428">DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH</link>(4626)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;auto&#32;lambda_name&#32;=&#32;[&amp;](<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link>*&#32;s_name)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doctest::detail::MessageBuilder&#32;mb_name(__FILE__,&#32;__LINE__,&#32;<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3a2dd798b430ccf956bc48c3b48bb4e570">doctest::assertType::is_warn</link>);&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mb_name.m_stream&#32;=&#32;s_name;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mb_name&#32;&lt;&lt;&#32;expression;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;};&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING_POP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;auto&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_CAPTURE_)&#32;=&#32;<link linkend="_namespacedoctest_1_1detail_1af15c2ff0484248d0966fc38a4b0d3a66">doctest::detail::MakeContextScope</link>(lambda_name)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5"/><section>
    <title>DOCTEST_INTERFACE</title>
<indexterm><primary>DOCTEST_INTERFACE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_INTERFACE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_INTERFACE</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad3e5c37dc8bd7b0f9346c99c6aab2d1d"/><section>
    <title>DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN</title>
<indexterm><primary>DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN</secondary></indexterm>
<para><computeroutput>#define DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1ac5c55a5916aeff43fc7c2b61a41bcd88">DOCTEST_MSVC_SUPPRESS_WARNING_PUSH                                                             \</link>
<link linkend="_doctest_8h_1ac5c55a5916aeff43fc7c2b61a41bcd88">    DOCTEST_MSVC_SUPPRESS_WARNING</link>(4548)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(4265)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(4986)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(4350)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(4668)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(4365)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(4774)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(4820)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(4625)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(4626)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(5027)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(5026)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(4623)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(5039)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(5045)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING(5105)
</programlisting></section>
<anchor xml:id="_doctest_8h_1acca96650713994a51c3deb8e4bdec43d"/><section>
    <title>DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END</title>
<indexterm><primary>DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END</secondary></indexterm>
<para><computeroutput>#define DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END   <link linkend="_doctest_8h_1a540e6314c4b71317f3459f0117e14bc8">DOCTEST_MSVC_SUPPRESS_WARNING_POP</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac7197ddb13dc82354ff2b91cbb78ee81"/><section>
    <title>DOCTEST_MESSAGE</title>
<indexterm><primary>DOCTEST_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_MESSAGE( x)   <link linkend="_doctest_8h_1a367ca236dba71ee4c0889b6911f658b1">DOCTEST_ADD_MESSAGE_AT</link>(__FILE__, __LINE__, x)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac15060779a07a8f5ffc6af7543283a6a"/><section>
    <title>DOCTEST_MSVC</title>
<indexterm><primary>DOCTEST_MSVC</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_MSVC</secondary></indexterm>
<para><computeroutput>#define DOCTEST_MSVC   0</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac5c55a5916aeff43fc7c2b61a41bcd88"/><section>
    <title>DOCTEST_MSVC_SUPPRESS_WARNING</title>
<indexterm><primary>DOCTEST_MSVC_SUPPRESS_WARNING</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_MSVC_SUPPRESS_WARNING</secondary></indexterm>
<para><computeroutput>#define DOCTEST_MSVC_SUPPRESS_WARNING( w)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a540e6314c4b71317f3459f0117e14bc8"/><section>
    <title>DOCTEST_MSVC_SUPPRESS_WARNING_POP</title>
<indexterm><primary>DOCTEST_MSVC_SUPPRESS_WARNING_POP</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_MSVC_SUPPRESS_WARNING_POP</secondary></indexterm>
<para><computeroutput>#define DOCTEST_MSVC_SUPPRESS_WARNING_POP</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aec6d713a9dde361b8e68afe78c5bf3cf"/><section>
    <title>DOCTEST_MSVC_SUPPRESS_WARNING_PUSH</title>
<indexterm><primary>DOCTEST_MSVC_SUPPRESS_WARNING_PUSH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_MSVC_SUPPRESS_WARNING_PUSH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_MSVC_SUPPRESS_WARNING_PUSH</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2199aafb8016ab6daca23c2cc6170428"/><section>
    <title>DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH</title>
<indexterm><primary>DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH( w)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a0a3c492342c533baad7b21af7903e6b4"/><section>
    <title>DOCTEST_NOEXCEPT</title>
<indexterm><primary>DOCTEST_NOEXCEPT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_NOEXCEPT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_NOEXCEPT   noexcept</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a47e9d3609dfcc90b9a630ff33b9524d6"/><section>
    <title>DOCTEST_NOINLINE</title>
<indexterm><primary>DOCTEST_NOINLINE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_NOINLINE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_NOINLINE   __attribute__((noinline))</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4ef00bd4c0653f31a2e60e5e5f2fcf10"/><section>
    <title>DOCTEST_NORETURN</title>
<indexterm><primary>DOCTEST_NORETURN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_NORETURN</secondary></indexterm>
<para><computeroutput>#define DOCTEST_NORETURN   [[noreturn]]</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab406f77503c1d83ed403a310ccc1cd15"/><section>
    <title>DOCTEST_PLATFORM_LINUX</title>
<indexterm><primary>DOCTEST_PLATFORM_LINUX</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_PLATFORM_LINUX</secondary></indexterm>
<para><computeroutput>#define DOCTEST_PLATFORM_LINUX</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb"/><section>
    <title>DOCTEST_REF_WRAP</title>
<indexterm><primary>DOCTEST_REF_WRAP</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REF_WRAP</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REF_WRAP( x)   x&amp;</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac61710def0b8698d89bce297532d0017"/><section>
    <title>DOCTEST_REGISTER_EXCEPTION_TRANSLATOR</title>
<indexterm><primary>DOCTEST_REGISTER_EXCEPTION_TRANSLATOR</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REGISTER_EXCEPTION_TRANSLATOR</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REGISTER_EXCEPTION_TRANSLATOR( signature)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1a1462272403885d4f5749449535a7897e">DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL</link>(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_TRANSLATOR_),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signature)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a1462272403885d4f5749449535a7897e"/><section>
    <title>DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL</title>
<indexterm><primary>DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL( translatorName,  signature)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_classdoctest_1_1_string">doctest::String</link>&#32;translatorName(signature);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_GLOBAL_NO_WARNINGS(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_TRANSLATOR_))&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedoctest_1a8e23e6bb4c6982688652060dbe41385d">\</link>
<link linkend="_namespacedoctest_1a8e23e6bb4c6982688652060dbe41385d">            doctest::registerExceptionTranslator</link>(translatorName);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_GLOBAL_NO_WARNINGS_END()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;doctest::String&#32;translatorName(signature)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a4013e1a0072df7e0451eea33cabd543b"/><section>
    <title>DOCTEST_REGISTER_FUNCTION</title>
<indexterm><primary>DOCTEST_REGISTER_FUNCTION</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REGISTER_FUNCTION</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REGISTER_FUNCTION( global_prefix,  f,  decorators)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;global_prefix&#32;<link linkend="_doctest_8h_1abd2d1219232b25808d0210ba7aedd9dc">DOCTEST_GLOBAL_NO_WARNINGS</link>(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_VAR_))&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedoctest_1_1detail_1a00f99edefb8490a8e2602d58c96431f4">\</link>
<link linkend="_namespacedoctest_1_1detail_1a00f99edefb8490a8e2602d58c96431f4">            doctest::detail::regTest</link>(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structdoctest_1_1detail_1_1_test_case">doctest::detail::TestCase</link>(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f,&#32;__FILE__,&#32;__LINE__,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedoctest__detail__test__suite__ns_1a63d04c2e0ba35dff1e33cf0a24ec66c8">doctest_detail_test_suite_ns::getCurrentTestSuite</link>())&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;decorators);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_GLOBAL_NO_WARNINGS_END()
</programlisting></section>
<anchor xml:id="_doctest_8h_1a03161a703cc44e07384c4a0981a13c86"/><section>
    <title>DOCTEST_REGISTER_LISTENER</title>
<indexterm><primary>DOCTEST_REGISTER_LISTENER</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REGISTER_LISTENER</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REGISTER_LISTENER( name,  priority,  reporter)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1abd2d1219232b25808d0210ba7aedd9dc">DOCTEST_GLOBAL_NO_WARNINGS</link>(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_REPORTER_))&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doctest::registerReporter&lt;reporter&gt;(name,&#32;priority,&#32;<emphasis role="keyword">false</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_GLOBAL_NO_WARNINGS_END()&#32;typedef&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_FOR_SEMICOLON_)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a97757bf089f108cf8842727213bf3299"/><section>
    <title>DOCTEST_REGISTER_REPORTER</title>
<indexterm><primary>DOCTEST_REGISTER_REPORTER</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REGISTER_REPORTER</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REGISTER_REPORTER( name,  priority,  reporter)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1abd2d1219232b25808d0210ba7aedd9dc">DOCTEST_GLOBAL_NO_WARNINGS</link>(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_REPORTER_))&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doctest::registerReporter&lt;reporter&gt;(name,&#32;priority,&#32;<emphasis role="keyword">true</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_GLOBAL_NO_WARNINGS_END()&#32;typedef&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_FOR_SEMICOLON_)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a2fb9073f4525cca30d5a8bb5d32f62c4"/><section>
    <title>DOCTEST_RELATIONAL_OP</title>
<indexterm><primary>DOCTEST_RELATIONAL_OP</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_RELATIONAL_OP</secondary></indexterm>
<para><computeroutput>#define DOCTEST_RELATIONAL_OP( name,  op)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;R&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_COMPARISON_RETURN_TYPE&#32;name(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(L)&#32;lhs,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(R)&#32;rhs)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;lhs&#32;op&#32;rhs;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_doctest_8h_1a35b7bf4bf062cc1359ab36c4119d680a"/><section>
    <title>DOCTEST_REQUIRE</title>
<indexterm><primary>DOCTEST_REQUIRE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE( ...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_REQUIRE, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a8820dcb94345362c2fd94aea26a3eabc"/><section>
    <title>DOCTEST_REQUIRE_EQ</title>
<indexterm><primary>DOCTEST_REQUIRE_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_EQ</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_EQ( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_EQ, eq, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a0567e21b7ebdae9dbe84e4e46b230e12"/><section>
    <title>DOCTEST_REQUIRE_FALSE</title>
<indexterm><primary>DOCTEST_REQUIRE_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_FALSE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_FALSE( ...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_REQUIRE_FALSE, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a21c6e12786b4645ebf4ec15d62c058b2"/><section>
    <title>DOCTEST_REQUIRE_FALSE_MESSAGE</title>
<indexterm><primary>DOCTEST_REQUIRE_FALSE_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_FALSE_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_FALSE_MESSAGE( cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_REQUIRE_FALSE, cond); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad75b722f83eb3f81662af7fccae74732"/><section>
    <title>DOCTEST_REQUIRE_GE</title>
<indexterm><primary>DOCTEST_REQUIRE_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_GE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_GE( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_GE, ge, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a87d30bb902d1bfca7427a9eb51d130eb"/><section>
    <title>DOCTEST_REQUIRE_GT</title>
<indexterm><primary>DOCTEST_REQUIRE_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_GT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_GT( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_GT, gt, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a9101f25bfe135de1e306e3ed342e248a"/><section>
    <title>DOCTEST_REQUIRE_LE</title>
<indexterm><primary>DOCTEST_REQUIRE_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_LE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_LE( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_LE, le, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab88925759665843f59b14f097213351c"/><section>
    <title>DOCTEST_REQUIRE_LT</title>
<indexterm><primary>DOCTEST_REQUIRE_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_LT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_LT( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_LT, lt, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aeb1148cd18899a07cf48073bd93ee178"/><section>
    <title>DOCTEST_REQUIRE_MESSAGE</title>
<indexterm><primary>DOCTEST_REQUIRE_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_MESSAGE( cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_REQUIRE, cond); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa34e39b7d59335760ffa1b9fce45cc4b"/><section>
    <title>DOCTEST_REQUIRE_NE</title>
<indexterm><primary>DOCTEST_REQUIRE_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_NE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_NE( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_REQUIRE_NE, ne, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1af736ab1a8a0779fa8df23e8177a52abb"/><section>
    <title>DOCTEST_REQUIRE_NOTHROW</title>
<indexterm><primary>DOCTEST_REQUIRE_NOTHROW</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_NOTHROW</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_NOTHROW( ...)   <link linkend="_doctest_8h_1af4883c6ce28524bfc7510a1e84c537bc">DOCTEST_ASSERT_NOTHROW</link>(DT_REQUIRE_NOTHROW, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abb059c9cbdf8d90ee2ac00e01c14d067"/><section>
    <title>DOCTEST_REQUIRE_NOTHROW_MESSAGE</title>
<indexterm><primary>DOCTEST_REQUIRE_NOTHROW_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_NOTHROW_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_NOTHROW_MESSAGE( expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1af736ab1a8a0779fa8df23e8177a52abb">DOCTEST_REQUIRE_NOTHROW</link>(expr); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a00ac74412c24337acdb25b2f0587f6a5"/><section>
    <title>DOCTEST_REQUIRE_THROWS</title>
<indexterm><primary>DOCTEST_REQUIRE_THROWS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_THROWS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_THROWS( ...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>((__VA_ARGS__), #__VA_ARGS__, DT_REQUIRE_THROWS, &quot;&quot;)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a0a5e62cddee11560955d5213caac78a4"/><section>
    <title>DOCTEST_REQUIRE_THROWS_AS</title>
<indexterm><primary>DOCTEST_REQUIRE_THROWS_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_THROWS_AS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_THROWS_AS( expr,  ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_REQUIRE_THROWS_AS, &quot;&quot;, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2721243401e6e1ffdef02c34e6f654ed"/><section>
    <title>DOCTEST_REQUIRE_THROWS_AS_MESSAGE</title>
<indexterm><primary>DOCTEST_REQUIRE_THROWS_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_THROWS_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_THROWS_AS_MESSAGE( expr,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a0a5e62cddee11560955d5213caac78a4">DOCTEST_REQUIRE_THROWS_AS</link>(expr, ex); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a0b639518dd8b20bd0a73d8cd45223503"/><section>
    <title>DOCTEST_REQUIRE_THROWS_MESSAGE</title>
<indexterm><primary>DOCTEST_REQUIRE_THROWS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_THROWS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_THROWS_MESSAGE( expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a00ac74412c24337acdb25b2f0587f6a5">DOCTEST_REQUIRE_THROWS</link>(expr); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a50f4ffd81384eda6103b9aba1e4fca60"/><section>
    <title>DOCTEST_REQUIRE_THROWS_WITH</title>
<indexterm><primary>DOCTEST_REQUIRE_THROWS_WITH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_THROWS_WITH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_THROWS_WITH( expr,  ...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>(expr, #expr, DT_REQUIRE_THROWS_WITH, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a9deaef85b8ec7fa5a63ad99a9eb5b469"/><section>
    <title>DOCTEST_REQUIRE_THROWS_WITH_AS</title>
<indexterm><primary>DOCTEST_REQUIRE_THROWS_WITH_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_THROWS_WITH_AS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_THROWS_WITH_AS( expr,  message,  ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_REQUIRE_THROWS_WITH_AS, message, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa65b31390b95de60f879f80389b7c032"/><section>
    <title>DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE</title>
<indexterm><primary>DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE( expr,  with,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a9deaef85b8ec7fa5a63ad99a9eb5b469">DOCTEST_REQUIRE_THROWS_WITH_AS</link>(expr, with, ex); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a0cb80917b31e413a75580399648ed0e9"/><section>
    <title>DOCTEST_REQUIRE_THROWS_WITH_MESSAGE</title>
<indexterm><primary>DOCTEST_REQUIRE_THROWS_WITH_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_THROWS_WITH_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_THROWS_WITH_MESSAGE( expr,  with,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a50f4ffd81384eda6103b9aba1e4fca60">DOCTEST_REQUIRE_THROWS_WITH</link>(expr, with); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a77558db4dc0f1758c756da740b64413a"/><section>
    <title>DOCTEST_REQUIRE_UNARY</title>
<indexterm><primary>DOCTEST_REQUIRE_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_UNARY</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_UNARY( ...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_REQUIRE_UNARY, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a37703a3eac1f8332d970808340abf56e"/><section>
    <title>DOCTEST_REQUIRE_UNARY_FALSE</title>
<indexterm><primary>DOCTEST_REQUIRE_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_REQUIRE_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_REQUIRE_UNARY_FALSE( ...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_REQUIRE_UNARY_FALSE, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab990e5952d346329356aeb62a261386a"/><section>
    <title>DOCTEST_SCENARIO</title>
<indexterm><primary>DOCTEST_SCENARIO</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_SCENARIO</secondary></indexterm>
<para><computeroutput>#define DOCTEST_SCENARIO( name)   <link linkend="_doctest_8h_1ac1216c5a9ba44f5af8b7115a3badaae2">DOCTEST_TEST_CASE</link>(&quot;  Scenario: &quot; name)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a397e2591ec795895eb61e15309fa0634"/><section>
    <title>DOCTEST_SCENARIO_CLASS</title>
<indexterm><primary>DOCTEST_SCENARIO_CLASS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_SCENARIO_CLASS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_SCENARIO_CLASS( name)   <link linkend="_doctest_8h_1a41431265482f363020f93a13e4af4c6a">DOCTEST_TEST_CASE_CLASS</link>(&quot;  Scenario: &quot; name)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abbf51631942e053be12a31bf2299fe28"/><section>
    <title>DOCTEST_SCENARIO_TEMPLATE</title>
<indexterm><primary>DOCTEST_SCENARIO_TEMPLATE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_SCENARIO_TEMPLATE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_SCENARIO_TEMPLATE( name,  T,  ...)   <link linkend="_doctest_8h_1ab84667702ff8411d0444261796972374">DOCTEST_TEST_CASE_TEMPLATE</link>(&quot;  Scenario: &quot; name, T, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aadcf3b288d0506988896ff62d6b5ec5a"/><section>
    <title>DOCTEST_SCENARIO_TEMPLATE_DEFINE</title>
<indexterm><primary>DOCTEST_SCENARIO_TEMPLATE_DEFINE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_SCENARIO_TEMPLATE_DEFINE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_SCENARIO_TEMPLATE_DEFINE( name,  T,  id)   <link linkend="_doctest_8h_1a7c264a83f95bfae9a0e5d86c9d4c8fe3">DOCTEST_TEST_CASE_TEMPLATE_DEFINE</link>(&quot;  Scenario: &quot; name, T, id)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a3a7ef56c20fd24da92633816765eae59"/><section>
    <title>DOCTEST_SINGLE_HEADER</title>
<indexterm><primary>DOCTEST_SINGLE_HEADER</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_SINGLE_HEADER</secondary></indexterm>
<para><computeroutput>#define DOCTEST_SINGLE_HEADER</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a758d9627ba7331f195ffbba94e5931a1"/><section>
    <title>DOCTEST_STD_NAMESPACE_BEGIN</title>
<indexterm><primary>DOCTEST_STD_NAMESPACE_BEGIN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_STD_NAMESPACE_BEGIN</secondary></indexterm>
<para><computeroutput>#define DOCTEST_STD_NAMESPACE_BEGIN   namespace std {</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac0ed37fb9c99f6ea1ce9c3e1b73e3dec"/><section>
    <title>DOCTEST_STD_NAMESPACE_END</title>
<indexterm><primary>DOCTEST_STD_NAMESPACE_END</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_STD_NAMESPACE_END</secondary></indexterm>
<para><computeroutput>#define DOCTEST_STD_NAMESPACE_END   }</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6"/><section>
    <title>DOCTEST_SUBCASE</title>
<indexterm><primary>DOCTEST_SUBCASE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_SUBCASE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_SUBCASE( name)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdoctest_1_1detail_1_1_subcase">doctest::detail::Subcase</link>&#32;&amp;&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_SUBCASE_)&#32;<link linkend="_doctest_8h_1a478c7f3eb127a7edbcc8577154deebba">DOCTEST_UNUSED</link>&#32;=&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structdoctest_1_1detail_1_1_subcase">doctest::detail::Subcase</link>(name,&#32;__FILE__,&#32;__LINE__))
</programlisting></section>
<anchor xml:id="_doctest_8h_1a73d94c36ae63bc0a9e3ec982e38fd7b7"/><section>
    <title>DOCTEST_SYMBOL_EXPORT</title>
<indexterm><primary>DOCTEST_SYMBOL_EXPORT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_SYMBOL_EXPORT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_SYMBOL_EXPORT   __attribute__((visibility(&quot;default&quot;)))</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4fd9f1ce2de2fad78a45972c2ee216d4"/><section>
    <title>DOCTEST_SYMBOL_IMPORT</title>
<indexterm><primary>DOCTEST_SYMBOL_IMPORT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_SYMBOL_IMPORT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_SYMBOL_IMPORT</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac1216c5a9ba44f5af8b7115a3badaae2"/><section>
    <title>DOCTEST_TEST_CASE</title>
<indexterm><primary>DOCTEST_TEST_CASE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE( decorators)       <link linkend="_doctest_8h_1acc08da2add47137024ca50062129be4b">DOCTEST_CREATE_AND_REGISTER_FUNCTION</link>(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_FUNC_), decorators)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a41431265482f363020f93a13e4af4c6a"/><section>
    <title>DOCTEST_TEST_CASE_CLASS</title>
<indexterm><primary>DOCTEST_TEST_CASE_CLASS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE_CLASS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE_CLASS( ...)       TEST_CASES_CAN_BE_REGISTERED_IN_CLASSES_ONLY_IN_CPP17_MODE_OR_WITH_VS_2017_OR_NEWER</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a22130c0eff96eac3ed682b7d8854e0f6"/><section>
    <title>DOCTEST_TEST_CASE_FIXTURE</title>
<indexterm><primary>DOCTEST_TEST_CASE_FIXTURE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE_FIXTURE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE_FIXTURE( c,  decorators)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1aa8af5c48ea69801e9405f3c126535ced">DOCTEST_IMPLEMENT_FIXTURE</link>(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_CLASS_),&#32;c,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_FUNC_),&#32;decorators)
</programlisting></section>
<anchor xml:id="_doctest_8h_1ab84667702ff8411d0444261796972374"/><section>
    <title>DOCTEST_TEST_CASE_TEMPLATE</title>
<indexterm><primary>DOCTEST_TEST_CASE_TEMPLATE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE_TEMPLATE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE_TEMPLATE( dec,  T,  ...)       <link linkend="_doctest_8h_1a8c38d979f3976eef812acf150d1d13bd">DOCTEST_TEST_CASE_TEMPLATE_IMPL</link>(dec, T, <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_TMP_), __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a8722d97b6087d098bbd796801a347767"/><section>
    <title>DOCTEST_TEST_CASE_TEMPLATE_APPLY</title>
<indexterm><primary>DOCTEST_TEST_CASE_TEMPLATE_APPLY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE_TEMPLATE_APPLY</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE_TEMPLATE_APPLY( id,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1adbeb741905468853f543135077e78a91">DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL</link>(<emphasis role="keywordtype">id</emphasis>,&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_TMP_),&#32;__VA_ARGS__)&#32;\
&#32;&#32;&#32;&#32;typedef&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_FOR_SEMICOLON_)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a7c264a83f95bfae9a0e5d86c9d4c8fe3"/><section>
    <title>DOCTEST_TEST_CASE_TEMPLATE_DEFINE</title>
<indexterm><primary>DOCTEST_TEST_CASE_TEMPLATE_DEFINE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE_TEMPLATE_DEFINE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE_TEMPLATE_DEFINE( dec,  T,  id)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1a1e7dceba02e92851f643bb02f1d11323">DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL</link>(dec,&#32;T,&#32;<link linkend="_doctest_8h_1aa13d3659f8aef0e4de7eab8eb5a70888">DOCTEST_CAT</link>(<emphasis role="keywordtype">id</emphasis>,&#32;ITERATOR),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_TMP_))
</programlisting></section>
<anchor xml:id="_doctest_8h_1a1e7dceba02e92851f643bb02f1d11323"/><section>
    <title>DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL</title>
<indexterm><primary>DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL( dec,  T,  iter,  func)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">void</emphasis>&#32;func();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;namespace&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;template&#32;&lt;typename&#32;Tuple&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;struct&#32;iter;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;template&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Type,&#32;<emphasis role="keyword">typename</emphasis>...&#32;Rest&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;struct&#32;iter&lt;std::tuple&lt;Type,&#32;Rest...&gt;&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iter(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;file,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;line,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedoctest_1_1detail_1a00f99edefb8490a8e2602d58c96431f4">\</link>
<link linkend="_namespacedoctest_1_1detail_1a00f99edefb8490a8e2602d58c96431f4">                doctest::detail::regTest</link>(<link linkend="_structdoctest_1_1detail_1_1_test_case">doctest::detail::TestCase</link>(func&lt;Type&gt;,&#32;file,&#32;line,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedoctest__detail__test__suite__ns_1a63d04c2e0ba35dff1e33cf0a24ec66c8">doctest_detail_test_suite_ns::getCurrentTestSuite</link>(),&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doctest::detail::type_to_string&lt;Type&gt;(),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>(line)&#32;*&#32;1000&#32;+&#32;index)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;dec);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iter&lt;std::tuple&lt;Rest...&gt;&gt;(file,&#32;line,&#32;index&#32;+&#32;1);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;template&#32;&lt;&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;struct&#32;iter&lt;std::tuple&lt;&gt;&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iter(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">unsigned</emphasis>,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;{}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;template&#32;&lt;typename&#32;T&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">void</emphasis>&#32;func()
</programlisting></section>
<anchor xml:id="_doctest_8h_1a8c38d979f3976eef812acf150d1d13bd"/><section>
    <title>DOCTEST_TEST_CASE_TEMPLATE_IMPL</title>
<indexterm><primary>DOCTEST_TEST_CASE_TEMPLATE_IMPL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE_TEMPLATE_IMPL</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE_TEMPLATE_IMPL( dec,  T,  anon,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1a1e7dceba02e92851f643bb02f1d11323">DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL</link>(dec,&#32;T,&#32;<link linkend="_doctest_8h_1aa13d3659f8aef0e4de7eab8eb5a70888">DOCTEST_CAT</link>(anon,&#32;ITERATOR),&#32;anon);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL(anon,&#32;anon,&#32;std::tuple&lt;__VA_ARGS__&gt;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;template&#32;&lt;typename&#32;T&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">void</emphasis>&#32;anon()
</programlisting></section>
<anchor xml:id="_doctest_8h_1a5a2dcfd67d0f0aa96600b46678135514"/><section>
    <title>DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE</title>
<indexterm><primary>DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE   <link linkend="_doctest_8h_1ac36f9261802a5321792358196104f4e6">DOCTEST_TEST_CASE_TEMPLATE_INVOKE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1adbeb741905468853f543135077e78a91"/><section>
    <title>DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL</title>
<indexterm><primary>DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL( id,  anon,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1abd2d1219232b25808d0210ba7aedd9dc">DOCTEST_GLOBAL_NO_WARNINGS</link>(<link linkend="_doctest_8h_1aa13d3659f8aef0e4de7eab8eb5a70888">DOCTEST_CAT</link>(anon,&#32;DUMMY))&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedoctest_1_1detail_1aad401b097a9af4df1d4a9d0911957c0f">\</link>
<link linkend="_namespacedoctest_1_1detail_1aad401b097a9af4df1d4a9d0911957c0f">        doctest::detail::instantiationHelper</link>(<link linkend="_doctest_8h_1aa13d3659f8aef0e4de7eab8eb5a70888">DOCTEST_CAT</link>(<emphasis role="keywordtype">id</emphasis>,&#32;ITERATOR)&lt;__VA_ARGS__&gt;(__FILE__,&#32;__LINE__,&#32;0));\
&#32;&#32;&#32;&#32;DOCTEST_GLOBAL_NO_WARNINGS_END()
</programlisting></section>
<anchor xml:id="_doctest_8h_1ac36f9261802a5321792358196104f4e6"/><section>
    <title>DOCTEST_TEST_CASE_TEMPLATE_INVOKE</title>
<indexterm><primary>DOCTEST_TEST_CASE_TEMPLATE_INVOKE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_CASE_TEMPLATE_INVOKE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_CASE_TEMPLATE_INVOKE( id,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1adbeb741905468853f543135077e78a91">DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL</link>(<emphasis role="keywordtype">id</emphasis>,&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_TMP_),&#32;std::tuple&lt;__VA_ARGS__&gt;)&#32;\
&#32;&#32;&#32;&#32;typedef&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_FOR_SEMICOLON_)
</programlisting></section>
<anchor xml:id="_doctest_8h_1aa64ce392f41c8ba1d22cfb5b83847f55"/><section>
    <title>DOCTEST_TEST_SUITE</title>
<indexterm><primary>DOCTEST_TEST_SUITE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_SUITE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_SUITE( decorators)       <link linkend="_doctest_8h_1a5440333d43133ec8d0206bfcfbbe84ca">DOCTEST_TEST_SUITE_IMPL</link>(decorators, <link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_SUITE_))</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a64f9649162581c1c24a78e65cf01492f"/><section>
    <title>DOCTEST_TEST_SUITE_BEGIN</title>
<indexterm><primary>DOCTEST_TEST_SUITE_BEGIN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_SUITE_BEGIN</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_SUITE_BEGIN( decorators)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1abd2d1219232b25808d0210ba7aedd9dc">DOCTEST_GLOBAL_NO_WARNINGS</link>(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_VAR_))&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedoctest_1_1detail_1ae79cb8df06d35468dd0ba9f04c85802c">\</link>
<link linkend="_namespacedoctest_1_1detail_1ae79cb8df06d35468dd0ba9f04c85802c">            doctest::detail::setTestSuite</link>(<link linkend="_structdoctest_1_1detail_1_1_test_suite">doctest::detail::TestSuite</link>()&#32;*&#32;decorators);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_GLOBAL_NO_WARNINGS_END()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;typedef&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_FOR_SEMICOLON_)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a3ca1fc8ae12659768e3226db19a2c7ee"/><section>
    <title>DOCTEST_TEST_SUITE_END</title>
<indexterm><primary>DOCTEST_TEST_SUITE_END</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_SUITE_END</secondary></indexterm>
<para><computeroutput>DOCTEST_TEST_SUITE_END</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_doctest_8h_1abd2d1219232b25808d0210ba7aedd9dc">DOCTEST_GLOBAL_NO_WARNINGS</link>(<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_VAR_))&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedoctest_1_1detail_1ae79cb8df06d35468dd0ba9f04c85802c">\</link>
<link linkend="_namespacedoctest_1_1detail_1ae79cb8df06d35468dd0ba9f04c85802c">            doctest::detail::setTestSuite</link>(<link linkend="_structdoctest_1_1detail_1_1_test_suite">doctest::detail::TestSuite</link>()&#32;*&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;DOCTEST_GLOBAL_NO_WARNINGS_END()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;typedef&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_FOR_SEMICOLON_)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a5440333d43133ec8d0206bfcfbbe84ca"/><section>
    <title>DOCTEST_TEST_SUITE_IMPL</title>
<indexterm><primary>DOCTEST_TEST_SUITE_IMPL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TEST_SUITE_IMPL</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TEST_SUITE_IMPL( decorators,  ns_name)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>ns_name&#32;{&#32;<emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacedoctest__detail__test__suite__ns">doctest_detail_test_suite_ns</link>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<link linkend="_doctest_8h_1a47e9d3609dfcc90b9a630ff33b9524d6">DOCTEST_NOINLINE</link>&#32;<link linkend="_structdoctest_1_1detail_1_1_test_suite">doctest::detail::TestSuite</link>&amp;&#32;<link linkend="_namespacedoctest__detail__test__suite__ns_1a63d04c2e0ba35dff1e33cf0a24ec66c8">getCurrentTestSuite</link>()&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4640)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH(<emphasis role="stringliteral">&quot;-Wexit-time-destructors&quot;</emphasis>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<link linkend="_structdoctest_1_1detail_1_1_test_suite">doctest::detail::TestSuite</link>&#32;data;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inited&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_MSVC_SUPPRESS_WARNING_POP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_CLANG_SUPPRESS_WARNING_POP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(!inited)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data*&#32;decorators;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inited&#32;=&#32;<emphasis role="keyword">true</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;data;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;namespace&#32;ns_name
</programlisting></section>
<anchor xml:id="_doctest_8h_1aab2f195b2c866cd010123c1d5b70217f"/><section>
    <title>DOCTEST_THEN</title>
<indexterm><primary>DOCTEST_THEN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_THEN</secondary></indexterm>
<para><computeroutput>#define DOCTEST_THEN( name)   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(&quot;    Then: &quot; name)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a474989d096480fd5c52ca9f346cdd23c"/><section>
    <title>DOCTEST_TO_LVALUE</title>
<indexterm><primary>DOCTEST_TO_LVALUE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TO_LVALUE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TO_LVALUE( ...)   __VA_ARGS__</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa928e63972e4bc49fcf27641202f2f38"/><section>
    <title>DOCTEST_TOSTR</title>
<indexterm><primary>DOCTEST_TOSTR</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TOSTR</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TOSTR( x)   #x</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a568e1d22f39724c8d3eb8addf4bf8e72"/><section>
    <title>DOCTEST_TYPE_TO_STRING</title>
<indexterm><primary>DOCTEST_TYPE_TO_STRING</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TYPE_TO_STRING</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TYPE_TO_STRING( ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacedoctest">doctest</link>&#32;{&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_TYPE_TO_STRING_IMPL(__VA_ARGS__)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;typedef&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_doctest_8h_1ac2799231daab4b10ca221f997ef94981">DOCTEST_ANONYMOUS</link>(_DOCTEST_ANON_FOR_SEMICOLON_)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a46b09edcbd9aa9ddb23c5ca122d89e7b"/><section>
    <title>DOCTEST_TYPE_TO_STRING_IMPL</title>
<indexterm><primary>DOCTEST_TYPE_TO_STRING_IMPL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_TYPE_TO_STRING_IMPL</secondary></indexterm>
<para><computeroutput>#define DOCTEST_TYPE_TO_STRING_IMPL( ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;inline&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;type_to_string&lt;__VA_ARGS__&gt;()&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;<emphasis role="stringliteral">&quot;&lt;&quot;</emphasis>&#32;#__VA_ARGS__&#32;<emphasis role="stringliteral">&quot;&gt;&quot;</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_doctest_8h_1ac80cb844919d4d049c456446354c1b58"/><section>
    <title>DOCTEST_UNARY_ASSERT</title>
<indexterm><primary>DOCTEST_UNARY_ASSERT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_UNARY_ASSERT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_UNARY_ASSERT( assert_type,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doctest::detail::ResultBuilder&#32;_DOCTEST_RB(doctest::assertType::assert_type,&#32;__FILE__,&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__LINE__,&#32;#__VA_ARGS__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_WRAP_IN_TRY(_DOCTEST_RB.unary_assert(__VA_ARGS__))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOCTEST_ASSERT_LOG_AND_REACT(_DOCTEST_RB);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_doctest_8h_1a478c7f3eb127a7edbcc8577154deebba"/><section>
    <title>DOCTEST_UNUSED</title>
<indexterm><primary>DOCTEST_UNUSED</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_UNUSED</secondary></indexterm>
<para><computeroutput>#define DOCTEST_UNUSED   __attribute__((unused))</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a6402112d77ca243a4052cac07a383d78"/><section>
    <title>DOCTEST_VERSION</title>
<indexterm><primary>DOCTEST_VERSION</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_VERSION</secondary></indexterm>
<para><computeroutput>#define DOCTEST_VERSION       (<link linkend="_doctest_8h_1abdf99655d65d9241c5d7c9f2d06e5e30">DOCTEST_VERSION_MAJOR</link> * 10000 + <link linkend="_doctest_8h_1a70d4541211eec8116bdedd0e210b1e14">DOCTEST_VERSION_MINOR</link> * 100 + <link linkend="_doctest_8h_1a38cca3b310e7460ee3da69d6a18989e9">DOCTEST_VERSION_PATCH</link>)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abdf99655d65d9241c5d7c9f2d06e5e30"/><section>
    <title>DOCTEST_VERSION_MAJOR</title>
<indexterm><primary>DOCTEST_VERSION_MAJOR</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_VERSION_MAJOR</secondary></indexterm>
<para><computeroutput>#define DOCTEST_VERSION_MAJOR   2</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a70d4541211eec8116bdedd0e210b1e14"/><section>
    <title>DOCTEST_VERSION_MINOR</title>
<indexterm><primary>DOCTEST_VERSION_MINOR</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_VERSION_MINOR</secondary></indexterm>
<para><computeroutput>#define DOCTEST_VERSION_MINOR   4</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a38cca3b310e7460ee3da69d6a18989e9"/><section>
    <title>DOCTEST_VERSION_PATCH</title>
<indexterm><primary>DOCTEST_VERSION_PATCH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_VERSION_PATCH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_VERSION_PATCH   0</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a253eba2b38340341a13e1111d66b2e83"/><section>
    <title>DOCTEST_VERSION_STR</title>
<indexterm><primary>DOCTEST_VERSION_STR</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_VERSION_STR</secondary></indexterm>
<para><computeroutput>#define DOCTEST_VERSION_STR   &quot;2.4.0&quot;</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a5543bf17193d5cf77558fabbd9cfb02f"/><section>
    <title>DOCTEST_WARN</title>
<indexterm><primary>DOCTEST_WARN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN( ...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_WARN, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a1db08e05a079662153c7702e10dcdbde"/><section>
    <title>DOCTEST_WARN_EQ</title>
<indexterm><primary>DOCTEST_WARN_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_EQ</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_EQ( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_EQ, eq, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a207c474577961221a4003351186b5378"/><section>
    <title>DOCTEST_WARN_FALSE</title>
<indexterm><primary>DOCTEST_WARN_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_FALSE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_FALSE( ...)   <link linkend="_doctest_8h_1a6f0e0a277346b049dd3812f801d0c9cc">DOCTEST_ASSERT_IMPLEMENT_1</link>(DT_WARN_FALSE, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a5fdcd4d41bfc530771f64dda474edf79"/><section>
    <title>DOCTEST_WARN_FALSE_MESSAGE</title>
<indexterm><primary>DOCTEST_WARN_FALSE_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_FALSE_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_FALSE_MESSAGE( cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_WARN_FALSE, cond); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aae5060834af3dd90c806b087368d010c"/><section>
    <title>DOCTEST_WARN_GE</title>
<indexterm><primary>DOCTEST_WARN_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_GE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_GE( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_GE, ge, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad814c5db21e9ac7eca4b3e87aec0ef3b"/><section>
    <title>DOCTEST_WARN_GT</title>
<indexterm><primary>DOCTEST_WARN_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_GT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_GT( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_GT, gt, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aaed576a70b191ac93a4a4e4052b31f4f"/><section>
    <title>DOCTEST_WARN_LE</title>
<indexterm><primary>DOCTEST_WARN_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_LE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_LE( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_LE, le, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aa0e1bebf090f015583da8decb0ee3e5c"/><section>
    <title>DOCTEST_WARN_LT</title>
<indexterm><primary>DOCTEST_WARN_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_LT</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_LT( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_LT, lt, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a8b25fbbb6ee92eaa18806a20af928c25"/><section>
    <title>DOCTEST_WARN_MESSAGE</title>
<indexterm><primary>DOCTEST_WARN_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_MESSAGE( cond,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ae0ef8a67578eac1dcda25d35d11df981">DOCTEST_ASSERT_IMPLEMENT_2</link>(DT_WARN, cond); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aaa8ef6ed223cba8e86d0bc0676aeb50e"/><section>
    <title>DOCTEST_WARN_NE</title>
<indexterm><primary>DOCTEST_WARN_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_NE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_NE( ...)   <link linkend="_doctest_8h_1a60862298c47edf3eaeb30b3cac4d62d8">DOCTEST_BINARY_ASSERT</link>(DT_WARN_NE, ne, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2de5ec015a9fbf92197a289b11db462c"/><section>
    <title>DOCTEST_WARN_NOTHROW</title>
<indexterm><primary>DOCTEST_WARN_NOTHROW</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_NOTHROW</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_NOTHROW( ...)   <link linkend="_doctest_8h_1af4883c6ce28524bfc7510a1e84c537bc">DOCTEST_ASSERT_NOTHROW</link>(DT_WARN_NOTHROW, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a03ee95587b199006f4d8e242af5d0bc1"/><section>
    <title>DOCTEST_WARN_NOTHROW_MESSAGE</title>
<indexterm><primary>DOCTEST_WARN_NOTHROW_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_NOTHROW_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_NOTHROW_MESSAGE( expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a2de5ec015a9fbf92197a289b11db462c">DOCTEST_WARN_NOTHROW</link>(expr); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad969cd19e5751fd38d2429ce8049065e"/><section>
    <title>DOCTEST_WARN_THROWS</title>
<indexterm><primary>DOCTEST_WARN_THROWS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_THROWS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_THROWS( ...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>((__VA_ARGS__), #__VA_ARGS__, DT_WARN_THROWS, &quot;&quot;)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a0c61debdc225c16793ce21792448bdd2"/><section>
    <title>DOCTEST_WARN_THROWS_AS</title>
<indexterm><primary>DOCTEST_WARN_THROWS_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_THROWS_AS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_THROWS_AS( expr,  ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_WARN_THROWS_AS, &quot;&quot;, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a50e74b4aac3d73d0bcec94e2901a267a"/><section>
    <title>DOCTEST_WARN_THROWS_AS_MESSAGE</title>
<indexterm><primary>DOCTEST_WARN_THROWS_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_THROWS_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_THROWS_AS_MESSAGE( expr,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a0c61debdc225c16793ce21792448bdd2">DOCTEST_WARN_THROWS_AS</link>(expr, ex); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a231ae5902ac77e9f0129bb6b82653095"/><section>
    <title>DOCTEST_WARN_THROWS_MESSAGE</title>
<indexterm><primary>DOCTEST_WARN_THROWS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_THROWS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_THROWS_MESSAGE( expr,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ad969cd19e5751fd38d2429ce8049065e">DOCTEST_WARN_THROWS</link>(expr); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a0d30b4e4f2a0e5b7e845efe285bf270f"/><section>
    <title>DOCTEST_WARN_THROWS_WITH</title>
<indexterm><primary>DOCTEST_WARN_THROWS_WITH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_THROWS_WITH</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_THROWS_WITH( expr,  ...)   <link linkend="_doctest_8h_1a833efe98e345c23d2c40d4d8f9ba9a61">DOCTEST_ASSERT_THROWS_WITH</link>(expr, #expr, DT_WARN_THROWS_WITH, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab808e9a932cbd988fc3790137ed365a9"/><section>
    <title>DOCTEST_WARN_THROWS_WITH_AS</title>
<indexterm><primary>DOCTEST_WARN_THROWS_WITH_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_THROWS_WITH_AS</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_THROWS_WITH_AS( expr,  message,  ...)   <link linkend="_doctest_8h_1a2e518f9a0e6ac2fafa273ea56f286887">DOCTEST_ASSERT_THROWS_AS</link>(expr, DT_WARN_THROWS_WITH_AS, message, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad97451b00451d54d2239da25aac4204a"/><section>
    <title>DOCTEST_WARN_THROWS_WITH_AS_MESSAGE</title>
<indexterm><primary>DOCTEST_WARN_THROWS_WITH_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_THROWS_WITH_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_THROWS_WITH_AS_MESSAGE( expr,  with,  ex,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1ab808e9a932cbd988fc3790137ed365a9">DOCTEST_WARN_THROWS_WITH_AS</link>(expr, with, ex); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad3928bf984886a53d79a67f746380222"/><section>
    <title>DOCTEST_WARN_THROWS_WITH_MESSAGE</title>
<indexterm><primary>DOCTEST_WARN_THROWS_WITH_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_THROWS_WITH_MESSAGE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_THROWS_WITH_MESSAGE( expr,  with,  msg)   do { <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link>(msg); <link linkend="_doctest_8h_1a0d30b4e4f2a0e5b7e845efe285bf270f">DOCTEST_WARN_THROWS_WITH</link>(expr, with); } while(false)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a41e14871f960ec76113197ad929d18c8"/><section>
    <title>DOCTEST_WARN_UNARY</title>
<indexterm><primary>DOCTEST_WARN_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_UNARY</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_UNARY( ...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_WARN_UNARY, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a24e0cd6aa574d457374825c7d61f2038"/><section>
    <title>DOCTEST_WARN_UNARY_FALSE</title>
<indexterm><primary>DOCTEST_WARN_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WARN_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WARN_UNARY_FALSE( ...)   <link linkend="_doctest_8h_1ac80cb844919d4d049c456446354c1b58">DOCTEST_UNARY_ASSERT</link>(DT_WARN_UNARY_FALSE, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a570ec2864c36b1b5c8ccfd94c6b8b629"/><section>
    <title>DOCTEST_WHEN</title>
<indexterm><primary>DOCTEST_WHEN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WHEN</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WHEN( name)   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link>(&quot;    When: &quot; name)</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a1a2d400bbc1f72aa743406f7cf3c82d2"/><section>
    <title>DOCTEST_WRAP_IN_TRY</title>
<indexterm><primary>DOCTEST_WRAP_IN_TRY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_WRAP_IN_TRY</secondary></indexterm>
<para><computeroutput>#define DOCTEST_WRAP_IN_TRY( x)   x;</computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abb508ea8227673f419e9fe3a86c30d8e"/><section>
    <title>FAIL</title>
<indexterm><primary>FAIL</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAIL</secondary></indexterm>
<para><computeroutput>#define FAIL   <link linkend="_doctest_8h_1a2af7c3f800a334028830a61d820484ea">DOCTEST_FAIL</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab7fcb424412c317c44e574005384c125"/><section>
    <title>FAIL_CHECK</title>
<indexterm><primary>FAIL_CHECK</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAIL_CHECK</secondary></indexterm>
<para><computeroutput>#define FAIL_CHECK   <link linkend="_doctest_8h_1a311ced33941337d35007ee11d86e6523">DOCTEST_FAIL_CHECK</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a09a3290305a70939ba8f6ea5bbda01cf"/><section>
    <title>FAST_CHECK_EQ</title>
<indexterm><primary>FAST_CHECK_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_CHECK_EQ</secondary></indexterm>
<para><computeroutput>#define FAST_CHECK_EQ   <link linkend="_doctest_8h_1ab4a30ae5781ec52a8651c7cb695fb266">DOCTEST_FAST_CHECK_EQ</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a99058d7a7ceacd364badd0298f7081ed"/><section>
    <title>FAST_CHECK_GE</title>
<indexterm><primary>FAST_CHECK_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_CHECK_GE</secondary></indexterm>
<para><computeroutput>#define FAST_CHECK_GE   <link linkend="_doctest_8h_1a1ae0024144fb0081522e3778e2f3fe77">DOCTEST_FAST_CHECK_GE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a35f390c6dab6f1e961a98d76e3b10629"/><section>
    <title>FAST_CHECK_GT</title>
<indexterm><primary>FAST_CHECK_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_CHECK_GT</secondary></indexterm>
<para><computeroutput>#define FAST_CHECK_GT   <link linkend="_doctest_8h_1aad48a1ad33a37268303363fe3285bb2c">DOCTEST_FAST_CHECK_GT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2b233dc32704dd5f7a1fcddec2852685"/><section>
    <title>FAST_CHECK_LE</title>
<indexterm><primary>FAST_CHECK_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_CHECK_LE</secondary></indexterm>
<para><computeroutput>#define FAST_CHECK_LE   <link linkend="_doctest_8h_1a4eaef3b35d06f2cd9a1b38ef4b8aa137">DOCTEST_FAST_CHECK_LE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a345f95a4866068f1b7675d1d792a73ec"/><section>
    <title>FAST_CHECK_LT</title>
<indexterm><primary>FAST_CHECK_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_CHECK_LT</secondary></indexterm>
<para><computeroutput>#define FAST_CHECK_LT   <link linkend="_doctest_8h_1a2b5cbb281f86f22f30ca08e453ecb7f3">DOCTEST_FAST_CHECK_LT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4a37ec67c14f39fee4b4d73b248c8bd0"/><section>
    <title>FAST_CHECK_NE</title>
<indexterm><primary>FAST_CHECK_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_CHECK_NE</secondary></indexterm>
<para><computeroutput>#define FAST_CHECK_NE   <link linkend="_doctest_8h_1aef35956b9f6316059552577b28b63b76">DOCTEST_FAST_CHECK_NE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a613ebc5447bd957f6dd843ef57c12aa0"/><section>
    <title>FAST_CHECK_UNARY</title>
<indexterm><primary>FAST_CHECK_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_CHECK_UNARY</secondary></indexterm>
<para><computeroutput>#define FAST_CHECK_UNARY   <link linkend="_doctest_8h_1aef39710e57f05a74423ef552b9756a29">DOCTEST_FAST_CHECK_UNARY</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4c9e0dd1a602a5afcca2437ec5a106e1"/><section>
    <title>FAST_CHECK_UNARY_FALSE</title>
<indexterm><primary>FAST_CHECK_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_CHECK_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define FAST_CHECK_UNARY_FALSE   <link linkend="_doctest_8h_1a4d91d1f535ad191f829bc3cf81b967eb">DOCTEST_FAST_CHECK_UNARY_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae9278be43244c903532a71cf6a5f8cb5"/><section>
    <title>FAST_REQUIRE_EQ</title>
<indexterm><primary>FAST_REQUIRE_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_REQUIRE_EQ</secondary></indexterm>
<para><computeroutput>#define FAST_REQUIRE_EQ   <link linkend="_doctest_8h_1aa25a354bc0f83e31ec1184eff29ec0d9">DOCTEST_FAST_REQUIRE_EQ</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1adc377b45d8e47d8eb3868b989a3b9b90"/><section>
    <title>FAST_REQUIRE_GE</title>
<indexterm><primary>FAST_REQUIRE_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_REQUIRE_GE</secondary></indexterm>
<para><computeroutput>#define FAST_REQUIRE_GE   <link linkend="_doctest_8h_1a2b6364c039a90a1b8519af193027c3a4">DOCTEST_FAST_REQUIRE_GE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a8856b1236ba78ba2fe9e11e315fe6268"/><section>
    <title>FAST_REQUIRE_GT</title>
<indexterm><primary>FAST_REQUIRE_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_REQUIRE_GT</secondary></indexterm>
<para><computeroutput>#define FAST_REQUIRE_GT   <link linkend="_doctest_8h_1a74a2b5ebb76b33c7124bf3d5bc200cc6">DOCTEST_FAST_REQUIRE_GT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a32a333f60363349c67869f6495a517b9"/><section>
    <title>FAST_REQUIRE_LE</title>
<indexterm><primary>FAST_REQUIRE_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_REQUIRE_LE</secondary></indexterm>
<para><computeroutput>#define FAST_REQUIRE_LE   <link linkend="_doctest_8h_1ab9fe58a6ab535c836df028567aa68693">DOCTEST_FAST_REQUIRE_LE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab61a38f120650101238c44bca959f367"/><section>
    <title>FAST_REQUIRE_LT</title>
<indexterm><primary>FAST_REQUIRE_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_REQUIRE_LT</secondary></indexterm>
<para><computeroutput>#define FAST_REQUIRE_LT   <link linkend="_doctest_8h_1a17c6c39d376b0b97b0d883e7ec3fa728">DOCTEST_FAST_REQUIRE_LT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a212e512331b6da86d30a9f1915df55a4"/><section>
    <title>FAST_REQUIRE_NE</title>
<indexterm><primary>FAST_REQUIRE_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_REQUIRE_NE</secondary></indexterm>
<para><computeroutput>#define FAST_REQUIRE_NE   <link linkend="_doctest_8h_1a181b3b01fecc87de85f3ce2647f05e9b">DOCTEST_FAST_REQUIRE_NE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a9234e43f15631ec6842615c6dc816856"/><section>
    <title>FAST_REQUIRE_UNARY</title>
<indexterm><primary>FAST_REQUIRE_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_REQUIRE_UNARY</secondary></indexterm>
<para><computeroutput>#define FAST_REQUIRE_UNARY   <link linkend="_doctest_8h_1a028cfc971ad12bc510b303622b9bc35f">DOCTEST_FAST_REQUIRE_UNARY</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1af0f7170e4c1cf63072e6c02ccee6ab09"/><section>
    <title>FAST_REQUIRE_UNARY_FALSE</title>
<indexterm><primary>FAST_REQUIRE_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_REQUIRE_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define FAST_REQUIRE_UNARY_FALSE   <link linkend="_doctest_8h_1a3c0e9e0c03a62a810aae8e282b807938">DOCTEST_FAST_REQUIRE_UNARY_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a9043f391eea4bb0934c036518dc21531"/><section>
    <title>FAST_WARN_EQ</title>
<indexterm><primary>FAST_WARN_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_WARN_EQ</secondary></indexterm>
<para><computeroutput>#define FAST_WARN_EQ   <link linkend="_doctest_8h_1a307c7c41ebfa40b60def448d2190772d">DOCTEST_FAST_WARN_EQ</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aea205cce196a21c6097083339e9f1b8e"/><section>
    <title>FAST_WARN_GE</title>
<indexterm><primary>FAST_WARN_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_WARN_GE</secondary></indexterm>
<para><computeroutput>#define FAST_WARN_GE   <link linkend="_doctest_8h_1a7851a92cfdd7ec5b60ae070ee21b1ff4">DOCTEST_FAST_WARN_GE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab7e247ab9da0d5ced4c3698acec76b1d"/><section>
    <title>FAST_WARN_GT</title>
<indexterm><primary>FAST_WARN_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_WARN_GT</secondary></indexterm>
<para><computeroutput>#define FAST_WARN_GT   <link linkend="_doctest_8h_1a5937efa19ce061357efe0b8a8f5be061">DOCTEST_FAST_WARN_GT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a88604528e5995edf299b5d834649270a"/><section>
    <title>FAST_WARN_LE</title>
<indexterm><primary>FAST_WARN_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_WARN_LE</secondary></indexterm>
<para><computeroutput>#define FAST_WARN_LE   <link linkend="_doctest_8h_1ac9a00a428fc5d856edac7d642f9d218a">DOCTEST_FAST_WARN_LE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1af884b2b037f8a07a8a50f2ce7cef23f5"/><section>
    <title>FAST_WARN_LT</title>
<indexterm><primary>FAST_WARN_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_WARN_LT</secondary></indexterm>
<para><computeroutput>#define FAST_WARN_LT   <link linkend="_doctest_8h_1a1c5270c3e5ed27308bcdcb2e439f5049">DOCTEST_FAST_WARN_LT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a65a812a1ff2b5b311dfd2551522b5bfc"/><section>
    <title>FAST_WARN_NE</title>
<indexterm><primary>FAST_WARN_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_WARN_NE</secondary></indexterm>
<para><computeroutput>#define FAST_WARN_NE   <link linkend="_doctest_8h_1a7f6c8720c02eef2319ffb32de1f10233">DOCTEST_FAST_WARN_NE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abf255e9b12308f6f9300f621846cfdd3"/><section>
    <title>FAST_WARN_UNARY</title>
<indexterm><primary>FAST_WARN_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_WARN_UNARY</secondary></indexterm>
<para><computeroutput>#define FAST_WARN_UNARY   <link linkend="_doctest_8h_1aad3a987ea3505b2ade023959bec1dbff">DOCTEST_FAST_WARN_UNARY</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aed83cedd4a056a10fa0fa3a245bdc0a2"/><section>
    <title>FAST_WARN_UNARY_FALSE</title>
<indexterm><primary>FAST_WARN_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>FAST_WARN_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define FAST_WARN_UNARY_FALSE   <link linkend="_doctest_8h_1a85bdb241d41e64ec124f96d2efba9443">DOCTEST_FAST_WARN_UNARY_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a6e079cc73cfaebf22e5a7914b3834cf9"/><section>
    <title>GIVEN</title>
<indexterm><primary>GIVEN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>GIVEN</secondary></indexterm>
<para><computeroutput>#define GIVEN   <link linkend="_doctest_8h_1a391063a35ec9bea4c600c15b0a27cb54">DOCTEST_GIVEN</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae1103fea1e1b3c41ca3322d5389f7162"/><section>
    <title>INFO</title>
<indexterm><primary>INFO</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>INFO</secondary></indexterm>
<para><computeroutput>#define INFO   <link linkend="_doctest_8h_1ad832d703b848c2af8010492db391b5c0">DOCTEST_INFO</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1af8a3e30cb4858ca8a098acae107286c0"/><section>
    <title>MESSAGE</title>
<indexterm><primary>MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>MESSAGE</secondary></indexterm>
<para><computeroutput>#define MESSAGE   <link linkend="_doctest_8h_1ac7197ddb13dc82354ff2b91cbb78ee81">DOCTEST_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aac0f523c848194e94f7fb3425bd92350"/><section>
    <title>REGISTER_EXCEPTION_TRANSLATOR</title>
<indexterm><primary>REGISTER_EXCEPTION_TRANSLATOR</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REGISTER_EXCEPTION_TRANSLATOR</secondary></indexterm>
<para><computeroutput>#define REGISTER_EXCEPTION_TRANSLATOR   <link linkend="_doctest_8h_1ac61710def0b8698d89bce297532d0017">DOCTEST_REGISTER_EXCEPTION_TRANSLATOR</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a73d9b6c21c3dc11f592c0f1496efa4e0"/><section>
    <title>REGISTER_LISTENER</title>
<indexterm><primary>REGISTER_LISTENER</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REGISTER_LISTENER</secondary></indexterm>
<para><computeroutput>#define REGISTER_LISTENER   <link linkend="_doctest_8h_1a03161a703cc44e07384c4a0981a13c86">DOCTEST_REGISTER_LISTENER</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a97b96038b34c9ce8478515b773d9effb"/><section>
    <title>REGISTER_REPORTER</title>
<indexterm><primary>REGISTER_REPORTER</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REGISTER_REPORTER</secondary></indexterm>
<para><computeroutput>#define REGISTER_REPORTER   <link linkend="_doctest_8h_1a97757bf089f108cf8842727213bf3299">DOCTEST_REGISTER_REPORTER</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a99047749d13f9a8207b67d44ae2c0b1f"/><section>
    <title>REQUIRE</title>
<indexterm><primary>REQUIRE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE</secondary></indexterm>
<para><computeroutput>#define REQUIRE   <link linkend="_doctest_8h_1a35b7bf4bf062cc1359ab36c4119d680a">DOCTEST_REQUIRE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae2a7214cb29baae900a71b465c58d9a9"/><section>
    <title>REQUIRE_EQ</title>
<indexterm><primary>REQUIRE_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_EQ</secondary></indexterm>
<para><computeroutput>#define REQUIRE_EQ   <link linkend="_doctest_8h_1a8820dcb94345362c2fd94aea26a3eabc">DOCTEST_REQUIRE_EQ</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab2ef1921c896e1c36706e223eb75596c"/><section>
    <title>REQUIRE_FALSE</title>
<indexterm><primary>REQUIRE_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_FALSE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_FALSE   <link linkend="_doctest_8h_1a0567e21b7ebdae9dbe84e4e46b230e12">DOCTEST_REQUIRE_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a256099df0da90df3daf317b710c52c01"/><section>
    <title>REQUIRE_FALSE_MESSAGE</title>
<indexterm><primary>REQUIRE_FALSE_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_FALSE_MESSAGE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_FALSE_MESSAGE   <link linkend="_doctest_8h_1a21c6e12786b4645ebf4ec15d62c058b2">DOCTEST_REQUIRE_FALSE_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae79f6cea88e5391b1c4432cba5a72a82"/><section>
    <title>REQUIRE_GE</title>
<indexterm><primary>REQUIRE_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_GE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_GE   <link linkend="_doctest_8h_1ad75b722f83eb3f81662af7fccae74732">DOCTEST_REQUIRE_GE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac4a4c0439506d42e24e92b323358b7b6"/><section>
    <title>REQUIRE_GT</title>
<indexterm><primary>REQUIRE_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_GT</secondary></indexterm>
<para><computeroutput>#define REQUIRE_GT   <link linkend="_doctest_8h_1a87d30bb902d1bfca7427a9eb51d130eb">DOCTEST_REQUIRE_GT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abc1807f4e72ad4103f8241561e689b10"/><section>
    <title>REQUIRE_LE</title>
<indexterm><primary>REQUIRE_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_LE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_LE   <link linkend="_doctest_8h_1a9101f25bfe135de1e306e3ed342e248a">DOCTEST_REQUIRE_LE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a3bdbdba1cbc958e1e226f26f7d5ede89"/><section>
    <title>REQUIRE_LT</title>
<indexterm><primary>REQUIRE_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_LT</secondary></indexterm>
<para><computeroutput>#define REQUIRE_LT   <link linkend="_doctest_8h_1ab88925759665843f59b14f097213351c">DOCTEST_REQUIRE_LT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a0039be65d2fce63e84c47b7588600315"/><section>
    <title>REQUIRE_MESSAGE</title>
<indexterm><primary>REQUIRE_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_MESSAGE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_MESSAGE   <link linkend="_doctest_8h_1aeb1148cd18899a07cf48073bd93ee178">DOCTEST_REQUIRE_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a972dc8946c6130312c8a08fb77fa7e7f"/><section>
    <title>REQUIRE_NE</title>
<indexterm><primary>REQUIRE_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_NE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_NE   <link linkend="_doctest_8h_1aa34e39b7d59335760ffa1b9fce45cc4b">DOCTEST_REQUIRE_NE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad3aceb73768336fc3032faee38934dda"/><section>
    <title>REQUIRE_NOTHROW</title>
<indexterm><primary>REQUIRE_NOTHROW</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_NOTHROW</secondary></indexterm>
<para><computeroutput>#define REQUIRE_NOTHROW   <link linkend="_doctest_8h_1af736ab1a8a0779fa8df23e8177a52abb">DOCTEST_REQUIRE_NOTHROW</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a97f5f232912bb57ae4d29e306830e790"/><section>
    <title>REQUIRE_NOTHROW_MESSAGE</title>
<indexterm><primary>REQUIRE_NOTHROW_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_NOTHROW_MESSAGE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_NOTHROW_MESSAGE   <link linkend="_doctest_8h_1abb059c9cbdf8d90ee2ac00e01c14d067">DOCTEST_REQUIRE_NOTHROW_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae9942ba9adadb02cac56f7ffa9771dbe"/><section>
    <title>REQUIRE_THROWS</title>
<indexterm><primary>REQUIRE_THROWS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_THROWS</secondary></indexterm>
<para><computeroutput>#define REQUIRE_THROWS   <link linkend="_doctest_8h_1a00ac74412c24337acdb25b2f0587f6a5">DOCTEST_REQUIRE_THROWS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a914202635637132a4c849fffb0e2c3e1"/><section>
    <title>REQUIRE_THROWS_AS</title>
<indexterm><primary>REQUIRE_THROWS_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_THROWS_AS</secondary></indexterm>
<para><computeroutput>#define REQUIRE_THROWS_AS   <link linkend="_doctest_8h_1a0a5e62cddee11560955d5213caac78a4">DOCTEST_REQUIRE_THROWS_AS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae2fae35ab871f211872134bce5090fa1"/><section>
    <title>REQUIRE_THROWS_AS_MESSAGE</title>
<indexterm><primary>REQUIRE_THROWS_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_THROWS_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_THROWS_AS_MESSAGE   <link linkend="_doctest_8h_1a2721243401e6e1ffdef02c34e6f654ed">DOCTEST_REQUIRE_THROWS_AS_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab19ac5055a738916db66f3170b3df9c9"/><section>
    <title>REQUIRE_THROWS_MESSAGE</title>
<indexterm><primary>REQUIRE_THROWS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_THROWS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_THROWS_MESSAGE   <link linkend="_doctest_8h_1a0b639518dd8b20bd0a73d8cd45223503">DOCTEST_REQUIRE_THROWS_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a04812d5473de006d1a78560bd8c76522"/><section>
    <title>REQUIRE_THROWS_WITH</title>
<indexterm><primary>REQUIRE_THROWS_WITH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_THROWS_WITH</secondary></indexterm>
<para><computeroutput>#define REQUIRE_THROWS_WITH   <link linkend="_doctest_8h_1a50f4ffd81384eda6103b9aba1e4fca60">DOCTEST_REQUIRE_THROWS_WITH</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae384ae4b7a60f455fc2a46f3aa1fdf6e"/><section>
    <title>REQUIRE_THROWS_WITH_AS</title>
<indexterm><primary>REQUIRE_THROWS_WITH_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_THROWS_WITH_AS</secondary></indexterm>
<para><computeroutput>#define REQUIRE_THROWS_WITH_AS   <link linkend="_doctest_8h_1a9deaef85b8ec7fa5a63ad99a9eb5b469">DOCTEST_REQUIRE_THROWS_WITH_AS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a7b206deef28f88e4c5e1c404668066c0"/><section>
    <title>REQUIRE_THROWS_WITH_AS_MESSAGE</title>
<indexterm><primary>REQUIRE_THROWS_WITH_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_THROWS_WITH_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_THROWS_WITH_AS_MESSAGE   <link linkend="_doctest_8h_1aa65b31390b95de60f879f80389b7c032">DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a5125b6a70a26d54c52659644152b51f0"/><section>
    <title>REQUIRE_THROWS_WITH_MESSAGE</title>
<indexterm><primary>REQUIRE_THROWS_WITH_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_THROWS_WITH_MESSAGE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_THROWS_WITH_MESSAGE   <link linkend="_doctest_8h_1a0cb80917b31e413a75580399648ed0e9">DOCTEST_REQUIRE_THROWS_WITH_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae6b232d8d18567dab628407d16e9c7a7"/><section>
    <title>REQUIRE_UNARY</title>
<indexterm><primary>REQUIRE_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_UNARY</secondary></indexterm>
<para><computeroutput>#define REQUIRE_UNARY   <link linkend="_doctest_8h_1a77558db4dc0f1758c756da740b64413a">DOCTEST_REQUIRE_UNARY</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a99df855c65a2face7a3498a4fe1cd09a"/><section>
    <title>REQUIRE_UNARY_FALSE</title>
<indexterm><primary>REQUIRE_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>REQUIRE_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define REQUIRE_UNARY_FALSE   <link linkend="_doctest_8h_1a37703a3eac1f8332d970808340abf56e">DOCTEST_REQUIRE_UNARY_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a30e72ad52b042b3b951261583356a14b"/><section>
    <title>SCENARIO</title>
<indexterm><primary>SCENARIO</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>SCENARIO</secondary></indexterm>
<para><computeroutput>#define SCENARIO   <link linkend="_doctest_8h_1ab990e5952d346329356aeb62a261386a">DOCTEST_SCENARIO</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a1e5f9b2c5d633c7660ef788e910fbe38"/><section>
    <title>SCENARIO_CLASS</title>
<indexterm><primary>SCENARIO_CLASS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>SCENARIO_CLASS</secondary></indexterm>
<para><computeroutput>#define SCENARIO_CLASS   <link linkend="_doctest_8h_1a397e2591ec795895eb61e15309fa0634">DOCTEST_SCENARIO_CLASS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a715044eee828e31da9871d0ec3a48e2e"/><section>
    <title>SCENARIO_TEMPLATE</title>
<indexterm><primary>SCENARIO_TEMPLATE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>SCENARIO_TEMPLATE</secondary></indexterm>
<para><computeroutput>#define SCENARIO_TEMPLATE   <link linkend="_doctest_8h_1abbf51631942e053be12a31bf2299fe28">DOCTEST_SCENARIO_TEMPLATE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a3f381792c774552a3aa01745d51286f2"/><section>
    <title>SCENARIO_TEMPLATE_DEFINE</title>
<indexterm><primary>SCENARIO_TEMPLATE_DEFINE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>SCENARIO_TEMPLATE_DEFINE</secondary></indexterm>
<para><computeroutput>#define SCENARIO_TEMPLATE_DEFINE   <link linkend="_doctest_8h_1aadcf3b288d0506988896ff62d6b5ec5a">DOCTEST_SCENARIO_TEMPLATE_DEFINE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad50e066bb7463b0dc3ae1bc06e4d690b"/><section>
    <title>SUBCASE</title>
<indexterm><primary>SUBCASE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>SUBCASE</secondary></indexterm>
<para><computeroutput>#define SUBCASE   <link linkend="_doctest_8h_1a5acad2b6cef499ee884b8027ef41fbf6">DOCTEST_SUBCASE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a5ab5b9aaf3850b085ca39abf901b2751"/><section>
    <title>TEST_CASE</title>
<indexterm><primary>TEST_CASE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_CASE</secondary></indexterm>
<para><computeroutput>#define TEST_CASE   <link linkend="_doctest_8h_1ac1216c5a9ba44f5af8b7115a3badaae2">DOCTEST_TEST_CASE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a5556f51cbbc5bd82a9f742706dde3bf4"/><section>
    <title>TEST_CASE_CLASS</title>
<indexterm><primary>TEST_CASE_CLASS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_CASE_CLASS</secondary></indexterm>
<para><computeroutput>#define TEST_CASE_CLASS   <link linkend="_doctest_8h_1a41431265482f363020f93a13e4af4c6a">DOCTEST_TEST_CASE_CLASS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ac3d85fde55dfc51eb09b45341ae1e83d"/><section>
    <title>TEST_CASE_FIXTURE</title>
<indexterm><primary>TEST_CASE_FIXTURE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_CASE_FIXTURE</secondary></indexterm>
<para><computeroutput>#define TEST_CASE_FIXTURE   <link linkend="_doctest_8h_1a22130c0eff96eac3ed682b7d8854e0f6">DOCTEST_TEST_CASE_FIXTURE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a337b21bec6b92e16fe4fe5a7a6aadf37"/><section>
    <title>TEST_CASE_TEMPLATE</title>
<indexterm><primary>TEST_CASE_TEMPLATE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_CASE_TEMPLATE</secondary></indexterm>
<para><computeroutput>#define TEST_CASE_TEMPLATE   <link linkend="_doctest_8h_1ab84667702ff8411d0444261796972374">DOCTEST_TEST_CASE_TEMPLATE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a5061c5002a33d4f1f10a38f3e7c7f2df"/><section>
    <title>TEST_CASE_TEMPLATE_APPLY</title>
<indexterm><primary>TEST_CASE_TEMPLATE_APPLY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_CASE_TEMPLATE_APPLY</secondary></indexterm>
<para><computeroutput>#define TEST_CASE_TEMPLATE_APPLY   <link linkend="_doctest_8h_1a8722d97b6087d098bbd796801a347767">DOCTEST_TEST_CASE_TEMPLATE_APPLY</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a156f558a00d1e92dea93362d0dc43b55"/><section>
    <title>TEST_CASE_TEMPLATE_DEFINE</title>
<indexterm><primary>TEST_CASE_TEMPLATE_DEFINE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_CASE_TEMPLATE_DEFINE</secondary></indexterm>
<para><computeroutput>#define TEST_CASE_TEMPLATE_DEFINE   <link linkend="_doctest_8h_1a7c264a83f95bfae9a0e5d86c9d4c8fe3">DOCTEST_TEST_CASE_TEMPLATE_DEFINE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a32d192ac759d8a1c13c4e2d5d4cc6d04"/><section>
    <title>TEST_CASE_TEMPLATE_INSTANTIATE</title>
<indexterm><primary>TEST_CASE_TEMPLATE_INSTANTIATE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_CASE_TEMPLATE_INSTANTIATE</secondary></indexterm>
<para><computeroutput>#define TEST_CASE_TEMPLATE_INSTANTIATE   <link linkend="_doctest_8h_1a5a2dcfd67d0f0aa96600b46678135514">DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a1abc60557fe20210f2d7118eca6aa41a"/><section>
    <title>TEST_CASE_TEMPLATE_INVOKE</title>
<indexterm><primary>TEST_CASE_TEMPLATE_INVOKE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_CASE_TEMPLATE_INVOKE</secondary></indexterm>
<para><computeroutput>#define TEST_CASE_TEMPLATE_INVOKE   <link linkend="_doctest_8h_1ac36f9261802a5321792358196104f4e6">DOCTEST_TEST_CASE_TEMPLATE_INVOKE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aad5d8423b9b1a6b3699394a1ff8cc1e5"/><section>
    <title>TEST_SUITE</title>
<indexterm><primary>TEST_SUITE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_SUITE</secondary></indexterm>
<para><computeroutput>#define TEST_SUITE   <link linkend="_doctest_8h_1aa64ce392f41c8ba1d22cfb5b83847f55">DOCTEST_TEST_SUITE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a81d757f5c488610385f573cbff5301d7"/><section>
    <title>TEST_SUITE_BEGIN</title>
<indexterm><primary>TEST_SUITE_BEGIN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_SUITE_BEGIN</secondary></indexterm>
<para><computeroutput>#define TEST_SUITE_BEGIN   <link linkend="_doctest_8h_1a64f9649162581c1c24a78e65cf01492f">DOCTEST_TEST_SUITE_BEGIN</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a3b41014a9f6a32210a8eecbe8fea3c76"/><section>
    <title>TEST_SUITE_END</title>
<indexterm><primary>TEST_SUITE_END</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TEST_SUITE_END</secondary></indexterm>
<para><computeroutput>#define TEST_SUITE_END   <link linkend="_doctest_8h_1a3ca1fc8ae12659768e3226db19a2c7ee">DOCTEST_TEST_SUITE_END</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad9884c43f4f50a5852711a614f2343ac"/><section>
    <title>THEN</title>
<indexterm><primary>THEN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>THEN</secondary></indexterm>
<para><computeroutput>#define THEN   <link linkend="_doctest_8h_1aab2f195b2c866cd010123c1d5b70217f">DOCTEST_THEN</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1abf09d1236a38b96799737eab5f533b61"/><section>
    <title>TO_LVALUE</title>
<indexterm><primary>TO_LVALUE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TO_LVALUE</secondary></indexterm>
<para><computeroutput>#define TO_LVALUE   <link linkend="_doctest_8h_1a474989d096480fd5c52ca9f346cdd23c">DOCTEST_TO_LVALUE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ab83b54e5e7983ac5367d69b4bd19bd38"/><section>
    <title>TYPE_TO_STRING</title>
<indexterm><primary>TYPE_TO_STRING</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>TYPE_TO_STRING</secondary></indexterm>
<para><computeroutput>#define TYPE_TO_STRING   <link linkend="_doctest_8h_1a568e1d22f39724c8d3eb8addf4bf8e72">DOCTEST_TYPE_TO_STRING</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a271d8f7f52be750e5c744a394ec71344"/><section>
    <title>WARN</title>
<indexterm><primary>WARN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN</secondary></indexterm>
<para><computeroutput>#define WARN   <link linkend="_doctest_8h_1a5543bf17193d5cf77558fabbd9cfb02f">DOCTEST_WARN</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ad1646c366e40c8caa9ce4ec53927258c"/><section>
    <title>WARN_EQ</title>
<indexterm><primary>WARN_EQ</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_EQ</secondary></indexterm>
<para><computeroutput>#define WARN_EQ   <link linkend="_doctest_8h_1a1db08e05a079662153c7702e10dcdbde">DOCTEST_WARN_EQ</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a24a7f23f4fc3f33bd46c63dfbe6abbe1"/><section>
    <title>WARN_FALSE</title>
<indexterm><primary>WARN_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_FALSE</secondary></indexterm>
<para><computeroutput>#define WARN_FALSE   <link linkend="_doctest_8h_1a207c474577961221a4003351186b5378">DOCTEST_WARN_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4d57b82dd6ed3966c41424a4fc05b101"/><section>
    <title>WARN_FALSE_MESSAGE</title>
<indexterm><primary>WARN_FALSE_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_FALSE_MESSAGE</secondary></indexterm>
<para><computeroutput>#define WARN_FALSE_MESSAGE   <link linkend="_doctest_8h_1a5fdcd4d41bfc530771f64dda474edf79">DOCTEST_WARN_FALSE_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a05c7122d2085607066dbacc76d5cce60"/><section>
    <title>WARN_GE</title>
<indexterm><primary>WARN_GE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_GE</secondary></indexterm>
<para><computeroutput>#define WARN_GE   <link linkend="_doctest_8h_1aae5060834af3dd90c806b087368d010c">DOCTEST_WARN_GE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2d85853bffffa94e08d7188716b2a635"/><section>
    <title>WARN_GT</title>
<indexterm><primary>WARN_GT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_GT</secondary></indexterm>
<para><computeroutput>#define WARN_GT   <link linkend="_doctest_8h_1ad814c5db21e9ac7eca4b3e87aec0ef3b">DOCTEST_WARN_GT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a9cddea9676d00331b5d3f74a9b896b88"/><section>
    <title>WARN_LE</title>
<indexterm><primary>WARN_LE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_LE</secondary></indexterm>
<para><computeroutput>#define WARN_LE   <link linkend="_doctest_8h_1aaed576a70b191ac93a4a4e4052b31f4f">DOCTEST_WARN_LE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae1d9ec9a28837ad5c7bac11b0cf47658"/><section>
    <title>WARN_LT</title>
<indexterm><primary>WARN_LT</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_LT</secondary></indexterm>
<para><computeroutput>#define WARN_LT   <link linkend="_doctest_8h_1aa0e1bebf090f015583da8decb0ee3e5c">DOCTEST_WARN_LT</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a9c70dfa568a220097a975682e4b6fb6d"/><section>
    <title>WARN_MESSAGE</title>
<indexterm><primary>WARN_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_MESSAGE</secondary></indexterm>
<para><computeroutput>#define WARN_MESSAGE   <link linkend="_doctest_8h_1a8b25fbbb6ee92eaa18806a20af928c25">DOCTEST_WARN_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a9443765f25c723846b1c73ff943f1982"/><section>
    <title>WARN_NE</title>
<indexterm><primary>WARN_NE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_NE</secondary></indexterm>
<para><computeroutput>#define WARN_NE   <link linkend="_doctest_8h_1aaa8ef6ed223cba8e86d0bc0676aeb50e">DOCTEST_WARN_NE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a83c5f5662d0ab991e05cca9ecb309fa7"/><section>
    <title>WARN_NOTHROW</title>
<indexterm><primary>WARN_NOTHROW</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_NOTHROW</secondary></indexterm>
<para><computeroutput>#define WARN_NOTHROW   <link linkend="_doctest_8h_1a2de5ec015a9fbf92197a289b11db462c">DOCTEST_WARN_NOTHROW</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a45717cc141c996b065903eb69d190dd4"/><section>
    <title>WARN_NOTHROW_MESSAGE</title>
<indexterm><primary>WARN_NOTHROW_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_NOTHROW_MESSAGE</secondary></indexterm>
<para><computeroutput>#define WARN_NOTHROW_MESSAGE   <link linkend="_doctest_8h_1a03ee95587b199006f4d8e242af5d0bc1">DOCTEST_WARN_NOTHROW_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a3132533466c8fa0b431b2d3d7b8e5185"/><section>
    <title>WARN_THROWS</title>
<indexterm><primary>WARN_THROWS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_THROWS</secondary></indexterm>
<para><computeroutput>#define WARN_THROWS   <link linkend="_doctest_8h_1ad969cd19e5751fd38d2429ce8049065e">DOCTEST_WARN_THROWS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a85d15b963856678eab8233032fe80fb1"/><section>
    <title>WARN_THROWS_AS</title>
<indexterm><primary>WARN_THROWS_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_THROWS_AS</secondary></indexterm>
<para><computeroutput>#define WARN_THROWS_AS   <link linkend="_doctest_8h_1a0c61debdc225c16793ce21792448bdd2">DOCTEST_WARN_THROWS_AS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aad8f81766aaee5a1daea88b6a36724a8"/><section>
    <title>WARN_THROWS_AS_MESSAGE</title>
<indexterm><primary>WARN_THROWS_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_THROWS_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define WARN_THROWS_AS_MESSAGE   <link linkend="_doctest_8h_1a50e74b4aac3d73d0bcec94e2901a267a">DOCTEST_WARN_THROWS_AS_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a13a31bf90de20fdde478b0c82b4d5663"/><section>
    <title>WARN_THROWS_MESSAGE</title>
<indexterm><primary>WARN_THROWS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_THROWS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define WARN_THROWS_MESSAGE   <link linkend="_doctest_8h_1a231ae5902ac77e9f0129bb6b82653095">DOCTEST_WARN_THROWS_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a4b96c8b6c6d10da9fa141b9f3e1de0ae"/><section>
    <title>WARN_THROWS_WITH</title>
<indexterm><primary>WARN_THROWS_WITH</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_THROWS_WITH</secondary></indexterm>
<para><computeroutput>#define WARN_THROWS_WITH   <link linkend="_doctest_8h_1a0d30b4e4f2a0e5b7e845efe285bf270f">DOCTEST_WARN_THROWS_WITH</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a2cf54d012366635ce4330cccc9a2d1bd"/><section>
    <title>WARN_THROWS_WITH_AS</title>
<indexterm><primary>WARN_THROWS_WITH_AS</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_THROWS_WITH_AS</secondary></indexterm>
<para><computeroutput>#define WARN_THROWS_WITH_AS   <link linkend="_doctest_8h_1ab808e9a932cbd988fc3790137ed365a9">DOCTEST_WARN_THROWS_WITH_AS</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aec8c64d9533c4f81f40d89b04dd09860"/><section>
    <title>WARN_THROWS_WITH_AS_MESSAGE</title>
<indexterm><primary>WARN_THROWS_WITH_AS_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_THROWS_WITH_AS_MESSAGE</secondary></indexterm>
<para><computeroutput>#define WARN_THROWS_WITH_AS_MESSAGE   <link linkend="_doctest_8h_1ad97451b00451d54d2239da25aac4204a">DOCTEST_WARN_THROWS_WITH_AS_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a637a953b78fecd97989b0970892374c4"/><section>
    <title>WARN_THROWS_WITH_MESSAGE</title>
<indexterm><primary>WARN_THROWS_WITH_MESSAGE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_THROWS_WITH_MESSAGE</secondary></indexterm>
<para><computeroutput>#define WARN_THROWS_WITH_MESSAGE   <link linkend="_doctest_8h_1ad3928bf984886a53d79a67f746380222">DOCTEST_WARN_THROWS_WITH_MESSAGE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1ae6b80cf907d8897831914248444dce1a"/><section>
    <title>WARN_UNARY</title>
<indexterm><primary>WARN_UNARY</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_UNARY</secondary></indexterm>
<para><computeroutput>#define WARN_UNARY   <link linkend="_doctest_8h_1a41e14871f960ec76113197ad929d18c8">DOCTEST_WARN_UNARY</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1a6bcb1f9586c8a1b770fe750437ec8cfa"/><section>
    <title>WARN_UNARY_FALSE</title>
<indexterm><primary>WARN_UNARY_FALSE</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WARN_UNARY_FALSE</secondary></indexterm>
<para><computeroutput>#define WARN_UNARY_FALSE   <link linkend="_doctest_8h_1a24e0cd6aa574d457374825c7d61f2038">DOCTEST_WARN_UNARY_FALSE</link></computeroutput></para></section>
<anchor xml:id="_doctest_8h_1aec3ea373906cedb8f1c3baddcc8be548"/><section>
    <title>WHEN</title>
<indexterm><primary>WHEN</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>WHEN</secondary></indexterm>
<para><computeroutput>#define WHEN   <link linkend="_doctest_8h_1a570ec2864c36b1b5c8ccfd94c6b8b629">DOCTEST_WHEN</link></computeroutput></para></section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3"/><section>
    <title>ostream</title>
<indexterm><primary>ostream</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>ostream</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_classbasic__ostream">basic_ostream</link>&lt;char, <link linkend="_structchar__traits">char_traits</link>&lt;char&gt; &gt; <link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">ostream</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_doctest_8h_1a03d36bae0d7ed8dcce87834d61051290"/><section>
    <title>DOCTEST_MSVC_SUPPRESS_WARNING()</title>
<indexterm><primary>DOCTEST_MSVC_SUPPRESS_WARNING</primary><secondary>doctest.h</secondary></indexterm>
<indexterm><primary>doctest.h</primary><secondary>DOCTEST_MSVC_SUPPRESS_WARNING</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a628491cf2971a026350d5401986bf6d3">DOCTEST_CLANG_SUPPRESS_WARNING_PUSH</link> <link linkend="_doctest_8h_1a8015d10af2883db80a955ce0d523886d">DOCTEST_GCC_SUPPRESS_WARNING_PUSH</link> <link linkend="_doctest_8h_1aec6d713a9dde361b8e68afe78c5bf3cf">DOCTEST_MSVC_SUPPRESS_WARNING_PUSH</link> DOCTEST_MSVC_SUPPRESS_WARNING (4616 )</computeroutput></para></section>
</section>
</section>
