<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespacedoctest" xml:lang="en-US">
<title>doctest Namespace Reference</title>
<indexterm><primary>doctest</primary></indexterm>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1assert_type">assertType</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1_color">Color</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1detail">detail</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacedoctest_1_1_test_case_failure_reason">TestCaseFailureReason</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classdoctest_1_1_approx">Approx</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_assert_data">AssertData</link></para>
</listitem>
            <listitem><para>class <link linkend="_classdoctest_1_1_context">Context</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_context_options">ContextOptions</link></para>

<para>OCLINT too many fields. </para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_current_test_case_stats">CurrentTestCaseStats</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_i_context_scope">IContextScope</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_i_reporter">IReporter</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_message_data">MessageData</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_query_data">QueryData</link></para>
</listitem>
            <listitem><para>class <link linkend="_classdoctest_1_1_string">String</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_string_maker">StringMaker</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_string_maker_3_01_r_01_c_1_1_5_01_4">StringMaker&lt; R C::* &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_string_maker_3_01_t_01_5_01_4">StringMaker&lt; T * &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_subcase_signature">SubcaseSignature</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_test_case_data">TestCaseData</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_test_case_exception">TestCaseException</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdoctest_1_1_test_run_stats">TestRunStats</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1ae332e5e775f83a532884303780f79f9f">operator==</link> (const <link linkend="_classdoctest_1_1_string">String</link> &amp;lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1ab9a88e4c19857cd86a0f037d27bcad72">operator!=</link> (const <link linkend="_classdoctest_1_1_string">String</link> &amp;lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1afa15b277b9a277793b7adf129e0128d9">operator&lt;</link> (const <link linkend="_classdoctest_1_1_string">String</link> &amp;lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1acef5990b03a973c74ff2dd6cfc112913">operator&gt;</link> (const <link linkend="_classdoctest_1_1_string">String</link> &amp;lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1a27c6c308e814ad9384499bafc03f9e39">operator&lt;=</link> (const <link linkend="_classdoctest_1_1_string">String</link> &amp;lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1ac32accb42e937cf870de2f6865ea236a">operator&gt;=</link> (const <link linkend="_classdoctest_1_1_string">String</link> &amp;lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> &amp; <link linkend="_namespacedoctest_1a7817aba561f42fc42fdccb1b312c7678">operator&lt;&lt;</link> (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> &amp;s, const <link linkend="_classdoctest_1_1_string">String</link> &amp;in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const char * <link linkend="_namespacedoctest_1a44bf1260a82383247d446170810493cf">assertString</link> (<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3">assertType::Enum</link> at)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const char * <link linkend="_namespacedoctest_1a3fcfa9f7f479ad1b46d142e210c8ca75">failureString</link> (<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3">assertType::Enum</link> at)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const char * <link linkend="_namespacedoctest_1a31b19b71f2b30f77f84b6a8bb4943925">skipPathFromFilename</link> (const char *file)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a8907bf35788959391343a2304f004e17">toString</link> (const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(T) value)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a70fd23e88074d38b9d61476005305df5">toString</link> (bool in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a68660ce630bd88a551ab3108709e6592">toString</link> (float in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a43b51978c9505f682cbff9462a02f8af">toString</link> (double in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1ae4e12dd9865bb31f417f9df0c41813cf">toString</link> (double long in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1af106dff2a0c068d301349b754c466378">toString</link> (char in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a1f910fdc13d84a538090b959a97a6fa5">toString</link> (char signed in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1ae2c3e60e3ee32da5d8fc4f778b7a225a">toString</link> (char unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1aaff61384b81d700818094342c6110d2c">toString</link> (int short in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a04b10595f3fac969e7682a48fd3ad0c6">toString</link> (int short unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a0318ba5a1fbeb9e2fe84227a2f007dac">toString</link> (int in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a6de63ae787cb530ee050b3632106907d">toString</link> (int unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1aac941ce13f416e31d72d9fb114681bb2">toString</link> (int long in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1ac1c9dfb0453eb7d222bed9d2a4cf62fd">toString</link> (int long unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1ada057336406349bd947f26b1ddb97bd0">toString</link> (int long long in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a0996f0f29ee1288fc2363c958fd4fd05">toString</link> (int long long unsigned in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a88b03675f9b7b8afe5e6d4fa15117181">toString</link> (std::nullptr_t in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> <link linkend="_namespacedoctest_1a63aa06a8555c5aa34a7a6e76e87a3bca">toString</link> (const <link linkend="_classdoctest_1_1_approx">Approx</link> &amp;in)</para>
</listitem>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const <link linkend="_structdoctest_1_1_context_options">ContextOptions</link> * <link linkend="_namespacedoctest_1a13c02a469cfc2264d547fc0fc3a55569">getContextOptions</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a104a0e533475e45acbddd9266c4d687e">DOCTEST_DEFINE_DECORATOR</link> (test_suite, const char *, &quot;&quot;)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a07f4a26e2b7cce41abb7d71124951792">DOCTEST_DEFINE_DECORATOR</link> (description, const char *, &quot;&quot;)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a0ce903d8e37a8fdc185f6e8c73f9b1dd">DOCTEST_DEFINE_DECORATOR</link> (skip, bool, true)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a09d01a6e97677b7bb508bf925e421963">DOCTEST_DEFINE_DECORATOR</link> (timeout, double, 0)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a44ea7d81a1561f2222b8ffa69eecc599">DOCTEST_DEFINE_DECORATOR</link> (may_fail, bool, true)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1a0da07f59e77fcb14943788b2c85e2355">DOCTEST_DEFINE_DECORATOR</link> (should_fail, bool, true)</para>
</listitem>
            <listitem><para><link linkend="_namespacedoctest_1ab1678966da9d93629130f083220403da">DOCTEST_DEFINE_DECORATOR</link> (expected_failures, int, 0)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>int <link linkend="_namespacedoctest_1a8e23e6bb4c6982688652060dbe41385d">registerExceptionTranslator</link> (<link linkend="_classdoctest_1_1_string">String</link>(*translateFunction)(T))</para>
</listitem>
            <listitem><para>template&lt;typename Reporter &gt; </para><para>int <link linkend="_namespacedoctest_1a9e878a811f7bf0a615b3a39de3004673">registerReporter</link> (const char *name, int priority, bool isReporter)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool <link linkend="_namespacedoctest_1a0b03060093b3894c976b6ae84e55f3f2">is_running_in_test</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespacedoctest_1a44bf1260a82383247d446170810493cf"/><section>
    <title>assertString()</title>
<indexterm><primary>assertString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>assertString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const char * doctest::assertString (<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3">assertType::Enum</link> at)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a07f4a26e2b7cce41abb7d71124951792"/><section>
    <title>DOCTEST_DEFINE_DECORATOR()<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>DOCTEST_DEFINE_DECORATOR</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>DOCTEST_DEFINE_DECORATOR</secondary></indexterm>
<para><computeroutput>doctest::DOCTEST_DEFINE_DECORATOR (description , const char * , &quot;&quot; )</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1ab1678966da9d93629130f083220403da"/><section>
    <title>DOCTEST_DEFINE_DECORATOR()<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>DOCTEST_DEFINE_DECORATOR</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>DOCTEST_DEFINE_DECORATOR</secondary></indexterm>
<para><computeroutput>doctest::DOCTEST_DEFINE_DECORATOR (expected_failures , int , 0 )</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a44ea7d81a1561f2222b8ffa69eecc599"/><section>
    <title>DOCTEST_DEFINE_DECORATOR()<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>DOCTEST_DEFINE_DECORATOR</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>DOCTEST_DEFINE_DECORATOR</secondary></indexterm>
<para><computeroutput>doctest::DOCTEST_DEFINE_DECORATOR (may_fail , bool , true )</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a0da07f59e77fcb14943788b2c85e2355"/><section>
    <title>DOCTEST_DEFINE_DECORATOR()<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>DOCTEST_DEFINE_DECORATOR</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>DOCTEST_DEFINE_DECORATOR</secondary></indexterm>
<para><computeroutput>doctest::DOCTEST_DEFINE_DECORATOR (should_fail , bool , true )</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a0ce903d8e37a8fdc185f6e8c73f9b1dd"/><section>
    <title>DOCTEST_DEFINE_DECORATOR()<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>DOCTEST_DEFINE_DECORATOR</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>DOCTEST_DEFINE_DECORATOR</secondary></indexterm>
<para><computeroutput>doctest::DOCTEST_DEFINE_DECORATOR (skip , bool , true )</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a104a0e533475e45acbddd9266c4d687e"/><section>
    <title>DOCTEST_DEFINE_DECORATOR()<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>DOCTEST_DEFINE_DECORATOR</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>DOCTEST_DEFINE_DECORATOR</secondary></indexterm>
<para><computeroutput>doctest::DOCTEST_DEFINE_DECORATOR (test_suite , const char * , &quot;&quot; )</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a09d01a6e97677b7bb508bf925e421963"/><section>
    <title>DOCTEST_DEFINE_DECORATOR()<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>DOCTEST_DEFINE_DECORATOR</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>DOCTEST_DEFINE_DECORATOR</secondary></indexterm>
<para><computeroutput>doctest::DOCTEST_DEFINE_DECORATOR (timeout , double , 0 )</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a3fcfa9f7f479ad1b46d142e210c8ca75"/><section>
    <title>failureString()</title>
<indexterm><primary>failureString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>failureString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const char * doctest::failureString (<link linkend="_namespacedoctest_1_1assert_type_1ae1bb5bed722f34f1c38b83cb19d326d3">assertType::Enum</link> at)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a13c02a469cfc2264d547fc0fc3a55569"/><section>
    <title>getContextOptions()</title>
<indexterm><primary>getContextOptions</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>getContextOptions</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const <link linkend="_structdoctest_1_1_context_options">ContextOptions</link> * doctest::getContextOptions ( )</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1ab9a88e4c19857cd86a0f037d27bcad72"/><section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool doctest::operator!= (const <link linkend="_classdoctest_1_1_string">String</link> &amp; lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp; rhs)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1afa15b277b9a277793b7adf129e0128d9"/><section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool doctest::operator&lt; (const <link linkend="_classdoctest_1_1_string">String</link> &amp; lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp; rhs)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a7817aba561f42fc42fdccb1b312c7678"/><section>
    <title>operator&lt;&lt;()</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> &amp; doctest::operator&lt;&lt; (<link linkend="_doctest_8h_1a116af65cb5e924b33ad9d9ecd7a783f3">std::ostream</link> &amp; s, const <link linkend="_classdoctest_1_1_string">String</link> &amp; in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a27c6c308e814ad9384499bafc03f9e39"/><section>
    <title>operator&lt;=()</title>
<indexterm><primary>operator&lt;=</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>operator&lt;=</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool doctest::operator&lt;= (const <link linkend="_classdoctest_1_1_string">String</link> &amp; lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp; rhs)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1ae332e5e775f83a532884303780f79f9f"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool doctest::operator== (const <link linkend="_classdoctest_1_1_string">String</link> &amp; lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp; rhs)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1acef5990b03a973c74ff2dd6cfc112913"/><section>
    <title>operator&gt;()</title>
<indexterm><primary>operator&gt;</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>operator&gt;</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool doctest::operator&gt; (const <link linkend="_classdoctest_1_1_string">String</link> &amp; lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp; rhs)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1ac32accb42e937cf870de2f6865ea236a"/><section>
    <title>operator&gt;=()</title>
<indexterm><primary>operator&gt;=</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>operator&gt;=</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool doctest::operator&gt;= (const <link linkend="_classdoctest_1_1_string">String</link> &amp; lhs, const <link linkend="_classdoctest_1_1_string">String</link> &amp; rhs)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a8e23e6bb4c6982688652060dbe41385d"/><section>
    <title>registerExceptionTranslator()</title>
<indexterm><primary>registerExceptionTranslator</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>registerExceptionTranslator</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>int doctest::registerExceptionTranslator (<link linkend="_classdoctest_1_1_string">String</link>(*)(T) translateFunction)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a9e878a811f7bf0a615b3a39de3004673"/><section>
    <title>registerReporter()</title>
<indexterm><primary>registerReporter</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>registerReporter</secondary></indexterm>
<computeroutput>template&lt;typename Reporter &gt; </computeroutput><para><computeroutput>int doctest::registerReporter (const char * name, int priority, bool isReporter)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a31b19b71f2b30f77f84b6a8bb4943925"/><section>
    <title>skipPathFromFilename()</title>
<indexterm><primary>skipPathFromFilename</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>skipPathFromFilename</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> const char * doctest::skipPathFromFilename (const char * file)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a70fd23e88074d38b9d61476005305df5"/><section>
    <title>toString()<computeroutput>[1/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (bool in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1af106dff2a0c068d301349b754c466378"/><section>
    <title>toString()<computeroutput>[2/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (char in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a1f910fdc13d84a538090b959a97a6fa5"/><section>
    <title>toString()<computeroutput>[3/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (char signed in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1ae2c3e60e3ee32da5d8fc4f778b7a225a"/><section>
    <title>toString()<computeroutput>[4/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (char unsigned in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a63aa06a8555c5aa34a7a6e76e87a3bca"/><section>
    <title>toString()<computeroutput>[5/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (const <link linkend="_classdoctest_1_1_approx">Approx</link> &amp; in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a8907bf35788959391343a2304f004e17"/><section>
    <title>toString()<computeroutput>[6/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classdoctest_1_1_string">String</link> doctest::toString (const <link linkend="_doctest_8h_1af2901cafb023c57fb672ccb1bf14f2eb">DOCTEST_REF_WRAP</link>(T) value)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a43b51978c9505f682cbff9462a02f8af"/><section>
    <title>toString()<computeroutput>[7/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (double in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1ae4e12dd9865bb31f417f9df0c41813cf"/><section>
    <title>toString()<computeroutput>[8/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (double long in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a68660ce630bd88a551ab3108709e6592"/><section>
    <title>toString()<computeroutput>[9/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (float in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a0318ba5a1fbeb9e2fe84227a2f007dac"/><section>
    <title>toString()<computeroutput>[10/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (int in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1aac941ce13f416e31d72d9fb114681bb2"/><section>
    <title>toString()<computeroutput>[11/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (int long in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1ada057336406349bd947f26b1ddb97bd0"/><section>
    <title>toString()<computeroutput>[12/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (int long long in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a0996f0f29ee1288fc2363c958fd4fd05"/><section>
    <title>toString()<computeroutput>[13/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (int long long unsigned in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1ac1c9dfb0453eb7d222bed9d2a4cf62fd"/><section>
    <title>toString()<computeroutput>[14/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (int long unsigned in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1aaff61384b81d700818094342c6110d2c"/><section>
    <title>toString()<computeroutput>[15/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (int short in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a04b10595f3fac969e7682a48fd3ad0c6"/><section>
    <title>toString()<computeroutput>[16/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (int short unsigned in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a6de63ae787cb530ee050b3632106907d"/><section>
    <title>toString()<computeroutput>[17/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (int unsigned in)</computeroutput></para></section>
<anchor xml:id="_namespacedoctest_1a88b03675f9b7b8afe5e6d4fa15117181"/><section>
    <title>toString()<computeroutput>[18/18]</computeroutput></title>
<indexterm><primary>toString</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>toString</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> <link linkend="_classdoctest_1_1_string">String</link> doctest::toString (std::nullptr_t in)</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_namespacedoctest_1a0b03060093b3894c976b6ae84e55f3f2"/><section>
    <title>is_running_in_test</title>
<indexterm><primary>is_running_in_test</primary><secondary>doctest</secondary></indexterm>
<indexterm><primary>doctest</primary><secondary>is_running_in_test</secondary></indexterm>
<para><computeroutput><link linkend="_doctest_8h_1a9c16ffc635ec47f07797d21ede26b1a5">DOCTEST_INTERFACE</link> bool doctest::is_running_in_test<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
